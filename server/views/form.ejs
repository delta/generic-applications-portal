<!DOCTYPE html>
<html>
<head>
    <title>Faculty Recruitment | NIT Trichy</title>
    <%- include('partials/commonHeaderIncludes.partial.ejs') %>
</head>
<body>
    <%- include('partials/topNavbar.partial.ejs') %>

    <div class="container-fluid" style="margin-top: 10px; padding-bottom: 75px">
            <div class="row">
                <div class="col-2"><div class="nav flex-column nav-pills" id="v-pills-tab" role="tablist"><a class="nav-link active" id="v-pills-Personal-Information-tab" data-toggle="pill" href="#v-pills-Personal-Information" role="tab" aria-controls="v-pills-Personal-Information" aria-expanded="true">1. Personal Information</a><a class="nav-link " id="v-pills-High-School-Details-tab" data-toggle="pill" href="#v-pills-High-School-Details" role="tab" aria-controls="v-pills-High-School-Details" aria-expanded="true">2. High School Details</a><a class="nav-link " id="v-pills-Undergraduate-Education-tab" data-toggle="pill" href="#v-pills-Undergraduate-Education" role="tab" aria-controls="v-pills-Undergraduate-Education" aria-expanded="true">3. Undergraduate Education</a><a class="nav-link " id="v-pills-Postgraduate-Education-tab" data-toggle="pill" href="#v-pills-Postgraduate-Education" role="tab" aria-controls="v-pills-Postgraduate-Education" aria-expanded="true">4. Postgraduate Education</a><a class="nav-link " id="v-pills-PhD-Details-tab" data-toggle="pill" href="#v-pills-PhD-Details" role="tab" aria-controls="v-pills-PhD-Details" aria-expanded="true">5. PhD Details</a><a class="nav-link " id="v-pills-Present-Employer-tab" data-toggle="pill" href="#v-pills-Present-Employer" role="tab" aria-controls="v-pills-Present-Employer" aria-expanded="true">6. Present Employer</a><a class="nav-link " id="v-pills-Research-Experience-tab" data-toggle="pill" href="#v-pills-Research-Experience" role="tab" aria-controls="v-pills-Research-Experience" aria-expanded="true">7. Research Experience</a><a class="nav-link " id="v-pills-Professional-Experience-tab" data-toggle="pill" href="#v-pills-Professional-Experience" role="tab" aria-controls="v-pills-Professional-Experience" aria-expanded="true">8. Professional Experience</a><a class="nav-link " id="v-pills-Sponsored-Project-tab" data-toggle="pill" href="#v-pills-Sponsored-Project" role="tab" aria-controls="v-pills-Sponsored-Project" aria-expanded="true">9. Sponsored Project</a><a class="nav-link " id="v-pills-Patent-Details-tab" data-toggle="pill" href="#v-pills-Patent-Details" role="tab" aria-controls="v-pills-Patent-Details" aria-expanded="true">10. Patent Details</a><a class="nav-link " id="v-pills-Research-Publications-tab" data-toggle="pill" href="#v-pills-Research-Publications" role="tab" aria-controls="v-pills-Research-Publications" aria-expanded="true">11. Research Publications</a><a class="nav-link " id="v-pills-Other-Publications-tab" data-toggle="pill" href="#v-pills-Other-Publications" role="tab" aria-controls="v-pills-Other-Publications" aria-expanded="true">12. Other Publications</a><a class="nav-link " id="v-pills-Fellow-tab" data-toggle="pill" href="#v-pills-Fellow" role="tab" aria-controls="v-pills-Fellow" aria-expanded="true">13. Fellow</a><a class="nav-link " id="v-pills-Conferences-tab" data-toggle="pill" href="#v-pills-Conferences" role="tab" aria-controls="v-pills-Conferences" aria-expanded="true">14. Conferences</a><a class="nav-link " id="v-pills-Workshops---Training-Programs-tab" data-toggle="pill" href="#v-pills-Workshops---Training-Programs" role="tab" aria-controls="v-pills-Workshops---Training-Programs" aria-expanded="true">15. Workshops / Training Programs</a><a class="nav-link " id="v-pills-Thesis-spervised-tab" data-toggle="pill" href="#v-pills-Thesis-spervised" role="tab" aria-controls="v-pills-Thesis-spervised" aria-expanded="true">16. Thesis spervised</a><a class="nav-link " id="v-pills-Administrative-and-Other-Activities-tab" data-toggle="pill" href="#v-pills-Administrative-and-Other-Activities" role="tab" aria-controls="v-pills-Administrative-and-Other-Activities" aria-expanded="true">17. Administrative and Other Activities</a><a class="nav-link " id="v-pills-Placement-Percentage-tab" data-toggle="pill" href="#v-pills-Placement-Percentage" role="tab" aria-controls="v-pills-Placement-Percentage" aria-expanded="true">18. Placement Percentage</a><a class="nav-link " id="v-pills-Miscellaneous-tab" data-toggle="pill" href="#v-pills-Miscellaneous" role="tab" aria-controls="v-pills-Miscellaneous" aria-expanded="true">19. Miscellaneous</a><a class="nav-link " id="v-pills-Name-and-address-of-Reference-tab" data-toggle="pill" href="#v-pills-Name-and-address-of-Reference" role="tab" aria-controls="v-pills-Name-and-address-of-Reference" aria-expanded="true">20. Name and address of Reference</a></div></div>
                <div class="col-10"><div class="tab-content" id="v-pills-tabContent"><div class="tab-pane fade show active" id="v-pills-Personal-Information" role="tabpanel" aria-labelledby="v-pills-Personal-Information-tab">
        <form method='POST' id='frm_PersonalInformation'>
          <div class='section'>
            <h2 style="padding-bottom: 10px; border-bottom: 2px solid black">Personal Information</h2>
            
        <div class="instructions">
    <h5 style="margin-left: -10px">Instructions for this page</h5>
    <p style="color:red">
            <li name="">All fields are mandatory</li>
            <li name="">Photocopy proof required are: Date of Birth, Address Proof, Category Proof (if category proof is not attached, the applicant will be considered as UR category)</li>
            <li name="">The image file should be JPG, JPEG, png,gif format.</li>
            <li name="">Dimension 200 x 300 pixels(preferred). </li>
            <li name="">Size of image file be between 20kb-200kb.&quot;&gt;</li>
        </p>
  </div>
  <hr>
        <div class='subsection' id="Applicationinformation">
            <br><h4 style="color: #1bbae1">&gt; Application information</h4><br>
            
            <div class="form-group row" id="fieldset__50291">
        <div class="col row">
                <label  id="label-DepartmentAppliedFor" class="col-form-label col-md-3" for="DepartmentAppliedFor">Department Applied For<span id="asterisk-DepartmentAppliedFor" style="color:red">*</span></label><div class="col-md-6"><select name="DepartmentAppliedFor" placeholder="Please select" onchange="triggers[&quot;DepartmentAppliedFor&quot;].forEach(function(f, i) { f.call(this, event) });" id="DepartmentAppliedFor" class="custom-select form-control form-control-sm"><option>Please select</option>
                    <option>Architecture</option>
                    <option>Civil Engineering</option>
                    <option>Chemical Engineering</option>
                    <option>Computer Science Engineering</option>
                    <option>Electronics and Communication Engineering</option>
                    <option>Electricals and Electronics Engineering</option>
                    <option>Instrumentation and Control Engineering</option>
                    <option>Mechanical Engineering</option>
                    <option>Metallurgical and Materials Engineering</option>
                    <option>Production Engineering</option>
                    <option>Energy and Environment</option>
                    <option>Physics</option>
                    <option>Chemistry</option>
                    <option>Mathematics</option>
                    <option>Humanities (English/Economics)</option>
                    <option>Computer Application</option>
                    <option>Management Studies</option>
                </select><span class="error" id="error-DepartmentAppliedFor" style="display:none">Error</span></div>
            </div></div>
            <div class="form-group row" id="fieldset__00532">
        <div class="col row">
                <label  id="label-PostAppliedFor" class="col-form-label col-md-3" for="PostAppliedFor">Post Applied For<span id="asterisk-PostAppliedFor" style="color:red">*</span></label><div class="col-md-6"><select name="PostAppliedFor" placeholder="Please select" onchange="triggers[&quot;PostAppliedFor&quot;].forEach(function(f, i) { f.call(this, event) });" id="PostAppliedFor" class="custom-select form-control form-control-sm"><option>Please select</option>
                    <option>Assistant Professor (6000)</option>
                    <option>Assistant Professor (7000)</option>
                    <option>Assistant Professor (8000)</option>
                    <option>Associate Professor 1</option>
                    <option>Associate Professor 2</option>
                    <option>Associate Professor 3</option>
                    <option>Professor 1</option>
                    <option>Professor 2</option>
                    <option>Professor 3</option>
                </select><span class="error" id="error-PostAppliedFor" style="display:none">Error</span></div>
            </div></div>
            
            <div class="form-group row" id="fieldset__01426">
        <div class="col row">
                <label  id="label-ApplicationSpecialization" class="col-form-label col-md-3" for="ApplicationSpecialization">Specialization<span id="asterisk-ApplicationSpecialization" style="color:red">*</span></label><div class="col-md-3"><input name="ApplicationSpecialization" onchange="triggers[&quot;ApplicationSpecialization&quot;].forEach(function(f, i) { f.call(this, event) });" id="ApplicationSpecialization" class="form-control form-control-sm" placeholder="Specialization"><span class="error" id="error-ApplicationSpecialization" style="display:none">Error</span></div>
            </div></div>
            
            <div class="form-group row" id="fieldset__68149">
        <div class="col row">
                <label  id="label-internalCandidate" class="col-form-label col-md-3" for="internalCandidate">Internal Candidate of NITT?<span id="asterisk-internalCandidate" style="color:red">*</span></label><div class="col-md-3"><select name="internalCandidate" placeholder="Please select" onchange="triggers[&quot;internalCandidate&quot;].forEach(function(f, i) { f.call(this, event) });" id="internalCandidate" class="custom-select form-control form-control-sm"><option>Please select</option>
                    <option>Yes</option>
                    <option>No</option>
                </select><span class="error" id="error-internalCandidate" style="display:none">Error</span></div>
                <label  id="label-StaffNumber" class="col-form-label col-md-3" for="StaffNumber">Staff Number<span id="asterisk-StaffNumber" style="color:red">*</span></label><div class="col-md-3"><input name="StaffNumber" placeholder="Staff Number" onchange="triggers[&quot;StaffNumber&quot;].forEach(function(f, i) { f.call(this, event) });" id="StaffNumber" class="form-control form-control-sm"><span class="error" id="error-StaffNumber" style="display:none">Error</span></div>
            </div></div>
            
            <div class="form-group row" id="fieldset__77660">
        <div class="col row">
                <label  id="label-DateofLastPromotion" class="col-form-label col-md-3" for="DateofLastPromotion">Date of Last Promotion<span id="asterisk-DateofLastPromotion" style="color:red">*</span></label><div class="col-md-3"><input name="DateofLastPromotion" placeholder="dd/mm/yyyy" onchange="triggers[&quot;DateofLastPromotion&quot;].forEach(function(f, i) { f.call(this, event) });" id="DateofLastPromotion" class="form-control form-control-sm"><span class="error" id="error-DateofLastPromotion" style="display:none">Error</span></div>
            </div></div>
        
        </div>
        <div class='subsection' id="Biographicinformation">
            <br><h4 style="color: #1bbae1">&gt; Biographic information</h4><br>
            
            <div class="form-group row" id="fieldset__86172">
        <div class="col row">
                <label  id="label-FullName" class="col-form-label col-md-3" for="FullName">Full Name<span id="asterisk-FullName" style="color:red">*</span></label><div class="col-md-6"><input name="FullName" placeholder="Full Name" onchange="triggers[&quot;FullName&quot;].forEach(function(f, i) { f.call(this, event) });" id="FullName" class="form-control form-control-sm"><span class="error" id="error-FullName" style="display:none">Error</span></div>
            </div></div>
            
            <div class="form-group row" id="fieldset__89656">
        <div class="col row">
                <label  id="label-FathersHusbandsName" class="col-form-label col-md-3" for="FathersHusbandsName">Father's/Husband's Name<span id="asterisk-FathersHusbandsName" style="color:red">*</span></label><div class="col-md-3"><input name="FathersHusbandsName" onchange="triggers[&quot;FathersHusbandsName&quot;].forEach(function(f, i) { f.call(this, event) });" id="FathersHusbandsName" class="form-control form-control-sm" placeholder="Father&apos;s/Husband&apos;s Name"><span class="error" id="error-FathersHusbandsName" style="display:none">Error</span></div>
            </div></div>
            
            <div class="form-group row" id="fieldset__87907">
        <div class="col row">
                <label  id="label-dob" class="col-form-label col-md-3" for="dob">Date of Birth<span id="asterisk-dob" style="color:red">*</span></label><div class="col-md-3"><input name="dob" placeholder="dd/mm/yyyy" onchange="triggers[&quot;dob&quot;].forEach(function(f, i) { f.call(this, event) });" id="dob" class="form-control form-control-sm"><span class="error" id="error-dob" style="display:none">Error</span></div>
                <label  id="label-Age" class="col-form-label col-md-3" for="Age">Age<span id="asterisk-Age" style="color:red">*</span></label><div class="col-md-3"><input name="Age" placeholder="In Years" readonly onchange="triggers[&quot;Age&quot;].forEach(function(f, i) { f.call(this, event) });" id="Age" class="form-control form-control-sm"><span class="error" id="error-Age" style="display:none">Error</span></div>
            </div></div>
            
            <div class="form-group row" id="fieldset__38904">
        <div class="col row">
                <label  id="label-Gender" class="col-form-label col-md-3" for="Gender">Gender<span id="asterisk-Gender" style="color:red">*</span></label><div class="col-md-3"><select name="Gender" placeholder="Please select" onchange="triggers[&quot;Gender&quot;].forEach(function(f, i) { f.call(this, event) });" id="Gender" class="custom-select form-control form-control-sm"><option>Please select</option>
                    <option>Male</option>
                    <option>Female</option>
                    <option>Transgender</option>
                    <option>I don&apos;t want to disclose</option>
                </select><span class="error" id="error-Gender" style="display:none">Error</span></div>
                <label  id="label-Category" class="col-form-label col-md-3" for="Category">Category<span id="asterisk-Category" style="color:red">*</span></label><div class="col-md-3"><select name="Category" placeholder="Please select" onchange="triggers[&quot;Category&quot;].forEach(function(f, i) { f.call(this, event) });" id="Category" class="custom-select form-control form-control-sm"><option>Please select</option>
                    <option>General</option>
                    <option>Other Backward Classes (OBC)</option>
                    <option>Scheduled Cast (SC)</option>
                    <option>Scheduled Tribe (ST)</option>
                    <option>Person with disabilities</option>
                </select><span class="error" id="error-Category" style="display:none">Error</span></div>
            </div></div>
            
            <div class="form-group row" id="fieldset__64776">
        <div class="col row">
                <label  id="label-Nationality" class="col-form-label col-md-3" for="Nationality">Nationality<span id="asterisk-Nationality" style="color:red">*</span></label><div class="col-md-3"><select name="Nationality" placeholder="Please select" onchange="triggers[&quot;Nationality&quot;].forEach(function(f, i) { f.call(this, event) });" id="Nationality" class="custom-select form-control form-control-sm"><option>Please select</option>
                    <option>Indian</option>
                </select><span class="error" id="error-Nationality" style="display:none">Error</span></div>
                
                <label  id="label-StateUT" class="col-form-label col-md-3" for="StateUT">State/UT<span id="asterisk-StateUT" style="color:red">*</span></label><div class="col-md-3"><input name="StateUT" placeholder="State/UT to which you belong" onchange="triggers[&quot;StateUT&quot;].forEach(function(f, i) { f.call(this, event) });" id="StateUT" class="form-control form-control-sm"><span class="error" id="error-StateUT" style="display:none">Error</span></div>
            </div></div>
            
            <div class="form-group row" id="fieldset__95622">
        <div class="col row">
                <label  id="label-MaritalStatus" class="col-form-label col-md-3" for="MaritalStatus">Marital Status<span id="asterisk-MaritalStatus" style="color:red">*</span></label><div class="col-md-3"><select name="MaritalStatus" placeholder="Please select" onchange="triggers[&quot;MaritalStatus&quot;].forEach(function(f, i) { f.call(this, event) });" id="MaritalStatus" class="custom-select form-control form-control-sm"><option>Please select</option>
                    <option>Single</option>
                    <option>Married</option>
                    <option>Widowed</option>
                    <option>Divorced</option>
                    <option>Separated</option>
                </select><span class="error" id="error-MaritalStatus" style="display:none">Error</span></div>
            </div></div>
            
            <div class="form-group row" id="fieldset__64269">
        <div class="col row">
                <label  id="label-PANnumber" class="col-form-label col-md-3" for="PANnumber">PAN number<span id="asterisk-PANnumber" style="color:red">*</span></label><div class="col-md-3"><input name="PANnumber" onchange="triggers[&quot;PANnumber&quot;].forEach(function(f, i) { f.call(this, event) });" id="PANnumber" class="form-control form-control-sm" placeholder="PAN number"><span class="error" id="error-PANnumber" style="display:none">Error</span></div>              
                <label  id="label-AadhaarNumber" class="col-form-label col-md-3" for="AadhaarNumber">Aadhaar Number<span id="asterisk-AadhaarNumber" style="color:red">*</span></label><div class="col-md-3"><input name="AadhaarNumber" onchange="triggers[&quot;AadhaarNumber&quot;].forEach(function(f, i) { f.call(this, event) });" id="AadhaarNumber" class="form-control form-control-sm" placeholder="Aadhaar Number"><span class="error" id="error-AadhaarNumber" style="display:none">Error</span></div>
            </div></div>
        
        </div>
        <div class='subsection' id="ContactInformation">
            <br><h4 style="color: #1bbae1">&gt; Contact Information</h4><br>
            
            <div class="form-group row" id="fieldset__15640">
        <div class="col row">
                <label  id="label-Email" class="col-form-label col-md-3" for="Email">Email<span id="asterisk-Email" style="color:red">*</span></label><div class="col-md-3"><input name="Email" readonly onchange="triggers[&quot;Email&quot;].forEach(function(f, i) { f.call(this, event) });" id="Email" class="form-control form-control-sm" placeholder="Email"><span class="error" id="error-Email" style="display:none">Error</span></div>
            </div></div>
            
            <div class="form-group row" id="fieldset__98380">
        <div class="col row">
                <label  id="label-ContactNobrwithcountrycode" class="col-form-label col-md-3" for="ContactNobrwithcountrycode">Contact No.<br>(with country code)<span id="asterisk-ContactNobrwithcountrycode" style="color:red">*</span></label><div class="col-md-3"><input name="ContactNobrwithcountrycode" placeholder="Contact No. (Preferably cell phone)" onchange="triggers[&quot;ContactNobrwithcountrycode&quot;].forEach(function(f, i) { f.call(this, event) });" id="ContactNobrwithcountrycode" class="form-control form-control-sm"><span class="error" id="error-ContactNobrwithcountrycode" style="display:none">Error</span></div>
                <label  id="label-AlternativeContactNo" class="col-form-label col-md-3" for="AlternativeContactNo">Alternative Contact No.<span id="asterisk-AlternativeContactNo" style="color:red">*</span></label><div class="col-md-3"><input name="AlternativeContactNo" placeholder="Alternative Contact No." onchange="triggers[&quot;AlternativeContactNo&quot;].forEach(function(f, i) { f.call(this, event) });" id="AlternativeContactNo" class="form-control form-control-sm"><span class="error" id="error-AlternativeContactNo" style="display:none">Error</span></div>
            </div></div>
            
            <div class="form-group row" id="fieldset__89987">
        <div class="col row">
                <label  id="label-Address" class="col-form-label col-md-3" for="Address">Address<span id="asterisk-Address" style="color:red">*</span></label><div class="col-md-3"><textarea name="Address" placeholder="Mailing address" onchange="triggers[&quot;Address&quot;].forEach(function(f, i) { f.call(this, event) });" id="Address" class="form-control form-control-sm"></textarea><span class="error" id="error-Address" style="display:none">Error</span></div>
                <div class="col-md-3"><textarea name="PermanentAddress" placeholder="Permanent address" onchange="triggers[&quot;PermanentAddress&quot;].forEach(function(f, i) { f.call(this, event) });" id="PermanentAddress" class="form-control form-control-sm"></textarea><span class="error" id="error-PermanentAddress" style="display:none">Error</span></div>
            </div></div>
            
            <div class="form-group row" id="fieldset__49425">
        <div class="col row">
                <label  id="label-Photo" class="col-form-label col-md-3" for="Photo">Photo</label><div class="col-md-9">
            <div class="row">
                <div class="col-md-6"><input preview="4" type="file" name="Photo" accept="image/jpeg,image/png" onchange="$f[&quot;Photo&quot;] = (this.files)?this.files[0]:null; toggleRemoveButtonAndPreview_Photo(); validate(&apos;Photo&apos;);" id="Photo" class="form-control-file" placeholder="Photo"></div>
                <div class="col-md-4" id="filePreview_Photo"></div>
                <div class="col-md-1">
                    <a role='button' href='#' id="removeUploadButton_Photo" title='Remove upload' class='btn btn-outline-danger btn-sm' onclick='removeUpload_Photo(event)'><span class='fa fa-minus-circle'></span></a>
                </div>
            </div>
            <div> <span class="error" id="error-Photo" style="display:none">Error</span> </div></div>
            </div></div>
        
        </div>
    
            <div class="text-center row"><button type="submit" class="btn btn-primary" style="margin: 15px auto">Save</button></div>
          </div>
        </form></div><div class="tab-pane fade " id="v-pills-High-School-Details" role="tabpanel" aria-labelledby="v-pills-High-School-Details-tab">
        <form method='POST' id='frm_HighSchoolDetails'>
          <div class='section'>
            <h2 style="padding-bottom: 10px; border-bottom: 2px solid black">High School Details</h2>
            
        <div class="instructions">
    <h5 style="margin-left: -10px">Instructions for this page</h5>
    <p style="color:red">
            <li name="">All fields are mandatory&quot;</li>
        </p>
  </div>
  <hr>
        
    <div id="matriculationDetails_wrapper">
      <div id="matriculationDetails"></div>
      <hr>
      <a role="button" href="#" class="btn btn-success btn-sm" title='Add row' id="rowAdder_matriculationDetails" onclick="addRow_matriculationDetails(event)">
        <span class="fa fa-plus-square"></span> Add row
      </a>
    </div>
    
            <div class="text-center row"><button type="submit" class="btn btn-primary" style="margin: 15px auto">Save</button></div>
          </div>
        </form></div><div class="tab-pane fade " id="v-pills-Undergraduate-Education" role="tabpanel" aria-labelledby="v-pills-Undergraduate-Education-tab">
        <form method='POST' id='frm_UndergraduateEducation'>
          <div class='section'>
            <h2 style="padding-bottom: 10px; border-bottom: 2px solid black">Undergraduate Education</h2>
            
        <div class="instructions">
    <h5 style="margin-left: -10px">Instructions for this page</h5>
    <p style="color:red">
            <li name="">All the fields are mandatory</li>
            <li name="">Only First Class is eligible for UG</li>
            <li name="">Photocopy of Degree Certificate to be attached</li>
        </p>
  </div>
  <hr>
        <div class="form-group row" id="fieldset__88342">
        <div class="col row">
            <label  id="label-UGDegreeName" class="col-form-label col-md-3" for="UGDegreeName">Degree Name<span id="asterisk-UGDegreeName" style="color:red">*</span></label><div class="col-md-3"><input name="UGDegreeName" onchange="triggers[&quot;UGDegreeName&quot;].forEach(function(f, i) { f.call(this, event) });" id="UGDegreeName" class="form-control form-control-sm" placeholder="Degree Name"><span class="error" id="error-UGDegreeName" style="display:none">Error</span></div>
        </div></div>
        <div class="form-group row" id="fieldset__89991">
        <div class="col row">
            <label  id="label-UGSpecialization" class="col-form-label col-md-3" for="UGSpecialization">Specialization<span id="asterisk-UGSpecialization" style="color:red">*</span></label><div class="col-md-3"><input name="UGSpecialization" onchange="triggers[&quot;UGSpecialization&quot;].forEach(function(f, i) { f.call(this, event) });" id="UGSpecialization" class="form-control form-control-sm" placeholder="Specialization"><span class="error" id="error-UGSpecialization" style="display:none">Error</span></div>
            <label  id="label-UGCollege" class="col-form-label col-md-3" for="UGCollege">Name of Institute/College<span id="asterisk-UGCollege" style="color:red">*</span></label><div class="col-md-3"><input name="UGCollege" onchange="triggers[&quot;UGCollege&quot;].forEach(function(f, i) { f.call(this, event) });" id="UGCollege" class="form-control form-control-sm" placeholder="Name of Institute/College"><span class="error" id="error-UGCollege" style="display:none">Error</span></div>
        </div></div>
        <div class="form-group row" id="fieldset__12467">
        <div class="col row">
            <label  id="label-UGYearOfPassing" class="col-form-label col-md-3" for="UGYearOfPassing">Year of Passing<span id="asterisk-UGYearOfPassing" style="color:red">*</span></label><div class="col-md-3"><input name="UGYearOfPassing" onchange="triggers[&quot;UGYearOfPassing&quot;].forEach(function(f, i) { f.call(this, event) });" id="UGYearOfPassing" class="form-control form-control-sm" placeholder="Year of Passing"><span class="error" id="error-UGYearOfPassing" style="display:none">Error</span></div>
            <label  id="label-UGBoardUniv" class="col-form-label col-md-3" for="UGBoardUniv">Board/University<span id="asterisk-UGBoardUniv" style="color:red">*</span></label><div class="col-md-3"><input name="UGBoardUniv" onchange="triggers[&quot;UGBoardUniv&quot;].forEach(function(f, i) { f.call(this, event) });" id="UGBoardUniv" class="form-control form-control-sm" placeholder="Board/University"><span class="error" id="error-UGBoardUniv" style="display:none">Error</span></div>
        </div></div>
        <div class="form-group row" id="fieldset__24057">
        <div class="col row">
            <label  id="label-UGMarksCGPAobtained" class="col-form-label col-md-3" for="UGMarksCGPAobtained">Marks / CGPA obtained<span id="asterisk-UGMarksCGPAobtained" style="color:red">*</span></label><div class="col-md-3"><input name="UGMarksCGPAobtained" onchange="triggers[&quot;UGMarksCGPAobtained&quot;].forEach(function(f, i) { f.call(this, event) });" id="UGMarksCGPAobtained" class="form-control form-control-sm" placeholder="Marks / CGPA obtained"><span class="error" id="error-UGMarksCGPAobtained" style="display:none">Error</span></div>
            <label  id="label-UGMaximummarksCGPA" class="col-form-label col-md-3" for="UGMaximummarksCGPA">Maximum marks / CGPA<span id="asterisk-UGMaximummarksCGPA" style="color:red">*</span></label><div class="col-md-3"><input name="UGMaximummarksCGPA" onchange="triggers[&quot;UGMaximummarksCGPA&quot;].forEach(function(f, i) { f.call(this, event) });" id="UGMaximummarksCGPA" class="form-control form-control-sm" placeholder="Maximum marks / CGPA"><span class="error" id="error-UGMaximummarksCGPA" style="display:none">Error</span></div>
        </div></div>
        <div class="form-group row" id="fieldset__28998">
        <div class="col row">
            <label  id="label-UGMarksCGPA" class="col-form-label col-md-3" for="UGMarksCGPA">% Marks / CGPA<span id="asterisk-UGMarksCGPA" style="color:red">*</span></label><div class="col-md-3"><input name="UGMarksCGPA" onchange="triggers[&quot;UGMarksCGPA&quot;].forEach(function(f, i) { f.call(this, event) });" id="UGMarksCGPA" class="form-control form-control-sm" placeholder="% Marks / CGPA"><span class="error" id="error-UGMarksCGPA" style="display:none">Error</span></div>
            <label  id="label-UGPassedClassDivision" class="col-form-label col-md-3" for="UGPassedClassDivision">Passed Class/Division<span id="asterisk-UGPassedClassDivision" style="color:red">*</span></label><div class="col-md-3"><select name="UGPassedClassDivision" placeholder="Please select" onchange="triggers[&quot;UGPassedClassDivision&quot;].forEach(function(f, i) { f.call(this, event) });" id="UGPassedClassDivision" class="custom-select form-control form-control-sm"><option>Please select</option>
                <option>Yes</option>
                <option>No</option>
            </select><span class="error" id="error-UGPassedClassDivision" style="display:none">Error</span></div>
        </div></div>
        <table id="ugDetails"><thead><tr><th style="width:auto">Semester No.</th><th style="width:auto">Code & Name of subject</th><th style="width:auto">Number of attempts</th><th style="width:auto">Month & Year of Passing</th><th style="width:auto">% of Marks/Grade</th><th>
            <a role="button" href="#" class="btn btn-outline-success btn-sm" title='Add row' id="rowAdder_ugDetails" onclick="addRow_ugDetails(event)">
                <span class="fa fa-plus-square"></span>
            </a>
            </th></tr></thead></table>
    
            <div class="text-center row"><button type="submit" class="btn btn-primary" style="margin: 15px auto">Save</button></div>
          </div>
        </form></div><div class="tab-pane fade " id="v-pills-Postgraduate-Education" role="tabpanel" aria-labelledby="v-pills-Postgraduate-Education-tab">
        <form method='POST' id='frm_PostgraduateEducation'>
          <div class='section'>
            <h2 style="padding-bottom: 10px; border-bottom: 2px solid black">Postgraduate Education</h2>
            
        <div class="form-group row" id="fieldset__91177">
        <div class="col row">
            <label  id="label-PGDegreeName" class="col-form-label col-md-3" for="PGDegreeName">Degree Name<span id="asterisk-PGDegreeName" style="color:red">*</span></label><div class="col-md-6"><input name="PGDegreeName" onchange="triggers[&quot;PGDegreeName&quot;].forEach(function(f, i) { f.call(this, event) });" id="PGDegreeName" class="form-control form-control-sm" placeholder="Degree Name"><span class="error" id="error-PGDegreeName" style="display:none">Error</span></div>
        </div></div>
        <div class="form-group row" id="fieldset__90509">
        <div class="col row">
            <label  id="label-PGSubjectsDiscipline" class="col-form-label col-md-3" for="PGSubjectsDiscipline">PG Subjects/Discipline<span id="asterisk-PGSubjectsDiscipline" style="color:red">*</span></label><div class="col-md-3"><input name="PGSubjectsDiscipline" onchange="triggers[&quot;PGSubjectsDiscipline&quot;].forEach(function(f, i) { f.call(this, event) });" id="PGSubjectsDiscipline" class="form-control form-control-sm" placeholder="PG Subjects/Discipline"><span class="error" id="error-PGSubjectsDiscipline" style="display:none">Error</span></div>
            <label  id="label-PGInstituteName" class="col-form-label col-md-3" for="PGInstituteName">Name of Institute/College<span id="asterisk-PGInstituteName" style="color:red">*</span></label><div class="col-md-4"><textarea name="PGInstituteName" onchange="triggers[&quot;PGInstituteName&quot;].forEach(function(f, i) { f.call(this, event) });" id="PGInstituteName" class="form-control form-control-sm" placeholder="Name of Institute/College"></textarea><span class="error" id="error-PGInstituteName" style="display:none">Error</span></div>
        </div></div>
        <div class="form-group row" id="fieldset__46830">
        <div class="col row">
            <label  id="label-PGYearofPassing" class="col-form-label col-md-3" for="PGYearofPassing">Year of Passing<span id="asterisk-PGYearofPassing" style="color:red">*</span></label><div class="col-md-3"><input name="PGYearofPassing" onchange="triggers[&quot;PGYearofPassing&quot;].forEach(function(f, i) { f.call(this, event) });" id="PGYearofPassing" class="form-control form-control-sm" placeholder="Year of Passing"><span class="error" id="error-PGYearofPassing" style="display:none">Error</span></div>
            <label  id="label-PGBoardUniversity" class="col-form-label col-md-3" for="PGBoardUniversity">Board/University<span id="asterisk-PGBoardUniversity" style="color:red">*</span></label><div class="col-md-3"><input name="PGBoardUniversity" onchange="triggers[&quot;PGBoardUniversity&quot;].forEach(function(f, i) { f.call(this, event) });" id="PGBoardUniversity" class="form-control form-control-sm" placeholder="Board/University"><span class="error" id="error-PGBoardUniversity" style="display:none">Error</span></div>
        </div></div>
        <div class="form-group row" id="fieldset__40582">
        <div class="col row">
            <label  id="label-PGMarksCGPAobtained" class="col-form-label col-md-3" for="PGMarksCGPAobtained">Marks/CGPA obtained<span id="asterisk-PGMarksCGPAobtained" style="color:red">*</span></label><div class="col-md-3"><input name="PGMarksCGPAobtained" onchange="triggers[&quot;PGMarksCGPAobtained&quot;].forEach(function(f, i) { f.call(this, event) });" id="PGMarksCGPAobtained" class="form-control form-control-sm" placeholder="Marks/CGPA obtained"><span class="error" id="error-PGMarksCGPAobtained" style="display:none">Error</span></div>
            <label  id="label-PGMaximumMarksCGPA" class="col-form-label col-md-3" for="PGMaximumMarksCGPA">Maximum Marks/CGPA<span id="asterisk-PGMaximumMarksCGPA" style="color:red">*</span></label><div class="col-md-3"><input name="PGMaximumMarksCGPA" onchange="triggers[&quot;PGMaximumMarksCGPA&quot;].forEach(function(f, i) { f.call(this, event) });" id="PGMaximumMarksCGPA" class="form-control form-control-sm" placeholder="Maximum Marks/CGPA"><span class="error" id="error-PGMaximumMarksCGPA" style="display:none">Error</span></div>
        </div></div>
        <div class="form-group row" id="fieldset__06237">
        <div class="col row">
            <label  id="label-PGMarksCGPA" class="col-form-label col-md-3" for="PGMarksCGPA">% Marks/CGPA<span id="asterisk-PGMarksCGPA" style="color:red">*</span></label><div class="col-md-3"><input name="PGMarksCGPA" onchange="triggers[&quot;PGMarksCGPA&quot;].forEach(function(f, i) { f.call(this, event) });" id="PGMarksCGPA" class="form-control form-control-sm" placeholder="% Marks/CGPA"><span class="error" id="error-PGMarksCGPA" style="display:none">Error</span></div>
            <label  id="label-PGDivision" class="col-form-label col-md-3" for="PGDivision">Division<span id="asterisk-PGDivision" style="color:red">*</span></label><div class="col-md-3"><input name="PGDivision" onchange="triggers[&quot;PGDivision&quot;].forEach(function(f, i) { f.call(this, event) });" id="PGDivision" class="form-control form-control-sm" placeholder="Division"><span class="error" id="error-PGDivision" style="display:none">Error</span></div>
        </div></div>
        <table id="pgDetails"><thead><tr><th style="width:auto">PG Semester No.</th><th style="width:auto">Code & Name of subject</th><th style="width:auto">Number of attempts</th><th style="width:auto">Month & Year of Passing</th><th style="width:auto">% of Marks/Grade</th><th>
            <a role="button" href="#" class="btn btn-outline-success btn-sm" title='Add row' id="rowAdder_pgDetails" onclick="addRow_pgDetails(event)">
                <span class="fa fa-plus-square"></span>
            </a>
            </th></tr></thead></table>
    
            <div class="text-center row"><button type="submit" class="btn btn-primary" style="margin: 15px auto">Save</button></div>
          </div>
        </form></div><div class="tab-pane fade " id="v-pills-PhD-Details" role="tabpanel" aria-labelledby="v-pills-PhD-Details-tab">
        <form method='POST' id='frm_PhDDetails'>
          <div class='section'>
            <h2 style="padding-bottom: 10px; border-bottom: 2px solid black">PhD Details</h2>
            
        <div class="instructions">
    <h5 style="margin-left: -10px">Instructions for this page</h5>
    <p style="color:red">
            <li name="">Only awarded PhD are eligible.</li>
            <li name="">All the fields are mandatory</li>
            <li name="">Photocopy of Awarded Certificate to be attached otherwise the application is rejected</li>
        </p>
  </div>
  <hr>
        <div class="form-group row" id="fieldset__36983">
        <div class="col row">
            <label  id="label-AwardedDate" class="col-form-label col-md-3" for="AwardedDate">Awarded Date: (dd/mm/yyy)<span id="asterisk-AwardedDate" style="color:red">*</span></label><div class="col-md-6"><input name="AwardedDate" placeholder="dd/mm/yyyy" onchange="triggers[&quot;AwardedDate&quot;].forEach(function(f, i) { f.call(this, event) });" id="AwardedDate" class="form-control form-control-sm"><span class="error" id="error-AwardedDate" style="display:none">Error</span></div>
        </div></div>
        <div class="form-group row" id="fieldset__91088">
        <div class="col row">
            <label  id="label-Title" class="col-form-label col-md-3" for="Title">Title<span id="asterisk-Title" style="color:red">*</span></label><div class="col-md-6"><input name="Title" placeholder="Please enter" onchange="triggers[&quot;Title&quot;].forEach(function(f, i) { f.call(this, event) });" id="Title" class="form-control form-control-sm"><span class="error" id="error-Title" style="display:none">Error</span></div>
        </div></div>
        <div class="form-group row" id="fieldset__95975">
        <div class="col row">
            <label  id="label-University" class="col-form-label col-md-3" for="University">University<span id="asterisk-University" style="color:red">*</span></label><div class="col-md-6"><input name="University" placeholder="Please enter" onchange="triggers[&quot;University&quot;].forEach(function(f, i) { f.call(this, event) });" id="University" class="form-control form-control-sm"><span class="error" id="error-University" style="display:none">Error</span></div>
        </div></div>
    
            <div class="text-center row"><button type="submit" class="btn btn-primary" style="margin: 15px auto">Save</button></div>
          </div>
        </form></div><div class="tab-pane fade " id="v-pills-Present-Employer" role="tabpanel" aria-labelledby="v-pills-Present-Employer-tab">
        <form method='POST' id='frm_PresentEmployer'>
          <div class='section'>
            <h2 style="padding-bottom: 10px; border-bottom: 2px solid black">Present Employer</h2>
            
        <div class="form-group row" id="fieldset__70824">
        <div class="col row">
            <label  id="label-EmployerOrganization" class="col-form-label col-md-3" for="EmployerOrganization">Employer Organization<span id="asterisk-EmployerOrganization" style="color:red">*</span></label><div class="col-md-6"><input name="EmployerOrganization" placeholder="Please enter" onchange="triggers[&quot;EmployerOrganization&quot;].forEach(function(f, i) { f.call(this, event) });" id="EmployerOrganization" class="form-control form-control-sm"><span class="error" id="error-EmployerOrganization" style="display:none">Error</span></div>
        </div></div>
        <div class="form-group row" id="fieldset__39701">
        <div class="col row">
            <label  id="label-PositionHeld" class="col-form-label col-md-3" for="PositionHeld">Position Held<span id="asterisk-PositionHeld" style="color:red">*</span></label><div class="col-md-3"><input name="PositionHeld" placeholder="Please enter" onchange="triggers[&quot;PositionHeld&quot;].forEach(function(f, i) { f.call(this, event) });" id="PositionHeld" class="form-control form-control-sm"><span class="error" id="error-PositionHeld" style="display:none">Error</span></div>
            <label  id="label-TypeofEmployer" class="col-form-label col-md-3" for="TypeofEmployer">Type of Employer<span id="asterisk-TypeofEmployer" style="color:red">*</span></label><div class="col-md-3"><select name="TypeofEmployer" placeholder="Please select an option" onchange="triggers[&quot;TypeofEmployer&quot;].forEach(function(f, i) { f.call(this, event) });" id="TypeofEmployer" class="custom-select form-control form-control-sm"><option>Please select an option</option>
                <option value="Government">Government</option>
                <option value="Private">Private</option>
                <option value="PSU/Autonomous Body">PSU/Autonomous Body</option>
            </select><span class="error" id="error-TypeofEmployer" style="display:none">Error</span></div>
        </div></div>
        <div class="form-group row" id="fieldset__20027">
        <div class="col row">
            <label  id="label-WorkedFrom" class="col-form-label col-md-3" for="WorkedFrom">From: (dd/mm/yyyy)<span id="asterisk-WorkedFrom" style="color:red">*</span></label><div class="col-md-3"><input name="WorkedFrom" placeholder="dd/mm/yyyy" onchange="triggers[&quot;WorkedFrom&quot;].forEach(function(f, i) { f.call(this, event) });" id="WorkedFrom" class="form-control form-control-sm"><span class="error" id="error-WorkedFrom" style="display:none">Error</span></div>
            <label  id="label-WorkedTill" class="col-form-label col-md-3" for="WorkedTill">To: (dd/mm/yyyy)<span id="asterisk-WorkedTill" style="color:red">*</span></label><div class="col-md-3"><input name="WorkedTill" placeholder="dd/mm/yyyy" onchange="triggers[&quot;WorkedTill&quot;].forEach(function(f, i) { f.call(this, event) });" id="WorkedTill" class="form-control form-control-sm"><span class="error" id="error-WorkedTill" style="display:none">Error</span></div>            
        </div></div>
        <div class="form-group row" id="fieldset__63000">
        <div class="col row">
            <label  id="label-PayinPayBand" class="col-form-label col-md-3" for="PayinPayBand">Pay in Pay Band</label><div class="col-md-3"><input name="PayinPayBand" placeholder="Please enter" onchange="triggers[&quot;PayinPayBand&quot;].forEach(function(f, i) { f.call(this, event) });" id="PayinPayBand" class="form-control form-control-sm"><span class="error" id="error-PayinPayBand" style="display:none">Error</span></div>
            <label  id="label-AGPGP" class="col-form-label col-md-3" for="AGPGP">AGP/GP</label><div class="col-md-3"><input name="AGPGP" placeholder="Please enter" onchange="triggers[&quot;AGPGP&quot;].forEach(function(f, i) { f.call(this, event) });" id="AGPGP" class="form-control form-control-sm"><span class="error" id="error-AGPGP" style="display:none">Error</span></div>
        </div></div>
        <div class="form-group row" id="fieldset__33944">
        <div class="col row">
            <label  id="label-BasicPay" class="col-form-label col-md-3" for="BasicPay">Basic Pay<span id="asterisk-BasicPay" style="color:red">*</span></label><div class="col-md-6"><input name="BasicPay" placeholder="Please enter" onchange="triggers[&quot;BasicPay&quot;].forEach(function(f, i) { f.call(this, event) });" id="BasicPay" class="form-control form-control-sm"><span class="error" id="error-BasicPay" style="display:none">Error</span></div>
        </div></div>
        <div class="form-group row" id="fieldset__56406">
        <div class="col row">
            <label  id="label-NatureofWork" class="col-form-label col-md-3" for="NatureofWork">Nature of Work<span id="asterisk-NatureofWork" style="color:red">*</span></label><div class="col-md-6"><input name="NatureofWork" placeholder="Please enter" onchange="triggers[&quot;NatureofWork&quot;].forEach(function(f, i) { f.call(this, event) });" id="NatureofWork" class="form-control form-control-sm"><span class="error" id="error-NatureofWork" style="display:none">Error</span></div>
        </div></div>
    
            <div class="text-center row"><button type="submit" class="btn btn-primary" style="margin: 15px auto">Save</button></div>
          </div>
        </form></div><div class="tab-pane fade " id="v-pills-Research-Experience" role="tabpanel" aria-labelledby="v-pills-Research-Experience-tab">
        <form method='POST' id='frm_ResearchExperience'>
          <div class='section'>
            <h2 style="padding-bottom: 10px; border-bottom: 2px solid black">Research Experience</h2>
            
        <div class="form-group row" id="fieldset__53538">
        <div class="col row">
            <label  id="label-ResearchOrganization" class="col-form-label col-md-3" for="ResearchOrganization">Research Organization<span id="asterisk-ResearchOrganization" style="color:red">*</span></label><div class="col-md-6"><input name="ResearchOrganization" placeholder="Please enter" onchange="triggers[&quot;ResearchOrganization&quot;].forEach(function(f, i) { f.call(this, event) });" id="ResearchOrganization" class="form-control form-control-sm"><span class="error" id="error-ResearchOrganization" style="display:none">Error</span></div>
        </div></div>
        <div class="form-group row" id="fieldset__98888">
        <div class="col row">
            <label  id="label-ResearchPositionHeld" class="col-form-label col-md-3" for="ResearchPositionHeld">Research Position Held<span id="asterisk-ResearchPositionHeld" style="color:red">*</span></label><div class="col-md-6"><input name="ResearchPositionHeld" placeholder="Please enter" onchange="triggers[&quot;ResearchPositionHeld&quot;].forEach(function(f, i) { f.call(this, event) });" id="ResearchPositionHeld" class="form-control form-control-sm"><span class="error" id="error-ResearchPositionHeld" style="display:none">Error</span></div>
        </div></div>
        <div class="form-group row" id="fieldset__79114">
        <div class="col row">
            <label  id="label-ResearchFrom" class="col-form-label col-md-3" for="ResearchFrom">From: (dd/mm/yyyy)<span id="asterisk-ResearchFrom" style="color:red">*</span></label><div class="col-md-3"><input name="ResearchFrom" placeholder="dd/mm/yyyy" onchange="triggers[&quot;ResearchFrom&quot;].forEach(function(f, i) { f.call(this, event) });" id="ResearchFrom" class="form-control form-control-sm"><span class="error" id="error-ResearchFrom" style="display:none">Error</span></div>
            <label  id="label-ResearchTill" class="col-form-label col-md-3" for="ResearchTill">To: (dd/mm/yyyy)<span id="asterisk-ResearchTill" style="color:red">*</span></label><div class="col-md-3"><input name="ResearchTill" placeholder="dd/mm/yyyy" onchange="triggers[&quot;ResearchTill&quot;].forEach(function(f, i) { f.call(this, event) });" id="ResearchTill" class="form-control form-control-sm"><span class="error" id="error-ResearchTill" style="display:none">Error</span></div>            
        </div></div>
        <div class="form-group row" id="fieldset__58104">
        <div class="col row">
            <label  id="label-TotalResearchGrant" class="col-form-label col-md-3" for="TotalResearchGrant">Total Research Grant<span id="asterisk-TotalResearchGrant" style="color:red">*</span></label><div class="col-md-6"><input name="TotalResearchGrant" placeholder="Please enter" onchange="triggers[&quot;TotalResearchGrant&quot;].forEach(function(f, i) { f.call(this, event) });" id="TotalResearchGrant" class="form-control form-control-sm"><span class="error" id="error-TotalResearchGrant" style="display:none">Error</span></div>
        </div></div>
        <div class="form-group row" id="fieldset__17501">
        <div class="col row">
            <label  id="label-ReasonforLeaving" class="col-form-label col-md-3" for="ReasonforLeaving">Reason for Leaving<span id="asterisk-ReasonforLeaving" style="color:red">*</span></label><div class="col-md-6"><input name="ReasonforLeaving" placeholder="Please enter" onchange="triggers[&quot;ReasonforLeaving&quot;].forEach(function(f, i) { f.call(this, event) });" id="ReasonforLeaving" class="form-control form-control-sm"><span class="error" id="error-ReasonforLeaving" style="display:none">Error</span></div>
        </div></div>
    
            <div class="text-center row"><button type="submit" class="btn btn-primary" style="margin: 15px auto">Save</button></div>
          </div>
        </form></div><div class="tab-pane fade " id="v-pills-Professional-Experience" role="tabpanel" aria-labelledby="v-pills-Professional-Experience-tab">
        <form method='POST' id='frm_ProfessionalExperience'>
          <div class='section'>
            <h2 style="padding-bottom: 10px; border-bottom: 2px solid black">Professional Experience</h2>
            
        <table id="teachingExperience"><thead><tr><th style="width:auto">Name Of Organization</th><th style="width:auto">Address Of Organization</th><th style="width:auto">Nature of work</th><th style="width:auto">payscale</th><th style="width:auto">From</th><th style="width:auto">To</th><th style="width:auto">Type of Organization</th><th style="width:auto">Reasons for leaving</th><th>
            <a role="button" href="#" class="btn btn-outline-success btn-sm" title='Add row' id="rowAdder_teachingExperience" onclick="addRow_teachingExperience(event)">
                <span class="fa fa-plus-square"></span>
            </a>
            </th></tr></thead></table>
    
            <div class="text-center row"><button type="submit" class="btn btn-primary" style="margin: 15px auto">Save</button></div>
          </div>
        </form></div><div class="tab-pane fade " id="v-pills-Sponsored-Project" role="tabpanel" aria-labelledby="v-pills-Sponsored-Project-tab">
        <form method='POST' id='frm_SponsoredProject'>
          <div class='section'>
            <h2 style="padding-bottom: 10px; border-bottom: 2px solid black">Sponsored Project</h2>
            
        <div class="form-group row" id="fieldset__13801">
        <div class="col row">
            <label  id="label-ProjectTitle" class="col-form-label col-md-3" for="ProjectTitle">Project Title<span id="asterisk-ProjectTitle" style="color:red">*</span></label><div class="col-md-6"><input name="ProjectTitle" onchange="triggers[&quot;ProjectTitle&quot;].forEach(function(f, i) { f.call(this, event) });" id="ProjectTitle" class="form-control form-control-sm" placeholder="Project Title"><span class="error" id="error-ProjectTitle" style="display:none">Error</span></div>
        </div></div>
        <div class="form-group row" id="fieldset__90759">
        <div class="col row">
            <label  id="label-SponsoringAgency" class="col-form-label col-md-3" for="SponsoringAgency">Sponsoring Agency<span id="asterisk-SponsoringAgency" style="color:red">*</span></label><div class="col-md-6"><input name="SponsoringAgency" onchange="triggers[&quot;SponsoringAgency&quot;].forEach(function(f, i) { f.call(this, event) });" id="SponsoringAgency" class="form-control form-control-sm" placeholder="Sponsoring Agency"><span class="error" id="error-SponsoringAgency" style="display:none">Error</span></div>
        </div></div>
        <div class="form-group row" id="fieldset__47069">
        <div class="col row">
            <label  id="label-ProjectFrom" class="col-form-label col-md-3" for="ProjectFrom">From: (dd/mm/yyyy)<span id="asterisk-ProjectFrom" style="color:red">*</span></label><div class="col-md-3"><input name="ProjectFrom" placeholder="dd/mm/yyyy" onchange="triggers[&quot;ProjectFrom&quot;].forEach(function(f, i) { f.call(this, event) });" id="ProjectFrom" class="form-control form-control-sm"><span class="error" id="error-ProjectFrom" style="display:none">Error</span></div>
            <label  id="label-ProjectTo" class="col-form-label col-md-3" for="ProjectTo">From: (dd/mm/yyyy)<span id="asterisk-ProjectTo" style="color:red">*</span></label><div class="col-md-3"><input name="ProjectTo" placeholder="dd/mm/yyyy" onchange="triggers[&quot;ProjectTo&quot;].forEach(function(f, i) { f.call(this, event) });" id="ProjectTo" class="form-control form-control-sm"><span class="error" id="error-ProjectTo" style="display:none">Error</span></div>
        </div></div>
        <div class="form-group row" id="fieldset__20709">
        <div class="col row">
            <label  id="label-ProjectAmount" class="col-form-label col-md-3" for="ProjectAmount">Amount(In Lacs)<span id="asterisk-ProjectAmount" style="color:red">*</span></label><div class="col-md-3"><input name="ProjectAmount" placeholder="dd/mm/yyyy" onchange="triggers[&quot;ProjectAmount&quot;].forEach(function(f, i) { f.call(this, event) });" id="ProjectAmount" class="form-control form-control-sm"><span class="error" id="error-ProjectAmount" style="display:none">Error</span></div>
            <label  id="label-Status" class="col-form-label col-md-3" for="Status">Status<span id="asterisk-Status" style="color:red">*</span></label><div class="col-md-3"><select name="Status" placeholder="Please select" onchange="triggers[&quot;Status&quot;].forEach(function(f, i) { f.call(this, event) });" id="Status" class="custom-select form-control form-control-sm"><option>Please select</option>
                <option value="In Progress">In Progress</option>
                <option value="Completed">Completed</option>
            </select><span class="error" id="error-Status" style="display:none">Error</span></div>
        </div></div>
        <div class="form-group row" id="fieldset__49414">
        <div class="col row">
            <label  id="label-ProjectRole" class="col-form-label col-md-3" for="ProjectRole">Role<span id="asterisk-ProjectRole" style="color:red">*</span></label><div class="col-md-3"><select name="ProjectRole" placeholder="Please select" onchange="triggers[&quot;ProjectRole&quot;].forEach(function(f, i) { f.call(this, event) });" id="ProjectRole" class="custom-select form-control form-control-sm"><option>Please select</option>
                <option value="Investigator">Investigator</option>
                <option value="Co Investigator">Co Investigator</option>
            </select><span class="error" id="error-ProjectRole" style="display:none">Error</span></div>
            <label  id="label-CoPI" class="col-form-label col-md-3" for="CoPI">Total no of Co-Inventors<span id="asterisk-CoPI" style="color:red">*</span></label><div class="col-md-3"><select name="CoPI" placeholder="Please select" onchange="triggers[&quot;CoPI&quot;].forEach(function(f, i) { f.call(this, event) });" id="CoPI" class="custom-select form-control form-control-sm"><option>Please select</option>
                <option value="0">0</option>
                <option value="1">1</option>
                <option value="2">2</option>
                <option value="3">3</option>
                <option value="4">4</option>
                <option value="5">5</option>
                <option value="6">6</option>
                <option value="7">7</option>
                <option value="8">8</option>              
            </select><span class="error" id="error-CoPI" style="display:none">Error</span></div>
        </div></div>
    
            <div class="text-center row"><button type="submit" class="btn btn-primary" style="margin: 15px auto">Save</button></div>
          </div>
        </form></div><div class="tab-pane fade " id="v-pills-Patent-Details" role="tabpanel" aria-labelledby="v-pills-Patent-Details-tab">
        <form method='POST' id='frm_PatentDetails'>
          <div class='section'>
            <h2 style="padding-bottom: 10px; border-bottom: 2px solid black">Patent Details</h2>
            
        <div class="form-group row" id="fieldset__39458">
        <div class="col row">
            <label  id="label-PatentName" class="col-form-label col-md-3" for="PatentName">Patent Name<span id="asterisk-PatentName" style="color:red">*</span></label><div class="col-md-6"><input name="PatentName" onchange="triggers[&quot;PatentName&quot;].forEach(function(f, i) { f.call(this, event) });" id="PatentName" class="form-control form-control-sm" placeholder="Patent Name"><span class="error" id="error-PatentName" style="display:none">Error</span></div>
        </div></div>
        <div class="form-group row" id="fieldset__92236">
        <div class="col row">
            <label  id="label-PatentRegistrationNo" class="col-form-label col-md-3" for="PatentRegistrationNo">Patent Registration No<span id="asterisk-PatentRegistrationNo" style="color:red">*</span></label><div class="col-md-3"><input name="PatentRegistrationNo" onchange="triggers[&quot;PatentRegistrationNo&quot;].forEach(function(f, i) { f.call(this, event) });" id="PatentRegistrationNo" class="form-control form-control-sm" placeholder="Patent Registration No"><span class="error" id="error-PatentRegistrationNo" style="display:none">Error</span></div>
            <label  id="label-PatentDate" class="col-form-label col-md-3" for="PatentDate">Date of Award (dd/mm/yyyy)<span id="asterisk-PatentDate" style="color:red">*</span></label><div class="col-md-3"><input name="PatentDate" placeholder="dd/mm/yyyy" onchange="triggers[&quot;PatentDate&quot;].forEach(function(f, i) { f.call(this, event) });" id="PatentDate" class="form-control form-control-sm"><span class="error" id="error-PatentDate" style="display:none">Error</span></div>            
        </div></div>
        <div class="form-group row" id="fieldset__32688">
        <div class="col row">
            <label  id="label-AwardingOrganization" class="col-form-label col-md-3" for="AwardingOrganization">Awarding Organization<span id="asterisk-AwardingOrganization" style="color:red">*</span></label><div class="col-md-6"><input name="AwardingOrganization" onchange="triggers[&quot;AwardingOrganization&quot;].forEach(function(f, i) { f.call(this, event) });" id="AwardingOrganization" class="form-control form-control-sm" placeholder="Awarding Organization"><span class="error" id="error-AwardingOrganization" style="display:none">Error</span></div>
        </div></div>
        <div class="form-group row" id="fieldset__21413">
        <div class="col row">
            <label  id="label-PatentRole" class="col-form-label col-md-3" for="PatentRole">Role<span id="asterisk-PatentRole" style="color:red">*</span></label><div class="col-md-3"><select name="PatentRole" placeholder="Please select" onchange="triggers[&quot;PatentRole&quot;].forEach(function(f, i) { f.call(this, event) });" id="PatentRole" class="custom-select form-control form-control-sm"><option>Please select</option>
                <option value="Investigator">Investigator</option>
                <option value="Co Investigator">Co Investigator</option>
            </select><span class="error" id="error-PatentRole" style="display:none">Error</span></div>
            <label  id="label-PatentCoPI" class="col-form-label col-md-3" for="PatentCoPI">Total Co-Inventors<span id="asterisk-PatentCoPI" style="color:red">*</span></label><div class="col-md-3"><select name="PatentCoPI" placeholder="Please select" onchange="triggers[&quot;PatentCoPI&quot;].forEach(function(f, i) { f.call(this, event) });" id="PatentCoPI" class="custom-select form-control form-control-sm"><option>Please select</option>
                <option value="0">0</option>
                <option value="1">1</option>
                <option value="2">2</option>
                <option value="3">3</option>
                <option value="4">4</option>
                <option value="5">5</option>
                <option value="6">6</option>
                <option value="7">7</option>
                <option value="8">8</option>              
            </select><span class="error" id="error-PatentCoPI" style="display:none">Error</span></div>
        </div></div>
        <div class="form-group row" id="fieldset__22499">
        <div class="col row">
            <label  id="label-PatentPI" class="col-form-label col-md-3" for="PatentPI">Status<span id="asterisk-PatentPI" style="color:red">*</span></label><div class="col-md-6"><select name="PatentPI" placeholder="Please select" onchange="triggers[&quot;PatentPI&quot;].forEach(function(f, i) { f.call(this, event) });" id="PatentPI" class="custom-select form-control form-control-sm"><option>Please select</option>
                <option value="Awarded">Awarded</option>
                <option value="Filed">Filed</option>
            </select><span class="error" id="error-PatentPI" style="display:none">Error</span></div>
        </div></div>
    
            <div class="text-center row"><button type="submit" class="btn btn-primary" style="margin: 15px auto">Save</button></div>
          </div>
        </form></div><div class="tab-pane fade " id="v-pills-Research-Publications" role="tabpanel" aria-labelledby="v-pills-Research-Publications-tab">
        <form method='POST' id='frm_ResearchPublications'>
          <div class='section'>
            <h2 style="padding-bottom: 10px; border-bottom: 2px solid black">Research Publications</h2>
            
        <table id="Papers"><thead><tr><th style="width:auto">Name of the Journal</th><th style="width:auto">Volume No.</th><th style="width:auto">month</th><th style="width:auto">Year</th><th style="width:auto">Authors</th><th style="width:auto">Title of the paper</th><th style="width:auto">Impact factor</th><th>
            <a role="button" href="#" class="btn btn-outline-success btn-sm" title='Add row' id="rowAdder_Papers" onclick="addRow_Papers(event)">
                <span class="fa fa-plus-square"></span>
            </a>
            </th></tr></thead></table>
    
            <div class="text-center row"><button type="submit" class="btn btn-primary" style="margin: 15px auto">Save</button></div>
          </div>
        </form></div><div class="tab-pane fade " id="v-pills-Other-Publications" role="tabpanel" aria-labelledby="v-pills-Other-Publications-tab">
        <form method='POST' id='frm_OtherPublications'>
          <div class='section'>
            <h2 style="padding-bottom: 10px; border-bottom: 2px solid black">Other Publications</h2>
            
        <table id="otherPapers"><thead><tr><th style="width:auto">Name of conference with venue</th><th style="width:auto">Authors</th><th style="width:auto">Title of the paper</th><th style="width:auto">Impact factor</th><th>
            <a role="button" href="#" class="btn btn-outline-success btn-sm" title='Add row' id="rowAdder_otherPapers" onclick="addRow_otherPapers(event)">
                <span class="fa fa-plus-square"></span>
            </a>
            </th></tr></thead></table>
    
            <div class="text-center row"><button type="submit" class="btn btn-primary" style="margin: 15px auto">Save</button></div>
          </div>
        </form></div><div class="tab-pane fade " id="v-pills-Fellow" role="tabpanel" aria-labelledby="v-pills-Fellow-tab">
        <form method='POST' id='frm_Fellow'>
          <div class='section'>
            <h2 style="padding-bottom: 10px; border-bottom: 2px solid black">Fellow</h2>
            
    
            <div class="text-center row"><button type="submit" class="btn btn-primary" style="margin: 15px auto">Save</button></div>
          </div>
        </form></div><div class="tab-pane fade " id="v-pills-Conferences" role="tabpanel" aria-labelledby="v-pills-Conferences-tab">
        <form method='POST' id='frm_Conferences'>
          <div class='section'>
            <h2 style="padding-bottom: 10px; border-bottom: 2px solid black">Conferences</h2>
            
        <table id="conferenceSymposium"><thead><tr><th style="width:auto">Name of the Connference</th><th style="width:auto">Year</th><th style="width:auto">Volume No.</th><th style="width:auto">Title of the paper</th><th>
            <a role="button" href="#" class="btn btn-outline-success btn-sm" title='Add row' id="rowAdder_conferenceSymposium" onclick="addRow_conferenceSymposium(event)">
                <span class="fa fa-plus-square"></span>
            </a>
            </th></tr></thead></table>
    
            <div class="text-center row"><button type="submit" class="btn btn-primary" style="margin: 15px auto">Save</button></div>
          </div>
        </form></div><div class="tab-pane fade " id="v-pills-Workshops---Training-Programs" role="tabpanel" aria-labelledby="v-pills-Workshops---Training-Programs-tab">
        <form method='POST' id='frm_WorkshopsTrainingPrograms'>
          <div class='section'>
            <h2 style="padding-bottom: 10px; border-bottom: 2px solid black">Workshops / Training Programs</h2>
            
        <table id="workshops"><thead><tr><th style="width:auto">Title of the Workshop organized</th><th style="width:auto">Year</th><th style="width:auto">Venue</th><th style="width:auto">Sponsoring Authority</th><th>
            <a role="button" href="#" class="btn btn-outline-success btn-sm" title='Add row' id="rowAdder_workshops" onclick="addRow_workshops(event)">
                <span class="fa fa-plus-square"></span>
            </a>
            </th></tr></thead></table>
    
            <div class="text-center row"><button type="submit" class="btn btn-primary" style="margin: 15px auto">Save</button></div>
          </div>
        </form></div><div class="tab-pane fade " id="v-pills-Thesis-spervised" role="tabpanel" aria-labelledby="v-pills-Thesis-spervised-tab">
        <form method='POST' id='frm_Thesisspervised'>
          <div class='section'>
            <h2 style="padding-bottom: 10px; border-bottom: 2px solid black">Thesis spervised</h2>
            
        <table id="Thesis"><thead><tr><th style="width:auto">Title of the Thesis Supervised</th><th style="width:auto">Completed(year)</th><th style="width:auto">In progress(With status)</th><th style="width:auto">Principal or Co-Supervisor</th><th>
            <a role="button" href="#" class="btn btn-outline-success btn-sm" title='Add row' id="rowAdder_Thesis" onclick="addRow_Thesis(event)">
                <span class="fa fa-plus-square"></span>
            </a>
            </th></tr></thead></table>
    
            <div class="text-center row"><button type="submit" class="btn btn-primary" style="margin: 15px auto">Save</button></div>
          </div>
        </form></div><div class="tab-pane fade " id="v-pills-Administrative-and-Other-Activities" role="tabpanel" aria-labelledby="v-pills-Administrative-and-Other-Activities-tab">
        <form method='POST' id='frm_AdministrativeandOtherActivities'>
          <div class='section'>
            <h2 style="padding-bottom: 10px; border-bottom: 2px solid black">Administrative and Other Activities</h2>
            
        <table id="adminSupport"><thead><tr><th style="width:auto">Section/Office/Institute level committee</th><th style="width:auto">From</th><th style="width:auto">To</th><th style="width:auto">Position Held</th><th style="width:auto">Responsibility Type</th><th style="width:auto">Responsibilities</th><th>
            <a role="button" href="#" class="btn btn-outline-success btn-sm" title='Add row' id="rowAdder_adminSupport" onclick="addRow_adminSupport(event)">
                <span class="fa fa-plus-square"></span>
            </a>
            </th></tr></thead></table>
        <table id="outreach"><thead><tr><th style="width:auto">Academic Outreach Activities</th><th style="width:auto">Year</th><th>
            <a role="button" href="#" class="btn btn-outline-success btn-sm" title='Add row' id="rowAdder_outreach" onclick="addRow_outreach(event)">
                <span class="fa fa-plus-square"></span>
            </a>
            </th></tr></thead></table>
    
            <div class="text-center row"><button type="submit" class="btn btn-primary" style="margin: 15px auto">Save</button></div>
          </div>
        </form></div><div class="tab-pane fade " id="v-pills-Placement-Percentage" role="tabpanel" aria-labelledby="v-pills-Placement-Percentage-tab">
        <form method='POST' id='frm_PlacementPercentage'>
          <div class='section'>
            <h2 style="padding-bottom: 10px; border-bottom: 2px solid black">Placement Percentage</h2>
            
        <table id="placementPercentage"><thead><tr><th style="width:auto">Year</th><th style="width:auto">Percentage</th><th>
            <a role="button" href="#" class="btn btn-outline-success btn-sm" title='Add row' id="rowAdder_placementPercentage" onclick="addRow_placementPercentage(event)">
                <span class="fa fa-plus-square"></span>
            </a>
            </th></tr></thead></table>
    
            <div class="text-center row"><button type="submit" class="btn btn-primary" style="margin: 15px auto">Save</button></div>
          </div>
        </form></div><div class="tab-pane fade " id="v-pills-Miscellaneous" role="tabpanel" aria-labelledby="v-pills-Miscellaneous-tab">
        <form method='POST' id='frm_Miscellaneous'>
          <div class='section'>
            <h2 style="padding-bottom: 10px; border-bottom: 2px solid black">Miscellaneous</h2>
            
        
        <div class="form-group row" id="fieldset__56060">
        <div class="col row">
            <label  id="label-AwardsHonorsDistinction" class="col-form-label col-md-12" for="AwardsHonorsDistinction">Awards/HonorsDistinction<span id="asterisk-AwardsHonorsDistinction" style="color:red">*</span></label><div class="col-md-12"><input name="AwardsHonorsDistinction" placeholder="Awards/HonorsDistinction" onchange="triggers[&quot;AwardsHonorsDistinction&quot;].forEach(function(f, i) { f.call(this, event) });" id="AwardsHonorsDistinction" class="form-control form-control-sm"><span class="error" id="error-AwardsHonorsDistinction" style="display:none">Error</span></div>
        </div></div>
        
        <div class="form-group row" id="fieldset__96189">
        <div class="col row">
            <label  id="label-TeachingandResearchPlanforNextFiveYears" class="col-form-label col-md-12" for="TeachingandResearchPlanforNextFiveYears">Teaching and Research Plan for Next Five Years<span id="asterisk-TeachingandResearchPlanforNextFiveYears" style="color:red">*</span></label><div class="col-md-12"><input name="TeachingandResearchPlanforNextFiveYears" placeholder="Teaching and Research Plan for Next Five Years" onchange="triggers[&quot;TeachingandResearchPlanforNextFiveYears&quot;].forEach(function(f, i) { f.call(this, event) });" id="TeachingandResearchPlanforNextFiveYears" class="form-control form-control-sm"><span class="error" id="error-TeachingandResearchPlanforNextFiveYears" style="display:none">Error</span></div>
        </div></div>
        
        <div class="form-group row" id="fieldset__91454">
        <div class="col row">
            <label  id="label-AnyOtherRelevantInfo" class="col-form-label col-md-12" for="AnyOtherRelevantInfo">Any Other Relevant Info<span id="asterisk-AnyOtherRelevantInfo" style="color:red">*</span></label><div class="col-md-12"><input name="AnyOtherRelevantInfo" placeholder="Any Other Relevant Info" onchange="triggers[&quot;AnyOtherRelevantInfo&quot;].forEach(function(f, i) { f.call(this, event) });" id="AnyOtherRelevantInfo" class="form-control form-control-sm"><span class="error" id="error-AnyOtherRelevantInfo" style="display:none">Error</span></div>
        </div></div>
        
    
            <div class="text-center row"><button type="submit" class="btn btn-primary" style="margin: 15px auto">Save</button></div>
          </div>
        </form></div><div class="tab-pane fade " id="v-pills-Name-and-address-of-Reference" role="tabpanel" aria-labelledby="v-pills-Name-and-address-of-Reference-tab">
        <form method='POST' id='frm_NameandaddressofReference'>
          <div class='section'>
            <h2 style="padding-bottom: 10px; border-bottom: 2px solid black">Name and address of Reference</h2>
            
        <div class="form-group row" id="fieldset__34010">
        <div class="col row">
            <label  id="label-RefName" class="col-form-label col-md-2" for="RefName">Name<span id="asterisk-RefName" style="color:red">*</span></label><div class="col-md-3"><input name="RefName" placeholder="Name" onchange="triggers[&quot;RefName&quot;].forEach(function(f, i) { f.call(this, event) });" id="RefName" class="form-control form-control-sm"><span class="error" id="error-RefName" style="display:none">Error</span></div>
            <label  id="label-RefPosition" class="col-form-label col-md-2" for="RefPosition">Position<span id="asterisk-RefPosition" style="color:red">*</span></label><div class="col-md-3"><input name="RefPosition" placeholder="Position" onchange="triggers[&quot;RefPosition&quot;].forEach(function(f, i) { f.call(this, event) });" id="RefPosition" class="form-control form-control-sm"><span class="error" id="error-RefPosition" style="display:none">Error</span></div>
            <label  id="label-RefAddress" class="col-form-label col-md-2" for="RefAddress">Address<span id="asterisk-RefAddress" style="color:red">*</span></label><div class="col-md-3"><input name="RefAddress" placeholder="Address" onchange="triggers[&quot;RefAddress&quot;].forEach(function(f, i) { f.call(this, event) });" id="RefAddress" class="form-control form-control-sm"><span class="error" id="error-RefAddress" style="display:none">Error</span></div>
            <label  id="label-RefEmail" class="col-form-label col-md-2" for="RefEmail">Email<span id="asterisk-RefEmail" style="color:red">*</span></label><div class="col-md-3"><input name="RefEmail" placeholder="Email" onchange="triggers[&quot;RefEmail&quot;].forEach(function(f, i) { f.call(this, event) });" id="RefEmail" class="form-control form-control-sm"><span class="error" id="error-RefEmail" style="display:none">Error</span></div>
            <label  id="label-RefPhoneNumber" class="col-form-label col-md-2" for="RefPhoneNumber">Phone Number<span id="asterisk-RefPhoneNumber" style="color:red">*</span></label><div class="col-md-3"><input name="RefPhoneNumber" placeholder="Phone Number:" onchange="triggers[&quot;RefPhoneNumber&quot;].forEach(function(f, i) { f.call(this, event) });" id="RefPhoneNumber" class="form-control form-control-sm"><span class="error" id="error-RefPhoneNumber" style="display:none">Error</span></div>
            <label  id="label-RefMobile" class="col-form-label col-md-2" for="RefMobile">Mobile<span id="asterisk-RefMobile" style="color:red">*</span></label><div class="col-md-3"><input name="RefMobile" placeholder="Mobile" onchange="triggers[&quot;RefMobile&quot;].forEach(function(f, i) { f.call(this, event) });" id="RefMobile" class="form-control form-control-sm"><span class="error" id="error-RefMobile" style="display:none">Error</span></div>
        </div></div>
        
        <div class="form-group row" id="fieldset__03627">
        <div class="col row">
            <label  id="label-DidyoupreviouslyapplyforanypostinthisinstituteIfyesgiveparticulars" class="col-form-label col-md-12" for="DidyoupreviouslyapplyforanypostinthisinstituteIfyesgiveparticulars">Did you previously apply for any post in this institute ? If yes, give particulars<span id="asterisk-DidyoupreviouslyapplyforanypostinthisinstituteIfyesgiveparticulars" style="color:red">*</span></label><div class="col-md-12"><input name="DidyoupreviouslyapplyforanypostinthisinstituteIfyesgiveparticulars" placeholder="Did you previously apply for any post in this institute ? If yes, give particulars" onchange="triggers[&quot;DidyoupreviouslyapplyforanypostinthisinstituteIfyesgiveparticulars&quot;].forEach(function(f, i) { f.call(this, event) });" id="DidyoupreviouslyapplyforanypostinthisinstituteIfyesgiveparticulars" class="form-control form-control-sm"><span class="error" id="error-DidyoupreviouslyapplyforanypostinthisinstituteIfyesgiveparticulars" style="display:none">Error</span></div>
        </div></div>
    
            <div class="text-center row"><button type="submit" class="btn btn-primary" style="margin: 15px auto">Save</button></div>
          </div>
        </form></div></div></div>
            </div>
        </div>

    <%- include('partials/footer.partial.ejs') %>

    <script type="text/javascript">
        var applicationData = <%- JSON.stringify(applicationData) %>;
        var applicationId = applicationData.id;

        $("form").each(function(id, el) {
            var id = $(el).attr("id");
            id = id.replace(/^frm_/, "");
            $(el).attr("action", "/applications/save/" + applicationId + "/" + id);
        });

        for (var i = 0; i < applicationData.FormValues.length; i++) {
            var key = applicationData.FormValues[i].FormElement.name;
            var val = applicationData.FormValues[i].value;
            $("[name=" + key + "]").val(val);
        }
    </script>

    
<script type='text/javascript' src='/js/indicative_bundle.js'></script>
<script type='text/javascript'>
let $f = {"DepartmentAppliedFor":"","PostAppliedFor":"","ApplicationSpecialization":"","internalCandidate":"","StaffNumber":"","DateofLastPromotion":"","FullName":"","FathersHusbandsName":"","dob":"","Age":"","Gender":"","Category":"","Nationality":"","StateUT":"","MaritalStatus":"","PANnumber":"","AadhaarNumber":"","Email":"","ContactNobrwithcountrycode":"","AlternativeContactNo":"","Address":"","PermanentAddress":"","Photo":"","Examination__count__":"","MatriculationSpecialization__count__":"","Description__count__":"","UGDegreeName":"","UGSpecialization":"","UGCollege":"","UGYearOfPassing":"","UGBoardUniv":"","UGMarksCGPAobtained":"","UGMaximummarksCGPA":"","UGMarksCGPA":"","UGPassedClassDivision":"","UGSemesterNo__count__":"","UGCodeNameofsubject__count__":"","UGNumberofattempts__count__":"","UGMonthYearofPassing__count__":"","UGofMarksGrade__count__":"","PGDegreeName":"","PGSubjectsDiscipline":"","PGInstituteName":"","PGYearofPassing":"","PGBoardUniversity":"","PGMarksCGPAobtained":"","PGMaximumMarksCGPA":"","PGMarksCGPA":"","PGDivision":"","PGSemesterNo__count__":"","PGCodeNameofsubject__count__":"","PGNumberofattempts__count__":"","PGMonthYearofPassing__count__":"","PGofMarksGrade__count__":"","AwardedDate":"","Title":"","University":"","EmployerOrganization":"","PositionHeld":"","TypeofEmployer":"","WorkedFrom":"","WorkedTill":"","PayinPayBand":"","AGPGP":"","BasicPay":"","NatureofWork":"","ResearchOrganization":"","ResearchPositionHeld":"","ResearchFrom":"","ResearchTill":"","TotalResearchGrant":"","ReasonforLeaving":"","NameOfOrganization__count__":"","AddressOfOrganization__count__":"","Natureofwork__count__":"","payscale__count__":"","From__count__":"","To__count__":"","TypeofOrganization__count__":"","Reasonsforleaving__count__":"","ProjectTitle":"","SponsoringAgency":"","ProjectFrom":"","ProjectTo":"","ProjectAmount":"","Status":"","ProjectRole":"","CoPI":"","PatentName":"","PatentRegistrationNo":"","PatentDate":"","AwardingOrganization":"","PatentRole":"","PatentCoPI":"","PatentPI":"","NameoftheJournal__count__":"","VolumeNo__count__":"","month__count__":"","Year__count__":"","Authors__count__":"","Titleofthepaper__count__":"","Impactfactor__count__":"","OPNameofconferencewithvenue__count__":"","OPAuthors__count__":"","OPTitleofthepaper__count__":"","OPImpactfactor__count__":"","NameoftheConnference__count__":"","ConferenceYear__count__":"","ConferenceVolumeNo__count__":"","ConferenceTitleofthepaper__count__":"","TitleoftheWorkshoporganized__count__":"","WTYear__count__":"","WTVenue__count__":"","SponsoringAuthority__count__":"","TitleoftheThesisSupervised__count__":"","Completedyear__count__":"","InprogressWithstatus__count__":"","PrincipalorCoSupervisor__count__":"","SectionOfficeInstitutelevelcommittee__count__":"","AOAFrom__count__":"","AOATo__count__":"","PositionHeld__count__":"","ResponsibilityType__count__":"","Responsibilities__count__":"","AcademicOutreachActivities__count__":"","AOAYear__count__":"","PPYear__count__":"","PPpercentage__count__":"","AwardsHonorsDistinction":"","TeachingandResearchPlanforNextFiveYears":"","AnyOtherRelevantInfo":"","RefName":"","RefPosition":"","RefAddress":"","RefEmail":"","RefPhoneNumber":"","RefMobile":"","DidyoupreviouslyapplyforanypostinthisinstituteIfyesgiveparticulars":""};
let rules = {"DepartmentAppliedFor":"required|in:Architecture,Civil Engineering,Chemical Engineering,Computer Science Engineering,Electronics and Communication Engineering,Electricals and Electronics Engineering,Instrumentation and Control Engineering,Mechanical Engineering,Metallurgical and Materials Engineering,Production Engineering,Energy and Environment,Physics,Chemistry,Mathematics,Humanities (English/Economics),Computer Application,Management Studies","PostAppliedFor":"required|in:Assistant Professor (6000),Assistant Professor (7000),Assistant Professor (8000),Associate Professor 1,Associate Professor 2,Associate Professor 3,Professor 1,Professor 2,Professor 3","ApplicationSpecialization":"required","internalCandidate":"required|in:Yes,No","StaffNumber":"required","DateofLastPromotion":"required","FullName":"required","FathersHusbandsName":"required","dob":"required|js: verifyDateInddmmyyyy($f.dob)","Age":"required","Gender":"required|in:Male,Female,Transgender,I don&apos;t want to disclose","Category":"required|in:General,Other Backward Classes (OBC),Scheduled Cast (SC),Scheduled Tribe (ST),Person with disabilities","Nationality":"required|in:Indian","StateUT":"required","MaritalStatus":"required|in:Single,Married,Widowed,Divorced,Separated","PANnumber":"required","AadhaarNumber":"required","Email":"required","ContactNobrwithcountrycode":"required|phone","AlternativeContactNo":"required|phone","Address":"required","PermanentAddress":"required","Examination__count__":"required|in:Exam1,Exam2","MatriculationSpecialization__count__":"required","Description__count__":"required","UGDegreeName":"required","UGSpecialization":"required","UGCollege":"required","UGYearOfPassing":"required","UGBoardUniv":"required","UGMarksCGPAobtained":"required","UGMaximummarksCGPA":"required","UGMarksCGPA":"required","UGPassedClassDivision":"required|in:Yes,No","UGSemesterNo__count__":"required|in:I,II,III,IV,V,VI,VII,VIII,IX,X","UGCodeNameofsubject__count__":"required","UGNumberofattempts__count__":"required","UGMonthYearofPassing__count__":"required","UGofMarksGrade__count__":"required","PGDegreeName":"required","PGSubjectsDiscipline":"required","PGInstituteName":"required","PGYearofPassing":"required","PGBoardUniversity":"required","PGMarksCGPAobtained":"required","PGMaximumMarksCGPA":"required","PGMarksCGPA":"required","PGDivision":"required","PGSemesterNo__count__":"required|in:I,II,III,IV,V,VI,VII,VIII,IX,X","PGCodeNameofsubject__count__":"required","PGNumberofattempts__count__":"required","PGMonthYearofPassing__count__":"required","PGofMarksGrade__count__":"required","AwardedDate":"required|date","Title":"required","University":"required","EmployerOrganization":"required","PositionHeld":"required","TypeofEmployer":"required|in:Government,Private,PSU/Autonomous Body","WorkedFrom":"required|date","WorkedTill":"required|date","BasicPay":"required","NatureofWork":"required","ResearchOrganization":"required","ResearchPositionHeld":"required","ResearchFrom":"required|date","ResearchTill":"required|date","TotalResearchGrant":"required","ReasonforLeaving":"required","NameOfOrganization__count__":"required","AddressOfOrganization__count__":"required","Natureofwork__count__":"required","payscale__count__":"required","From__count__":"required","To__count__":"required","TypeofOrganization__count__":"required","Reasonsforleaving__count__":"required","ProjectTitle":"required","SponsoringAgency":"required","ProjectFrom":"required|date","ProjectTo":"required|date","ProjectAmount":"required|date","Status":"required|in:In Progress,Completed","ProjectRole":"required|in:Investigator,Co Investigator","CoPI":"required|in:0,1,2,3,4,5,6,7,8","PatentName":"required","PatentRegistrationNo":"required","PatentDate":"required|date","AwardingOrganization":"required","PatentRole":"required|in:Investigator,Co Investigator","PatentCoPI":"required|in:0,1,2,3,4,5,6,7,8","PatentPI":"required|in:Awarded,Filed","NameoftheJournal__count__":"required","VolumeNo__count__":"required","month__count__":"required|in:","Year__count__":"required|in:2013,2012,2011,2010,2009,2008,2007,2006,2005,2004,2003,2002,2001,2000,1999,1998,1997,1996,1995,1994,1993,1992,1991,1990,1989,1988,1987,1986,1985,1984,1983,1982,1981,1980,1979,1978,1977,1976,1975,1974,1973","Authors__count__":"required","Titleofthepaper__count__":"required","Impactfactor__count__":"required","OPNameofconferencewithvenue__count__":"required","OPAuthors__count__":"required","OPTitleofthepaper__count__":"required","OPImpactfactor__count__":"required","NameoftheConnference__count__":"required","ConferenceYear__count__":"required|in:2013,2012,2011,2010,2009,2008,2007,2006,2005,2004,2003,2002,2001,2000,1999,1998,1997,1996,1995,1994,1993,1992,1991,1990,1989,1988,1987,1986,1985,1984,1983,1982,1981,1980,1979,1978,1977,1976,1975,1974,1973","ConferenceVolumeNo__count__":"required","ConferenceTitleofthepaper__count__":"required","TitleoftheWorkshoporganized__count__":"required","WTYear__count__":"required|in:2013,2012,2011,2010,2009,2008,2007,2006,2005,2004,2003,2002,2001,2000,1999,1998,1997,1996,1995,1994,1993,1992,1991,1990,1989,1988,1987,1986,1985,1984,1983,1982,1981,1980,1979,1978,1977,1976,1975,1974,1973","WTVenue__count__":"required","SponsoringAuthority__count__":"required","TitleoftheThesisSupervised__count__":"required","Completedyear__count__":"required","InprogressWithstatus__count__":"required","PrincipalorCoSupervisor__count__":"required","SectionOfficeInstitutelevelcommittee__count__":"required","AOAFrom__count__":"required","AOATo__count__":"required","PositionHeld__count__":"required","ResponsibilityType__count__":"required|in:Dean,HOD,ChiefWarden","Responsibilities__count__":"required","AcademicOutreachActivities__count__":"required","AOAYear__count__":"required|in:2013,2012,2011,2010,2009,2008,2007,2006,2005,2004,2003,2002,2001,2000,1999,1998,1997,1996,1995,1994,1993,1992,1991,1990,1989,1988,1987,1986,1985,1984,1983,1982,1981,1980,1979,1978,1977,1976,1975,1974,1973","PPYear__count__":"required|in:2013,2012,2011,2010,2009,2008,2007,2006,2005,2004,2003,2002,2001,2000,1999,1998,1997,1996,1995,1994,1993,1992,1991,1990,1989,1988,1987,1986,1985,1984,1983,1982,1981,1980,1979,1978,1977,1976,1975,1974,1973","PPpercentage__count__":"required","AwardsHonorsDistinction":"required","TeachingandResearchPlanforNextFiveYears":"required","AnyOtherRelevantInfo":"required","RefName":"required","RefPosition":"required","RefAddress":"required","RefEmail":"required","RefPhoneNumber":"required","RefMobile":"required","DidyoupreviouslyapplyforanypostinthisinstituteIfyesgiveparticulars":"required"};
let triggers = { DepartmentAppliedFor: [function(event) { $f["DepartmentAppliedFor"] = $("#DepartmentAppliedFor").val(); validate('DepartmentAppliedFor'); }],PostAppliedFor: [function(event) { $f["PostAppliedFor"] = $("#PostAppliedFor").val(); validate('PostAppliedFor'); }],ApplicationSpecialization: [function(event) { $f["ApplicationSpecialization"] = $("#ApplicationSpecialization").val(); validate('ApplicationSpecialization'); }],internalCandidate: [function(event) { $f["internalCandidate"] = $("#internalCandidate").val(); validate('internalCandidate'); },function(){ 
          if($f.internalCandidate == 'Yes') {
            $("#StaffNumber").show();
            $("#label-StaffNumber").show();
            $("#asterisk-StaffNumber").show();
          } else {
            $("#StaffNumber").hide();
            $("#label-StaffNumber").hide();
            $("#asterisk-StaffNumber").hide();
          }},function(){ 
          if($f.internalCandidate == 'No') {
            $("#fieldset__77660").show();
          } else {
            $("#fieldset__77660").hide();
          }}],StaffNumber: [function(event) { $f["StaffNumber"] = $("#StaffNumber").val(); validate('StaffNumber'); }],DateofLastPromotion: [function(event) { $f["DateofLastPromotion"] = $("#DateofLastPromotion").val(); validate('DateofLastPromotion'); }],FullName: [function(event) { $f["FullName"] = $("#FullName").val(); validate('FullName'); }],FathersHusbandsName: [function(event) { $f["FathersHusbandsName"] = $("#FathersHusbandsName").val(); validate('FathersHusbandsName'); }],dob: [function(event) { $f["dob"] = $("#dob").val(); validate('dob'); },() => {
            validate("dob");
          },function() {
            let val = eval("calcAge($f.dob) + ' Years'");
            $("#Age").val(val);
        }],Age: [function(event) { $f["Age"] = $("#Age").val(); validate('Age'); }],Gender: [function(event) { $f["Gender"] = $("#Gender").val(); validate('Gender'); }],Category: [function(event) { $f["Category"] = $("#Category").val(); validate('Category'); }],Nationality: [function(event) { $f["Nationality"] = $("#Nationality").val(); validate('Nationality'); }],StateUT: [function(event) { $f["StateUT"] = $("#StateUT").val(); validate('StateUT'); }],MaritalStatus: [function(event) { $f["MaritalStatus"] = $("#MaritalStatus").val(); validate('MaritalStatus'); }],AadhaarNumber: [function(event) { $f["AadhaarNumber"] = $("#AadhaarNumber").val(); validate('AadhaarNumber'); },function(){ 
          if($f.AadhaarNumber > 0) {
            $("#PANnumber").show();
            $("#label-PANnumber").show();
            $("#asterisk-PANnumber").show();
          } else {
            $("#PANnumber").hide();
            $("#label-PANnumber").hide();
            $("#asterisk-PANnumber").hide();
          }}],PANnumber: [function(event) { $f["PANnumber"] = $("#PANnumber").val(); validate('PANnumber'); }],Email: [function(event) { $f["Email"] = $("#Email").val(); validate('Email'); }],ContactNobrwithcountrycode: [function(event) { $f["ContactNobrwithcountrycode"] = $("#ContactNobrwithcountrycode").val(); validate('ContactNobrwithcountrycode'); }],AlternativeContactNo: [function(event) { $f["AlternativeContactNo"] = $("#AlternativeContactNo").val(); validate('AlternativeContactNo'); }],Address: [function(event) { $f["Address"] = $("#Address").val(); validate('Address'); }],PermanentAddress: [function(event) { $f["PermanentAddress"] = $("#PermanentAddress").val(); validate('PermanentAddress'); }],Examination__count__: [function(event) { $f["Examination__count__"] = $("#Examination__count__").val(); validate('Examination__count__'); }],MatriculationSpecialization__count__: [function(event) { $f["MatriculationSpecialization__count__"] = $("#MatriculationSpecialization__count__").val(); validate('MatriculationSpecialization__count__'); }],Description__count__: [function(event) { $f["Description__count__"] = $("#Description__count__").val(); validate('Description__count__'); }],UGDegreeName: [function(event) { $f["UGDegreeName"] = $("#UGDegreeName").val(); validate('UGDegreeName'); }],UGSpecialization: [function(event) { $f["UGSpecialization"] = $("#UGSpecialization").val(); validate('UGSpecialization'); }],UGCollege: [function(event) { $f["UGCollege"] = $("#UGCollege").val(); validate('UGCollege'); }],UGYearOfPassing: [function(event) { $f["UGYearOfPassing"] = $("#UGYearOfPassing").val(); validate('UGYearOfPassing'); }],UGBoardUniv: [function(event) { $f["UGBoardUniv"] = $("#UGBoardUniv").val(); validate('UGBoardUniv'); }],UGMarksCGPAobtained: [function(event) { $f["UGMarksCGPAobtained"] = $("#UGMarksCGPAobtained").val(); validate('UGMarksCGPAobtained'); }],UGMaximummarksCGPA: [function(event) { $f["UGMaximummarksCGPA"] = $("#UGMaximummarksCGPA").val(); validate('UGMaximummarksCGPA'); }],UGMarksCGPA: [function(event) { $f["UGMarksCGPA"] = $("#UGMarksCGPA").val(); validate('UGMarksCGPA'); }],UGPassedClassDivision: [function(event) { $f["UGPassedClassDivision"] = $("#UGPassedClassDivision").val(); validate('UGPassedClassDivision'); }],UGSemesterNo__count__: [function(event) { $f["UGSemesterNo__count__"] = $("#UGSemesterNo__count__").val(); validate('UGSemesterNo__count__'); }],UGCodeNameofsubject__count__: [function(event) { $f["UGCodeNameofsubject__count__"] = $("#UGCodeNameofsubject__count__").val(); validate('UGCodeNameofsubject__count__'); }],UGNumberofattempts__count__: [function(event) { $f["UGNumberofattempts__count__"] = $("#UGNumberofattempts__count__").val(); validate('UGNumberofattempts__count__'); }],UGMonthYearofPassing__count__: [function(event) { $f["UGMonthYearofPassing__count__"] = $("#UGMonthYearofPassing__count__").val(); validate('UGMonthYearofPassing__count__'); }],UGofMarksGrade__count__: [function(event) { $f["UGofMarksGrade__count__"] = $("#UGofMarksGrade__count__").val(); validate('UGofMarksGrade__count__'); }],PGDegreeName: [function(event) { $f["PGDegreeName"] = $("#PGDegreeName").val(); validate('PGDegreeName'); }],PGSubjectsDiscipline: [function(event) { $f["PGSubjectsDiscipline"] = $("#PGSubjectsDiscipline").val(); validate('PGSubjectsDiscipline'); }],PGInstituteName: [function(event) { $f["PGInstituteName"] = $("#PGInstituteName").val(); validate('PGInstituteName'); }],PGYearofPassing: [function(event) { $f["PGYearofPassing"] = $("#PGYearofPassing").val(); validate('PGYearofPassing'); }],PGBoardUniversity: [function(event) { $f["PGBoardUniversity"] = $("#PGBoardUniversity").val(); validate('PGBoardUniversity'); }],PGMarksCGPAobtained: [function(event) { $f["PGMarksCGPAobtained"] = $("#PGMarksCGPAobtained").val(); validate('PGMarksCGPAobtained'); }],PGMaximumMarksCGPA: [function(event) { $f["PGMaximumMarksCGPA"] = $("#PGMaximumMarksCGPA").val(); validate('PGMaximumMarksCGPA'); }],PGMarksCGPA: [function(event) { $f["PGMarksCGPA"] = $("#PGMarksCGPA").val(); validate('PGMarksCGPA'); }],PGDivision: [function(event) { $f["PGDivision"] = $("#PGDivision").val(); validate('PGDivision'); }],PGSemesterNo__count__: [function(event) { $f["PGSemesterNo__count__"] = $("#PGSemesterNo__count__").val(); validate('PGSemesterNo__count__'); }],PGCodeNameofsubject__count__: [function(event) { $f["PGCodeNameofsubject__count__"] = $("#PGCodeNameofsubject__count__").val(); validate('PGCodeNameofsubject__count__'); }],PGNumberofattempts__count__: [function(event) { $f["PGNumberofattempts__count__"] = $("#PGNumberofattempts__count__").val(); validate('PGNumberofattempts__count__'); }],PGMonthYearofPassing__count__: [function(event) { $f["PGMonthYearofPassing__count__"] = $("#PGMonthYearofPassing__count__").val(); validate('PGMonthYearofPassing__count__'); }],PGofMarksGrade__count__: [function(event) { $f["PGofMarksGrade__count__"] = $("#PGofMarksGrade__count__").val(); validate('PGofMarksGrade__count__'); }],AwardedDate: [function(event) { $f["AwardedDate"] = $("#AwardedDate").val(); validate('AwardedDate'); }],Title: [function(event) { $f["Title"] = $("#Title").val(); validate('Title'); }],University: [function(event) { $f["University"] = $("#University").val(); validate('University'); }],EmployerOrganization: [function(event) { $f["EmployerOrganization"] = $("#EmployerOrganization").val(); validate('EmployerOrganization'); }],PositionHeld: [function(event) { $f["PositionHeld"] = $("#PositionHeld").val(); validate('PositionHeld'); }],TypeofEmployer: [function(event) { $f["TypeofEmployer"] = $("#TypeofEmployer").val(); validate('TypeofEmployer'); }],WorkedFrom: [function(event) { $f["WorkedFrom"] = $("#WorkedFrom").val(); validate('WorkedFrom'); }],WorkedTill: [function(event) { $f["WorkedTill"] = $("#WorkedTill").val(); validate('WorkedTill'); }],PayinPayBand: [function(event) { $f["PayinPayBand"] = $("#PayinPayBand").val(); validate('PayinPayBand'); }],AGPGP: [function(event) { $f["AGPGP"] = $("#AGPGP").val(); validate('AGPGP'); }],BasicPay: [function(event) { $f["BasicPay"] = $("#BasicPay").val(); validate('BasicPay'); }],NatureofWork: [function(event) { $f["NatureofWork"] = $("#NatureofWork").val(); validate('NatureofWork'); }],ResearchOrganization: [function(event) { $f["ResearchOrganization"] = $("#ResearchOrganization").val(); validate('ResearchOrganization'); }],ResearchPositionHeld: [function(event) { $f["ResearchPositionHeld"] = $("#ResearchPositionHeld").val(); validate('ResearchPositionHeld'); }],ResearchFrom: [function(event) { $f["ResearchFrom"] = $("#ResearchFrom").val(); validate('ResearchFrom'); }],ResearchTill: [function(event) { $f["ResearchTill"] = $("#ResearchTill").val(); validate('ResearchTill'); }],TotalResearchGrant: [function(event) { $f["TotalResearchGrant"] = $("#TotalResearchGrant").val(); validate('TotalResearchGrant'); }],ReasonforLeaving: [function(event) { $f["ReasonforLeaving"] = $("#ReasonforLeaving").val(); validate('ReasonforLeaving'); }],NameOfOrganization__count__: [function(event) { $f["NameOfOrganization__count__"] = $("#NameOfOrganization__count__").val(); validate('NameOfOrganization__count__'); }],AddressOfOrganization__count__: [function(event) { $f["AddressOfOrganization__count__"] = $("#AddressOfOrganization__count__").val(); validate('AddressOfOrganization__count__'); }],Natureofwork__count__: [function(event) { $f["Natureofwork__count__"] = $("#Natureofwork__count__").val(); validate('Natureofwork__count__'); }],payscale__count__: [function(event) { $f["payscale__count__"] = $("#payscale__count__").val(); validate('payscale__count__'); }],From__count__: [function(event) { $f["From__count__"] = $("#From__count__").val(); validate('From__count__'); }],To__count__: [function(event) { $f["To__count__"] = $("#To__count__").val(); validate('To__count__'); }],TypeofOrganization__count__: [function(event) { $f["TypeofOrganization__count__"] = $("#TypeofOrganization__count__").val(); validate('TypeofOrganization__count__'); }],Reasonsforleaving__count__: [function(event) { $f["Reasonsforleaving__count__"] = $("#Reasonsforleaving__count__").val(); validate('Reasonsforleaving__count__'); }],ProjectTitle: [function(event) { $f["ProjectTitle"] = $("#ProjectTitle").val(); validate('ProjectTitle'); }],SponsoringAgency: [function(event) { $f["SponsoringAgency"] = $("#SponsoringAgency").val(); validate('SponsoringAgency'); }],ProjectFrom: [function(event) { $f["ProjectFrom"] = $("#ProjectFrom").val(); validate('ProjectFrom'); }],ProjectTo: [function(event) { $f["ProjectTo"] = $("#ProjectTo").val(); validate('ProjectTo'); }],ProjectAmount: [function(event) { $f["ProjectAmount"] = $("#ProjectAmount").val(); validate('ProjectAmount'); }],Status: [function(event) { $f["Status"] = $("#Status").val(); validate('Status'); }],ProjectRole: [function(event) { $f["ProjectRole"] = $("#ProjectRole").val(); validate('ProjectRole'); }],CoPI: [function(event) { $f["CoPI"] = $("#CoPI").val(); validate('CoPI'); }],PatentName: [function(event) { $f["PatentName"] = $("#PatentName").val(); validate('PatentName'); }],PatentRegistrationNo: [function(event) { $f["PatentRegistrationNo"] = $("#PatentRegistrationNo").val(); validate('PatentRegistrationNo'); }],PatentDate: [function(event) { $f["PatentDate"] = $("#PatentDate").val(); validate('PatentDate'); }],AwardingOrganization: [function(event) { $f["AwardingOrganization"] = $("#AwardingOrganization").val(); validate('AwardingOrganization'); }],PatentRole: [function(event) { $f["PatentRole"] = $("#PatentRole").val(); validate('PatentRole'); }],PatentCoPI: [function(event) { $f["PatentCoPI"] = $("#PatentCoPI").val(); validate('PatentCoPI'); }],PatentPI: [function(event) { $f["PatentPI"] = $("#PatentPI").val(); validate('PatentPI'); }],NameoftheJournal__count__: [function(event) { $f["NameoftheJournal__count__"] = $("#NameoftheJournal__count__").val(); validate('NameoftheJournal__count__'); }],VolumeNo__count__: [function(event) { $f["VolumeNo__count__"] = $("#VolumeNo__count__").val(); validate('VolumeNo__count__'); }],month__count__: [function(event) { $f["month__count__"] = $("#month__count__").val(); validate('month__count__'); }],Year__count__: [function(event) { $f["Year__count__"] = $("#Year__count__").val(); validate('Year__count__'); }],Authors__count__: [function(event) { $f["Authors__count__"] = $("#Authors__count__").val(); validate('Authors__count__'); }],Titleofthepaper__count__: [function(event) { $f["Titleofthepaper__count__"] = $("#Titleofthepaper__count__").val(); validate('Titleofthepaper__count__'); }],Impactfactor__count__: [function(event) { $f["Impactfactor__count__"] = $("#Impactfactor__count__").val(); validate('Impactfactor__count__'); }],OPNameofconferencewithvenue__count__: [function(event) { $f["OPNameofconferencewithvenue__count__"] = $("#OPNameofconferencewithvenue__count__").val(); validate('OPNameofconferencewithvenue__count__'); }],OPAuthors__count__: [function(event) { $f["OPAuthors__count__"] = $("#OPAuthors__count__").val(); validate('OPAuthors__count__'); }],OPTitleofthepaper__count__: [function(event) { $f["OPTitleofthepaper__count__"] = $("#OPTitleofthepaper__count__").val(); validate('OPTitleofthepaper__count__'); }],OPImpactfactor__count__: [function(event) { $f["OPImpactfactor__count__"] = $("#OPImpactfactor__count__").val(); validate('OPImpactfactor__count__'); }],NameoftheConnference__count__: [function(event) { $f["NameoftheConnference__count__"] = $("#NameoftheConnference__count__").val(); validate('NameoftheConnference__count__'); }],ConferenceYear__count__: [function(event) { $f["ConferenceYear__count__"] = $("#ConferenceYear__count__").val(); validate('ConferenceYear__count__'); }],ConferenceVolumeNo__count__: [function(event) { $f["ConferenceVolumeNo__count__"] = $("#ConferenceVolumeNo__count__").val(); validate('ConferenceVolumeNo__count__'); }],ConferenceTitleofthepaper__count__: [function(event) { $f["ConferenceTitleofthepaper__count__"] = $("#ConferenceTitleofthepaper__count__").val(); validate('ConferenceTitleofthepaper__count__'); }],TitleoftheWorkshoporganized__count__: [function(event) { $f["TitleoftheWorkshoporganized__count__"] = $("#TitleoftheWorkshoporganized__count__").val(); validate('TitleoftheWorkshoporganized__count__'); }],WTYear__count__: [function(event) { $f["WTYear__count__"] = $("#WTYear__count__").val(); validate('WTYear__count__'); }],WTVenue__count__: [function(event) { $f["WTVenue__count__"] = $("#WTVenue__count__").val(); validate('WTVenue__count__'); }],SponsoringAuthority__count__: [function(event) { $f["SponsoringAuthority__count__"] = $("#SponsoringAuthority__count__").val(); validate('SponsoringAuthority__count__'); }],TitleoftheThesisSupervised__count__: [function(event) { $f["TitleoftheThesisSupervised__count__"] = $("#TitleoftheThesisSupervised__count__").val(); validate('TitleoftheThesisSupervised__count__'); }],Completedyear__count__: [function(event) { $f["Completedyear__count__"] = $("#Completedyear__count__").val(); validate('Completedyear__count__'); }],InprogressWithstatus__count__: [function(event) { $f["InprogressWithstatus__count__"] = $("#InprogressWithstatus__count__").val(); validate('InprogressWithstatus__count__'); }],PrincipalorCoSupervisor__count__: [function(event) { $f["PrincipalorCoSupervisor__count__"] = $("#PrincipalorCoSupervisor__count__").val(); validate('PrincipalorCoSupervisor__count__'); }],SectionOfficeInstitutelevelcommittee__count__: [function(event) { $f["SectionOfficeInstitutelevelcommittee__count__"] = $("#SectionOfficeInstitutelevelcommittee__count__").val(); validate('SectionOfficeInstitutelevelcommittee__count__'); }],AOAFrom__count__: [function(event) { $f["AOAFrom__count__"] = $("#AOAFrom__count__").val(); validate('AOAFrom__count__'); }],AOATo__count__: [function(event) { $f["AOATo__count__"] = $("#AOATo__count__").val(); validate('AOATo__count__'); }],PositionHeld__count__: [function(event) { $f["PositionHeld__count__"] = $("#PositionHeld__count__").val(); validate('PositionHeld__count__'); }],ResponsibilityType__count__: [function(event) { $f["ResponsibilityType__count__"] = $("#ResponsibilityType__count__").val(); validate('ResponsibilityType__count__'); }],Responsibilities__count__: [function(event) { $f["Responsibilities__count__"] = $("#Responsibilities__count__").val(); validate('Responsibilities__count__'); }],AcademicOutreachActivities__count__: [function(event) { $f["AcademicOutreachActivities__count__"] = $("#AcademicOutreachActivities__count__").val(); validate('AcademicOutreachActivities__count__'); }],AOAYear__count__: [function(event) { $f["AOAYear__count__"] = $("#AOAYear__count__").val(); validate('AOAYear__count__'); }],PPYear__count__: [function(event) { $f["PPYear__count__"] = $("#PPYear__count__").val(); validate('PPYear__count__'); }],PPpercentage__count__: [function(event) { $f["PPpercentage__count__"] = $("#PPpercentage__count__").val(); validate('PPpercentage__count__'); }],AwardsHonorsDistinction: [function(event) { $f["AwardsHonorsDistinction"] = $("#AwardsHonorsDistinction").val(); validate('AwardsHonorsDistinction'); }],TeachingandResearchPlanforNextFiveYears: [function(event) { $f["TeachingandResearchPlanforNextFiveYears"] = $("#TeachingandResearchPlanforNextFiveYears").val(); validate('TeachingandResearchPlanforNextFiveYears'); }],AnyOtherRelevantInfo: [function(event) { $f["AnyOtherRelevantInfo"] = $("#AnyOtherRelevantInfo").val(); validate('AnyOtherRelevantInfo'); }],RefName: [function(event) { $f["RefName"] = $("#RefName").val(); validate('RefName'); }],RefPosition: [function(event) { $f["RefPosition"] = $("#RefPosition").val(); validate('RefPosition'); }],RefAddress: [function(event) { $f["RefAddress"] = $("#RefAddress").val(); validate('RefAddress'); }],RefEmail: [function(event) { $f["RefEmail"] = $("#RefEmail").val(); validate('RefEmail'); }],RefPhoneNumber: [function(event) { $f["RefPhoneNumber"] = $("#RefPhoneNumber").val(); validate('RefPhoneNumber'); }],RefMobile: [function(event) { $f["RefMobile"] = $("#RefMobile").val(); validate('RefMobile'); }],DidyoupreviouslyapplyforanypostinthisinstituteIfyesgiveparticulars: [function(event) { $f["DidyoupreviouslyapplyforanypostinthisinstituteIfyesgiveparticulars"] = $("#DidyoupreviouslyapplyforanypostinthisinstituteIfyesgiveparticulars").val(); validate('DidyoupreviouslyapplyforanypostinthisinstituteIfyesgiveparticulars'); }] };
let onValidates = {"DepartmentAppliedFor": (err) => {
        if (err.constructor !== Array) $("#error-DepartmentAppliedFor").hide();
        else                           $("#error-DepartmentAppliedFor").show().html(err[0].message);
    },"PostAppliedFor": (err) => {
        if (err.constructor !== Array) $("#error-PostAppliedFor").hide();
        else                           $("#error-PostAppliedFor").show().html(err[0].message);
    },"ApplicationSpecialization": (err) => {
        if (err.constructor !== Array) $("#error-ApplicationSpecialization").hide();
        else                           $("#error-ApplicationSpecialization").show().html(err[0].message);
    },"internalCandidate": (err) => {
        if (err.constructor !== Array) $("#error-internalCandidate").hide();
        else                           $("#error-internalCandidate").show().html(err[0].message);
    },"StaffNumber": (err) => {
        if (err.constructor !== Array) $("#error-StaffNumber").hide();
        else                           $("#error-StaffNumber").show().html(err[0].message);
    },"DateofLastPromotion": (err) => {
        if (err.constructor !== Array) $("#error-DateofLastPromotion").hide();
        else                           $("#error-DateofLastPromotion").show().html(err[0].message);
    },"FullName": (err) => {
        if (err.constructor !== Array) $("#error-FullName").hide();
        else                           $("#error-FullName").show().html(err[0].message);
    },"FathersHusbandsName": (err) => {
        if (err.constructor !== Array) $("#error-FathersHusbandsName").hide();
        else                           $("#error-FathersHusbandsName").show().html(err[0].message);
    },"dob": (err) => {
        if (err.constructor !== Array) $("#error-dob").hide();
        else                           $("#error-dob").show().html(err[0].message);
    },"Age": (err) => {
        if (err.constructor !== Array) $("#error-Age").hide();
        else                           $("#error-Age").show().html(err[0].message);
    },"Gender": (err) => {
        if (err.constructor !== Array) $("#error-Gender").hide();
        else                           $("#error-Gender").show().html(err[0].message);
    },"Category": (err) => {
        if (err.constructor !== Array) $("#error-Category").hide();
        else                           $("#error-Category").show().html(err[0].message);
    },"Nationality": (err) => {
        if (err.constructor !== Array) $("#error-Nationality").hide();
        else                           $("#error-Nationality").show().html(err[0].message);
    },"StateUT": (err) => {
        if (err.constructor !== Array) $("#error-StateUT").hide();
        else                           $("#error-StateUT").show().html(err[0].message);
    },"MaritalStatus": (err) => {
        if (err.constructor !== Array) $("#error-MaritalStatus").hide();
        else                           $("#error-MaritalStatus").show().html(err[0].message);
    },"PANnumber": (err) => {
        if (err.constructor !== Array) $("#error-PANnumber").hide();
        else                           $("#error-PANnumber").show().html(err[0].message);
    },"AadhaarNumber": (err) => {
        if (err.constructor !== Array) $("#error-AadhaarNumber").hide();
        else                           $("#error-AadhaarNumber").show().html(err[0].message);
    },"Email": (err) => {
        if (err.constructor !== Array) $("#error-Email").hide();
        else                           $("#error-Email").show().html(err[0].message);
    },"ContactNobrwithcountrycode": (err) => {
        if (err.constructor !== Array) $("#error-ContactNobrwithcountrycode").hide();
        else                           $("#error-ContactNobrwithcountrycode").show().html(err[0].message);
    },"AlternativeContactNo": (err) => {
        if (err.constructor !== Array) $("#error-AlternativeContactNo").hide();
        else                           $("#error-AlternativeContactNo").show().html(err[0].message);
    },"Address": (err) => {
        if (err.constructor !== Array) $("#error-Address").hide();
        else                           $("#error-Address").show().html(err[0].message);
    },"PermanentAddress": (err) => {
        if (err.constructor !== Array) $("#error-PermanentAddress").hide();
        else                           $("#error-PermanentAddress").show().html(err[0].message);
    },"Photo": (err) => {
        if (err.constructor !== Array) $("#error-Photo").hide();
        else                           $("#error-Photo").show().html(err[0].message);
    },"Examination__count__": (err) => {
        if (err.constructor !== Array) $("#error-Examination__count__").hide();
        else                           $("#error-Examination__count__").show().html(err[0].message);
    },"MatriculationSpecialization__count__": (err) => {
        if (err.constructor !== Array) $("#error-MatriculationSpecialization__count__").hide();
        else                           $("#error-MatriculationSpecialization__count__").show().html(err[0].message);
    },"Description__count__": (err) => {
        if (err.constructor !== Array) $("#error-Description__count__").hide();
        else                           $("#error-Description__count__").show().html(err[0].message);
    },"UGDegreeName": (err) => {
        if (err.constructor !== Array) $("#error-UGDegreeName").hide();
        else                           $("#error-UGDegreeName").show().html(err[0].message);
    },"UGSpecialization": (err) => {
        if (err.constructor !== Array) $("#error-UGSpecialization").hide();
        else                           $("#error-UGSpecialization").show().html(err[0].message);
    },"UGCollege": (err) => {
        if (err.constructor !== Array) $("#error-UGCollege").hide();
        else                           $("#error-UGCollege").show().html(err[0].message);
    },"UGYearOfPassing": (err) => {
        if (err.constructor !== Array) $("#error-UGYearOfPassing").hide();
        else                           $("#error-UGYearOfPassing").show().html(err[0].message);
    },"UGBoardUniv": (err) => {
        if (err.constructor !== Array) $("#error-UGBoardUniv").hide();
        else                           $("#error-UGBoardUniv").show().html(err[0].message);
    },"UGMarksCGPAobtained": (err) => {
        if (err.constructor !== Array) $("#error-UGMarksCGPAobtained").hide();
        else                           $("#error-UGMarksCGPAobtained").show().html(err[0].message);
    },"UGMaximummarksCGPA": (err) => {
        if (err.constructor !== Array) $("#error-UGMaximummarksCGPA").hide();
        else                           $("#error-UGMaximummarksCGPA").show().html(err[0].message);
    },"UGMarksCGPA": (err) => {
        if (err.constructor !== Array) $("#error-UGMarksCGPA").hide();
        else                           $("#error-UGMarksCGPA").show().html(err[0].message);
    },"UGPassedClassDivision": (err) => {
        if (err.constructor !== Array) $("#error-UGPassedClassDivision").hide();
        else                           $("#error-UGPassedClassDivision").show().html(err[0].message);
    },"UGSemesterNo__count__": (err) => {
        if (err.constructor !== Array) $("#error-UGSemesterNo__count__").hide();
        else                           $("#error-UGSemesterNo__count__").show().html(err[0].message);
    },"UGCodeNameofsubject__count__": (err) => {
        if (err.constructor !== Array) $("#error-UGCodeNameofsubject__count__").hide();
        else                           $("#error-UGCodeNameofsubject__count__").show().html(err[0].message);
    },"UGNumberofattempts__count__": (err) => {
        if (err.constructor !== Array) $("#error-UGNumberofattempts__count__").hide();
        else                           $("#error-UGNumberofattempts__count__").show().html(err[0].message);
    },"UGMonthYearofPassing__count__": (err) => {
        if (err.constructor !== Array) $("#error-UGMonthYearofPassing__count__").hide();
        else                           $("#error-UGMonthYearofPassing__count__").show().html(err[0].message);
    },"UGofMarksGrade__count__": (err) => {
        if (err.constructor !== Array) $("#error-UGofMarksGrade__count__").hide();
        else                           $("#error-UGofMarksGrade__count__").show().html(err[0].message);
    },"PGDegreeName": (err) => {
        if (err.constructor !== Array) $("#error-PGDegreeName").hide();
        else                           $("#error-PGDegreeName").show().html(err[0].message);
    },"PGSubjectsDiscipline": (err) => {
        if (err.constructor !== Array) $("#error-PGSubjectsDiscipline").hide();
        else                           $("#error-PGSubjectsDiscipline").show().html(err[0].message);
    },"PGInstituteName": (err) => {
        if (err.constructor !== Array) $("#error-PGInstituteName").hide();
        else                           $("#error-PGInstituteName").show().html(err[0].message);
    },"PGYearofPassing": (err) => {
        if (err.constructor !== Array) $("#error-PGYearofPassing").hide();
        else                           $("#error-PGYearofPassing").show().html(err[0].message);
    },"PGBoardUniversity": (err) => {
        if (err.constructor !== Array) $("#error-PGBoardUniversity").hide();
        else                           $("#error-PGBoardUniversity").show().html(err[0].message);
    },"PGMarksCGPAobtained": (err) => {
        if (err.constructor !== Array) $("#error-PGMarksCGPAobtained").hide();
        else                           $("#error-PGMarksCGPAobtained").show().html(err[0].message);
    },"PGMaximumMarksCGPA": (err) => {
        if (err.constructor !== Array) $("#error-PGMaximumMarksCGPA").hide();
        else                           $("#error-PGMaximumMarksCGPA").show().html(err[0].message);
    },"PGMarksCGPA": (err) => {
        if (err.constructor !== Array) $("#error-PGMarksCGPA").hide();
        else                           $("#error-PGMarksCGPA").show().html(err[0].message);
    },"PGDivision": (err) => {
        if (err.constructor !== Array) $("#error-PGDivision").hide();
        else                           $("#error-PGDivision").show().html(err[0].message);
    },"PGSemesterNo__count__": (err) => {
        if (err.constructor !== Array) $("#error-PGSemesterNo__count__").hide();
        else                           $("#error-PGSemesterNo__count__").show().html(err[0].message);
    },"PGCodeNameofsubject__count__": (err) => {
        if (err.constructor !== Array) $("#error-PGCodeNameofsubject__count__").hide();
        else                           $("#error-PGCodeNameofsubject__count__").show().html(err[0].message);
    },"PGNumberofattempts__count__": (err) => {
        if (err.constructor !== Array) $("#error-PGNumberofattempts__count__").hide();
        else                           $("#error-PGNumberofattempts__count__").show().html(err[0].message);
    },"PGMonthYearofPassing__count__": (err) => {
        if (err.constructor !== Array) $("#error-PGMonthYearofPassing__count__").hide();
        else                           $("#error-PGMonthYearofPassing__count__").show().html(err[0].message);
    },"PGofMarksGrade__count__": (err) => {
        if (err.constructor !== Array) $("#error-PGofMarksGrade__count__").hide();
        else                           $("#error-PGofMarksGrade__count__").show().html(err[0].message);
    },"AwardedDate": (err) => {
        if (err.constructor !== Array) $("#error-AwardedDate").hide();
        else                           $("#error-AwardedDate").show().html(err[0].message);
    },"Title": (err) => {
        if (err.constructor !== Array) $("#error-Title").hide();
        else                           $("#error-Title").show().html(err[0].message);
    },"University": (err) => {
        if (err.constructor !== Array) $("#error-University").hide();
        else                           $("#error-University").show().html(err[0].message);
    },"EmployerOrganization": (err) => {
        if (err.constructor !== Array) $("#error-EmployerOrganization").hide();
        else                           $("#error-EmployerOrganization").show().html(err[0].message);
    },"PositionHeld": (err) => {
        if (err.constructor !== Array) $("#error-PositionHeld").hide();
        else                           $("#error-PositionHeld").show().html(err[0].message);
    },"TypeofEmployer": (err) => {
        if (err.constructor !== Array) $("#error-TypeofEmployer").hide();
        else                           $("#error-TypeofEmployer").show().html(err[0].message);
    },"WorkedFrom": (err) => {
        if (err.constructor !== Array) $("#error-WorkedFrom").hide();
        else                           $("#error-WorkedFrom").show().html(err[0].message);
    },"WorkedTill": (err) => {
        if (err.constructor !== Array) $("#error-WorkedTill").hide();
        else                           $("#error-WorkedTill").show().html(err[0].message);
    },"PayinPayBand": (err) => {
        if (err.constructor !== Array) $("#error-PayinPayBand").hide();
        else                           $("#error-PayinPayBand").show().html(err[0].message);
    },"AGPGP": (err) => {
        if (err.constructor !== Array) $("#error-AGPGP").hide();
        else                           $("#error-AGPGP").show().html(err[0].message);
    },"BasicPay": (err) => {
        if (err.constructor !== Array) $("#error-BasicPay").hide();
        else                           $("#error-BasicPay").show().html(err[0].message);
    },"NatureofWork": (err) => {
        if (err.constructor !== Array) $("#error-NatureofWork").hide();
        else                           $("#error-NatureofWork").show().html(err[0].message);
    },"ResearchOrganization": (err) => {
        if (err.constructor !== Array) $("#error-ResearchOrganization").hide();
        else                           $("#error-ResearchOrganization").show().html(err[0].message);
    },"ResearchPositionHeld": (err) => {
        if (err.constructor !== Array) $("#error-ResearchPositionHeld").hide();
        else                           $("#error-ResearchPositionHeld").show().html(err[0].message);
    },"ResearchFrom": (err) => {
        if (err.constructor !== Array) $("#error-ResearchFrom").hide();
        else                           $("#error-ResearchFrom").show().html(err[0].message);
    },"ResearchTill": (err) => {
        if (err.constructor !== Array) $("#error-ResearchTill").hide();
        else                           $("#error-ResearchTill").show().html(err[0].message);
    },"TotalResearchGrant": (err) => {
        if (err.constructor !== Array) $("#error-TotalResearchGrant").hide();
        else                           $("#error-TotalResearchGrant").show().html(err[0].message);
    },"ReasonforLeaving": (err) => {
        if (err.constructor !== Array) $("#error-ReasonforLeaving").hide();
        else                           $("#error-ReasonforLeaving").show().html(err[0].message);
    },"NameOfOrganization__count__": (err) => {
        if (err.constructor !== Array) $("#error-NameOfOrganization__count__").hide();
        else                           $("#error-NameOfOrganization__count__").show().html(err[0].message);
    },"AddressOfOrganization__count__": (err) => {
        if (err.constructor !== Array) $("#error-AddressOfOrganization__count__").hide();
        else                           $("#error-AddressOfOrganization__count__").show().html(err[0].message);
    },"Natureofwork__count__": (err) => {
        if (err.constructor !== Array) $("#error-Natureofwork__count__").hide();
        else                           $("#error-Natureofwork__count__").show().html(err[0].message);
    },"payscale__count__": (err) => {
        if (err.constructor !== Array) $("#error-payscale__count__").hide();
        else                           $("#error-payscale__count__").show().html(err[0].message);
    },"From__count__": (err) => {
        if (err.constructor !== Array) $("#error-From__count__").hide();
        else                           $("#error-From__count__").show().html(err[0].message);
    },"To__count__": (err) => {
        if (err.constructor !== Array) $("#error-To__count__").hide();
        else                           $("#error-To__count__").show().html(err[0].message);
    },"TypeofOrganization__count__": (err) => {
        if (err.constructor !== Array) $("#error-TypeofOrganization__count__").hide();
        else                           $("#error-TypeofOrganization__count__").show().html(err[0].message);
    },"Reasonsforleaving__count__": (err) => {
        if (err.constructor !== Array) $("#error-Reasonsforleaving__count__").hide();
        else                           $("#error-Reasonsforleaving__count__").show().html(err[0].message);
    },"ProjectTitle": (err) => {
        if (err.constructor !== Array) $("#error-ProjectTitle").hide();
        else                           $("#error-ProjectTitle").show().html(err[0].message);
    },"SponsoringAgency": (err) => {
        if (err.constructor !== Array) $("#error-SponsoringAgency").hide();
        else                           $("#error-SponsoringAgency").show().html(err[0].message);
    },"ProjectFrom": (err) => {
        if (err.constructor !== Array) $("#error-ProjectFrom").hide();
        else                           $("#error-ProjectFrom").show().html(err[0].message);
    },"ProjectTo": (err) => {
        if (err.constructor !== Array) $("#error-ProjectTo").hide();
        else                           $("#error-ProjectTo").show().html(err[0].message);
    },"ProjectAmount": (err) => {
        if (err.constructor !== Array) $("#error-ProjectAmount").hide();
        else                           $("#error-ProjectAmount").show().html(err[0].message);
    },"Status": (err) => {
        if (err.constructor !== Array) $("#error-Status").hide();
        else                           $("#error-Status").show().html(err[0].message);
    },"ProjectRole": (err) => {
        if (err.constructor !== Array) $("#error-ProjectRole").hide();
        else                           $("#error-ProjectRole").show().html(err[0].message);
    },"CoPI": (err) => {
        if (err.constructor !== Array) $("#error-CoPI").hide();
        else                           $("#error-CoPI").show().html(err[0].message);
    },"PatentName": (err) => {
        if (err.constructor !== Array) $("#error-PatentName").hide();
        else                           $("#error-PatentName").show().html(err[0].message);
    },"PatentRegistrationNo": (err) => {
        if (err.constructor !== Array) $("#error-PatentRegistrationNo").hide();
        else                           $("#error-PatentRegistrationNo").show().html(err[0].message);
    },"PatentDate": (err) => {
        if (err.constructor !== Array) $("#error-PatentDate").hide();
        else                           $("#error-PatentDate").show().html(err[0].message);
    },"AwardingOrganization": (err) => {
        if (err.constructor !== Array) $("#error-AwardingOrganization").hide();
        else                           $("#error-AwardingOrganization").show().html(err[0].message);
    },"PatentRole": (err) => {
        if (err.constructor !== Array) $("#error-PatentRole").hide();
        else                           $("#error-PatentRole").show().html(err[0].message);
    },"PatentCoPI": (err) => {
        if (err.constructor !== Array) $("#error-PatentCoPI").hide();
        else                           $("#error-PatentCoPI").show().html(err[0].message);
    },"PatentPI": (err) => {
        if (err.constructor !== Array) $("#error-PatentPI").hide();
        else                           $("#error-PatentPI").show().html(err[0].message);
    },"NameoftheJournal__count__": (err) => {
        if (err.constructor !== Array) $("#error-NameoftheJournal__count__").hide();
        else                           $("#error-NameoftheJournal__count__").show().html(err[0].message);
    },"VolumeNo__count__": (err) => {
        if (err.constructor !== Array) $("#error-VolumeNo__count__").hide();
        else                           $("#error-VolumeNo__count__").show().html(err[0].message);
    },"month__count__": (err) => {
        if (err.constructor !== Array) $("#error-month__count__").hide();
        else                           $("#error-month__count__").show().html(err[0].message);
    },"Year__count__": (err) => {
        if (err.constructor !== Array) $("#error-Year__count__").hide();
        else                           $("#error-Year__count__").show().html(err[0].message);
    },"Authors__count__": (err) => {
        if (err.constructor !== Array) $("#error-Authors__count__").hide();
        else                           $("#error-Authors__count__").show().html(err[0].message);
    },"Titleofthepaper__count__": (err) => {
        if (err.constructor !== Array) $("#error-Titleofthepaper__count__").hide();
        else                           $("#error-Titleofthepaper__count__").show().html(err[0].message);
    },"Impactfactor__count__": (err) => {
        if (err.constructor !== Array) $("#error-Impactfactor__count__").hide();
        else                           $("#error-Impactfactor__count__").show().html(err[0].message);
    },"OPNameofconferencewithvenue__count__": (err) => {
        if (err.constructor !== Array) $("#error-OPNameofconferencewithvenue__count__").hide();
        else                           $("#error-OPNameofconferencewithvenue__count__").show().html(err[0].message);
    },"OPAuthors__count__": (err) => {
        if (err.constructor !== Array) $("#error-OPAuthors__count__").hide();
        else                           $("#error-OPAuthors__count__").show().html(err[0].message);
    },"OPTitleofthepaper__count__": (err) => {
        if (err.constructor !== Array) $("#error-OPTitleofthepaper__count__").hide();
        else                           $("#error-OPTitleofthepaper__count__").show().html(err[0].message);
    },"OPImpactfactor__count__": (err) => {
        if (err.constructor !== Array) $("#error-OPImpactfactor__count__").hide();
        else                           $("#error-OPImpactfactor__count__").show().html(err[0].message);
    },"NameoftheConnference__count__": (err) => {
        if (err.constructor !== Array) $("#error-NameoftheConnference__count__").hide();
        else                           $("#error-NameoftheConnference__count__").show().html(err[0].message);
    },"ConferenceYear__count__": (err) => {
        if (err.constructor !== Array) $("#error-ConferenceYear__count__").hide();
        else                           $("#error-ConferenceYear__count__").show().html(err[0].message);
    },"ConferenceVolumeNo__count__": (err) => {
        if (err.constructor !== Array) $("#error-ConferenceVolumeNo__count__").hide();
        else                           $("#error-ConferenceVolumeNo__count__").show().html(err[0].message);
    },"ConferenceTitleofthepaper__count__": (err) => {
        if (err.constructor !== Array) $("#error-ConferenceTitleofthepaper__count__").hide();
        else                           $("#error-ConferenceTitleofthepaper__count__").show().html(err[0].message);
    },"TitleoftheWorkshoporganized__count__": (err) => {
        if (err.constructor !== Array) $("#error-TitleoftheWorkshoporganized__count__").hide();
        else                           $("#error-TitleoftheWorkshoporganized__count__").show().html(err[0].message);
    },"WTYear__count__": (err) => {
        if (err.constructor !== Array) $("#error-WTYear__count__").hide();
        else                           $("#error-WTYear__count__").show().html(err[0].message);
    },"WTVenue__count__": (err) => {
        if (err.constructor !== Array) $("#error-WTVenue__count__").hide();
        else                           $("#error-WTVenue__count__").show().html(err[0].message);
    },"SponsoringAuthority__count__": (err) => {
        if (err.constructor !== Array) $("#error-SponsoringAuthority__count__").hide();
        else                           $("#error-SponsoringAuthority__count__").show().html(err[0].message);
    },"TitleoftheThesisSupervised__count__": (err) => {
        if (err.constructor !== Array) $("#error-TitleoftheThesisSupervised__count__").hide();
        else                           $("#error-TitleoftheThesisSupervised__count__").show().html(err[0].message);
    },"Completedyear__count__": (err) => {
        if (err.constructor !== Array) $("#error-Completedyear__count__").hide();
        else                           $("#error-Completedyear__count__").show().html(err[0].message);
    },"InprogressWithstatus__count__": (err) => {
        if (err.constructor !== Array) $("#error-InprogressWithstatus__count__").hide();
        else                           $("#error-InprogressWithstatus__count__").show().html(err[0].message);
    },"PrincipalorCoSupervisor__count__": (err) => {
        if (err.constructor !== Array) $("#error-PrincipalorCoSupervisor__count__").hide();
        else                           $("#error-PrincipalorCoSupervisor__count__").show().html(err[0].message);
    },"SectionOfficeInstitutelevelcommittee__count__": (err) => {
        if (err.constructor !== Array) $("#error-SectionOfficeInstitutelevelcommittee__count__").hide();
        else                           $("#error-SectionOfficeInstitutelevelcommittee__count__").show().html(err[0].message);
    },"AOAFrom__count__": (err) => {
        if (err.constructor !== Array) $("#error-AOAFrom__count__").hide();
        else                           $("#error-AOAFrom__count__").show().html(err[0].message);
    },"AOATo__count__": (err) => {
        if (err.constructor !== Array) $("#error-AOATo__count__").hide();
        else                           $("#error-AOATo__count__").show().html(err[0].message);
    },"PositionHeld__count__": (err) => {
        if (err.constructor !== Array) $("#error-PositionHeld__count__").hide();
        else                           $("#error-PositionHeld__count__").show().html(err[0].message);
    },"ResponsibilityType__count__": (err) => {
        if (err.constructor !== Array) $("#error-ResponsibilityType__count__").hide();
        else                           $("#error-ResponsibilityType__count__").show().html(err[0].message);
    },"Responsibilities__count__": (err) => {
        if (err.constructor !== Array) $("#error-Responsibilities__count__").hide();
        else                           $("#error-Responsibilities__count__").show().html(err[0].message);
    },"AcademicOutreachActivities__count__": (err) => {
        if (err.constructor !== Array) $("#error-AcademicOutreachActivities__count__").hide();
        else                           $("#error-AcademicOutreachActivities__count__").show().html(err[0].message);
    },"AOAYear__count__": (err) => {
        if (err.constructor !== Array) $("#error-AOAYear__count__").hide();
        else                           $("#error-AOAYear__count__").show().html(err[0].message);
    },"PPYear__count__": (err) => {
        if (err.constructor !== Array) $("#error-PPYear__count__").hide();
        else                           $("#error-PPYear__count__").show().html(err[0].message);
    },"PPpercentage__count__": (err) => {
        if (err.constructor !== Array) $("#error-PPpercentage__count__").hide();
        else                           $("#error-PPpercentage__count__").show().html(err[0].message);
    },"AwardsHonorsDistinction": (err) => {
        if (err.constructor !== Array) $("#error-AwardsHonorsDistinction").hide();
        else                           $("#error-AwardsHonorsDistinction").show().html(err[0].message);
    },"TeachingandResearchPlanforNextFiveYears": (err) => {
        if (err.constructor !== Array) $("#error-TeachingandResearchPlanforNextFiveYears").hide();
        else                           $("#error-TeachingandResearchPlanforNextFiveYears").show().html(err[0].message);
    },"AnyOtherRelevantInfo": (err) => {
        if (err.constructor !== Array) $("#error-AnyOtherRelevantInfo").hide();
        else                           $("#error-AnyOtherRelevantInfo").show().html(err[0].message);
    },"RefName": (err) => {
        if (err.constructor !== Array) $("#error-RefName").hide();
        else                           $("#error-RefName").show().html(err[0].message);
    },"RefPosition": (err) => {
        if (err.constructor !== Array) $("#error-RefPosition").hide();
        else                           $("#error-RefPosition").show().html(err[0].message);
    },"RefAddress": (err) => {
        if (err.constructor !== Array) $("#error-RefAddress").hide();
        else                           $("#error-RefAddress").show().html(err[0].message);
    },"RefEmail": (err) => {
        if (err.constructor !== Array) $("#error-RefEmail").hide();
        else                           $("#error-RefEmail").show().html(err[0].message);
    },"RefPhoneNumber": (err) => {
        if (err.constructor !== Array) $("#error-RefPhoneNumber").hide();
        else                           $("#error-RefPhoneNumber").show().html(err[0].message);
    },"RefMobile": (err) => {
        if (err.constructor !== Array) $("#error-RefMobile").hide();
        else                           $("#error-RefMobile").show().html(err[0].message);
    },"DidyoupreviouslyapplyforanypostinthisinstituteIfyesgiveparticulars": (err) => {
        if (err.constructor !== Array) $("#error-DidyoupreviouslyapplyforanypostinthisinstituteIfyesgiveparticulars").hide();
        else                           $("#error-DidyoupreviouslyapplyforanypostinthisinstituteIfyesgiveparticulars").show().html(err[0].message);
    },};
let validate = (name) => {
  let myData = {};
  let myRules = {};

  myData[name] = $f[name];
  myRules[name] = rules[name];

  if (!myRules[name]) {
    return onValidates[name]({});
  }

  // same handler will handle both validation success and validation failure
  indicative.validate(myData, myRules, {
    "required": "This field is required to complete registeration process",
  })
    .then(onValidates[name])
    .catch(onValidates[name]);
};

indicative.extend('js', (data, field, message, args) => {
    let code = args.join(","); // in case there was a ',' in code, and indicative thought it 
                               // was indicative of separating an argument instead of part
                               // of js code itself
    if (eval(code)) {
        return Promise.resolve('');
    }
    return Promise.reject('Invalid data');
});

indicative.extend('requiredFile', (data, field, message, args, get) => {
    return new Promise(function(resolve, reject) {
        const file = get(data, field);
        if(!file)
            return reject('Field is required for completing the registration');
        return resolve('');
    });
});

indicative.extend('fileMimeType', (data, field, message, args, get) => {
    return new Promise(function(resolve, reject) {
        const file = get(data, field);
        if(!file)
            return reject('Field is required for completing the registration');
        
        for(let i in args) {
            if(file.name.endsWith("." + args[i]))
                return resolve("");
        }
        return reject('Not a valid file. Please upload files of type ' + args);
    });
});

indicative.extend('fileSize', (data, field, message, args, get) => {
    return new Promise(function(resolve, reject) {
        const file = get(data, field);
        if(!file)
            return reject('Field is required for completing the registration');
        
        if(file.size/1024 > args[0])
            return reject('File size limit exceeded. Upload a file lesser than ' + args[0] + 'KB');
        return resolve("");
    });
});

indicative.extend('imageMaxHeight', (data, field, message, args, get) => {
    return new Promise(function(resolve, reject) {
        const file = get(data, field);
        if(!file)
            return reject('Field is required for completing the registration');
        
        let reader = new FileReader();
        reader.onload = function(e) {
            let img = $('<img>', {src: e.target.result})[0];
            if(img.height > args[0])
                return reject('File Dimension limit exceeded. Upload a file with height lesser than ' + args[0] + 'px');
            return resolve("");
        };
        reader.readAsDataURL(file);
    });
});

indicative.extend('imageMaxWidth', (data, field, message, args, get) => {
    return new Promise(function(resolve, reject) {
        const file = get(data, field);
        if(!file)
            return reject('Field is required for completing the registration');
        
        let reader = new FileReader();
        reader.onload = function(e) {
            let img = $('<img>', {src: e.target.result})[0];
            if(img.width > args[0])
                return reject('File Dimension limit exceeded. Upload a file with width lesser than ' + args[0] + 'px');
            return resolve("");
        };
        reader.readAsDataURL(file);
    });
});


            function toggleRemoveButtonAndPreview_Photo(event) {
              // Display the preview and remove button if a file has been selected
              // Else hide them
              let files = $("#Photo")[0].files;
              if( files === undefined || !files.length) {
                  $("#removeUploadButton_Photo").hide();
                  $("#filePreview_Photo").hide();
              } else {
                  
                let file = files[0];
                let reader = new FileReader();
                reader.onload = function(e) {
                    $("#filePreview_Photo").html($('<img>', {
                        src: e.target.result,
                        style: "width:100%;"
                    }));
                };
                reader.readAsDataURL(file);
            
                  $("#removeUploadButton_Photo").show();
                  $("#filePreview_Photo").show();
              }
              event && event.stopPropagation();
              event && event.preventDefault();
              return false;
            }
            function removeUpload_Photo(event) {
              // Reset the file input's value and call the toggleRemoveButtonAndPreview
              // to remove the preview and remove button
              $("#Photo")[0].value = "";
              toggleRemoveButtonAndPreview_Photo();
              $f["Photo"] = null;

              event && event.stopPropagation();
              event && event.preventDefault();
              return false;
            }
            // Call the function to hide both the remove button and preview
            // initially. Will be helpful to automatically display them when
            // we get the uploaded values from server also.
            toggleRemoveButtonAndPreview_Photo();
        


    let nRows_matriculationDetails = 0;
    let nRows_matriculationDetails_real = 0;
    function delRow_matriculationDetails(event, rowNumber) {
        let rowId = "matriculationDetails-" + rowNumber;
        $("#" + rowId).remove();
        nRows_matriculationDetails_real--;
        if (nRows_matriculationDetails_real < 100) {
            $("#rowAdder_matriculationDetails").attr('disabled', false);
        }
        event && event.preventDefault();
        event && event.stopPropagation();
        return false;
    }
    function addRow_matriculationDetails(event) {
        // create every element in the row
        // add each element to the rules array
        // NOT-SUPPORTED: call addTrigger on each element
        // add function to onValidates for each element
        // add each element to the $f object
        let nRows = ++nRows_matriculationDetails;
        let rowId = "matriculationDetails-" + nRows;
        let elements = [{"name":"Examination__count__","validationrule":"required"},{"name":"MatriculationSpecialization__count__","validationrule":"required"},{"name":"Description__count__","validationrule":"required"}];
        let html = "\n            <div class=\"form-group row\" id=\"fieldset__88545\">\n        <div class=\"col row\">\n                <label  id=\"label-Examination__count__\" class=\"col-form-label col-md-3\" for=\"Examination__count__\">Examination<span id=\"asterisk-Examination__count__\" style=\"color:red\">*</span></label><div class=\"col-md-3\"><select name=\"Examination__count__\" placeholder=\"Examination\" onchange=\"triggers[&quot;Examination__count__&quot;].forEach(function(f, i) { f.call(this, event) });\" id=\"Examination__count__\" class=\"custom-select form-control form-control-sm\"><option>Examination</option>\n                    <option>Exam1</option>\n                    <option>Exam2</option>\n                </select><span class=\"error\" id=\"error-Examination__count__\" style=\"display:none\">Error</span></div>\n                <label  id=\"label-MatriculationSpecialization__count__\" class=\"col-form-label col-md-3\" for=\"MatriculationSpecialization__count__\">Specialization<span id=\"asterisk-MatriculationSpecialization__count__\" style=\"color:red\">*</span></label><div class=\"col-md-3\"><input name=\"MatriculationSpecialization__count__\" placeholder=\"Examination Passed\" onchange=\"triggers[&quot;MatriculationSpecialization__count__&quot;].forEach(function(f, i) { f.call(this, event) });\" id=\"MatriculationSpecialization__count__\" class=\"form-control form-control-sm\"><span class=\"error\" id=\"error-MatriculationSpecialization__count__\" style=\"display:none\">Error</span></div>\n            </div></div>\n            <div class=\"form-group row\" id=\"fieldset__97996\">\n        <div class=\"col row\">\n                <label  id=\"label-Description__count__\" class=\"col-form-label col-md-3\" for=\"Description__count__\">Description<span id=\"asterisk-Description__count__\" style=\"color:red\">*</span></label><div class=\"col-md-3\"><textarea name=\"Description__count__\" placeholder=\"Description\" onchange=\"triggers[&quot;Description__count__&quot;].forEach(function(f, i) { f.call(this, event) });\" id=\"Description__count__\" class=\"form-control form-control-sm\"></textarea><span class=\"error\" id=\"error-Description__count__\" style=\"display:none\">Error</span></div>\n            </div></div>\n        ";

        let delRowButtonHtml = "";
        if (nRows > 2) {
            // while removing we only remove the element in the DOM, 
            // and don't clean up onValidates, $f, rules variables for simplicity.
            delRowButtonHtml = "<a role='button' href='#' title='Delete row' class='btn btn-danger btn-sm' style='float:right' onclick='delRow_matriculationDetails(event, " + nRows + ")'><span class='fa fa-minus-circle'></span> Delete row</a><br style='clear:both'>"
        }
        if (nRows_matriculationDetails_real + 1 >= 100) {
            $("#rowAdder_matriculationDetails").attr('disabled', 'true');
        }
        let rowHtml = "<div class='box-row' id='" + rowId + "'>" + html.replace(/__count__/g, nRows_matriculationDetails) + delRowButtonHtml + "</div>";
        for (let i = 0; i < elements.length; i++) {
            let elemName = elements[i].name.replace(/__count__/g, nRows_matriculationDetails);

            rules[elemName] = elements[i].validationrule;
            onValidates[elemName] = (err) => {
              if (err.constructor !== Array) $("#error-" + elemName).hide();
              else                           $("#error-" + elemName).show().html(err[0].message);
            };

            $f[elemName] = "";
        }
        //rowHtml += "</div>";

        // finally append the row to the table
        $("#matriculationDetails").append(rowHtml);

        event && event.preventDefault();
        event && event.stopPropagation();

        return false;
    }
    
    for (let i = 0; i < 2; i++)
        addRow_matriculationDetails();
    


        let nRows_ugDetails = 0;
        let nRows_ugDetails_real = 0;
        function delRow_ugDetails(event, rowNumber) {
            let rowId = "ugDetails-" + rowNumber;
            $("#" + rowId).remove();
            nRows_ugDetails_real--;
            if (nRows_ugDetails_real < 100) {
                $("#rowAdder_ugDetails").attr('disabled', false);
            }
            event && event.preventDefault();
            event && event.stopPropagation();
            return false;
        }
        function addRow_ugDetails(event) {
            // create every element in the row
            // add each element to the rules array
            // NOT-SUPPORTED: call addTrigger on each element
            // add function to onValidates for each element
            // add each element to the $f object

            let nRows = ++nRows_ugDetails;
            let rowId = "ugDetails-" + nRows;
            let elements = [{"name":"UGSemesterNo__count__","validationrule":"required","html":"<label  id=\"label-UGSemesterNo__count__\" class=\"col-form-label col-md-2\" for=\"UGSemesterNo__count__\">Semester No.<span id=\"asterisk-UGSemesterNo__count__\" style=\"color:red\">*</span></label><div class=\"col-md-3\"><select name=\"UGSemesterNo__count__\" placeholder=\"Semester No.\" onchange=\"triggers[&quot;UGSemesterNo__count__&quot;].forEach(function(f, i) { f.call(this, event) });\" id=\"UGSemesterNo__count__\" class=\"custom-select form-control form-control-sm\"><option>Semester No.</option>\n                <option>I</option>\n                <option>II</option>\n                <option>III</option>\n                <option>IV</option>\n                <option>V</option>\n                <option>VI</option>\n                <option>VII</option>\n                <option>VIII</option>\n                <option>IX</option>\n                <option>X</option>\n            </select><span class=\"error\" id=\"error-UGSemesterNo__count__\" style=\"display:none\">Error</span></div>"},{"name":"UGCodeNameofsubject__count__","validationrule":"required","html":"<label  id=\"label-UGCodeNameofsubject__count__\" class=\"col-form-label col-md-2\" for=\"UGCodeNameofsubject__count__\">Code & Name of subject<span id=\"asterisk-UGCodeNameofsubject__count__\" style=\"color:red\">*</span></label><div class=\"col-md-3\"><input name=\"UGCodeNameofsubject__count__\" placeholder=\"Code and Name of subject\" onchange=\"triggers[&quot;UGCodeNameofsubject__count__&quot;].forEach(function(f, i) { f.call(this, event) });\" id=\"UGCodeNameofsubject__count__\" class=\"form-control form-control-sm\"><span class=\"error\" id=\"error-UGCodeNameofsubject__count__\" style=\"display:none\">Error</span></div>"},{"name":"UGNumberofattempts__count__","validationrule":"required","html":"<label  id=\"label-UGNumberofattempts__count__\" class=\"col-form-label col-md-2\" for=\"UGNumberofattempts__count__\">Number of attempts<span id=\"asterisk-UGNumberofattempts__count__\" style=\"color:red\">*</span></label><div class=\"col-md-3\"><input name=\"UGNumberofattempts__count__\" placeholder=\"Number of attempts\" onchange=\"triggers[&quot;UGNumberofattempts__count__&quot;].forEach(function(f, i) { f.call(this, event) });\" id=\"UGNumberofattempts__count__\" class=\"form-control form-control-sm\"><span class=\"error\" id=\"error-UGNumberofattempts__count__\" style=\"display:none\">Error</span></div>"},{"name":"UGMonthYearofPassing__count__","validationrule":"required","html":"<label  id=\"label-UGMonthYearofPassing__count__\" class=\"col-form-label col-md-2\" for=\"UGMonthYearofPassing__count__\">Month & Year of Passing<span id=\"asterisk-UGMonthYearofPassing__count__\" style=\"color:red\">*</span></label><div class=\"col-md-3\"><input name=\"UGMonthYearofPassing__count__\" placeholder=\"Month &amp; Year of Passing\" onchange=\"triggers[&quot;UGMonthYearofPassing__count__&quot;].forEach(function(f, i) { f.call(this, event) });\" id=\"UGMonthYearofPassing__count__\" class=\"form-control form-control-sm\"><span class=\"error\" id=\"error-UGMonthYearofPassing__count__\" style=\"display:none\">Error</span></div>"},{"name":"UGofMarksGrade__count__","validationrule":"required","html":"<label  id=\"label-UGofMarksGrade__count__\" class=\"col-form-label col-md-2\" for=\"UGofMarksGrade__count__\">% of Marks/Grade<span id=\"asterisk-UGofMarksGrade__count__\" style=\"color:red\">*</span></label><div class=\"col-md-3\"><input name=\"UGofMarksGrade__count__\" placeholder=\"% of Marks/Grade\" onchange=\"triggers[&quot;UGofMarksGrade__count__&quot;].forEach(function(f, i) { f.call(this, event) });\" id=\"UGofMarksGrade__count__\" class=\"form-control form-control-sm\"><span class=\"error\" id=\"error-UGofMarksGrade__count__\" style=\"display:none\">Error</span></div>"}];
            if (nRows > 1) {
                // while removing we only remove the element in the DOM, 
                // and don't clean up onValidates, $f, rules variables for simplicity.
                elements.push({
                    name: 'delRow',
                    validationrule: '',
                    html: "<a role='button' href='#' title='Delete row' class='btn btn-outline-danger btn-sm' onclick='delRow_ugDetails(event, " + nRows + ")'><span class='fa fa-minus-circle'></span></a>"
                });
            }
            if (nRows_ugDetails_real + 1 >= 100) {
                $("#rowAdder_ugDetails").attr('disabled', 'true');
            }
            let rowHtml = "<tr id='" + rowId + "'>";
            for (let i = 0; i < elements.length; i++) {
                let elemName = elements[i].name.replace(/__count__/g, nRows_ugDetails);

                let elemHtml = elements[i].html.replace(/__count__/g, nRows_ugDetails);
                rowHtml += "<td>" + elemHtml + "</td>";

                rules[elemName] = elements[i].validationrule;
                onValidates[elemName] = (err) => {
                  if (err.constructor !== Array) $("#error-" + elemName).hide();
                  else                           $("#error-" + elemName).show().html(err[0].message);
                };

                $f[elemName] = "";
            }
            rowHtml += "</tr>";

            // finally append the row to the table
            $("#ugDetails").append(rowHtml);

            event && event.preventDefault();
            event && event.stopPropagation();

            return false;
        }
        
        for (let i = 0; i < 1; i++)
            addRow_ugDetails();
        


        let nRows_pgDetails = 0;
        let nRows_pgDetails_real = 0;
        function delRow_pgDetails(event, rowNumber) {
            let rowId = "pgDetails-" + rowNumber;
            $("#" + rowId).remove();
            nRows_pgDetails_real--;
            if (nRows_pgDetails_real < 100) {
                $("#rowAdder_pgDetails").attr('disabled', false);
            }
            event && event.preventDefault();
            event && event.stopPropagation();
            return false;
        }
        function addRow_pgDetails(event) {
            // create every element in the row
            // add each element to the rules array
            // NOT-SUPPORTED: call addTrigger on each element
            // add function to onValidates for each element
            // add each element to the $f object

            let nRows = ++nRows_pgDetails;
            let rowId = "pgDetails-" + nRows;
            let elements = [{"name":"PGSemesterNo__count__","validationrule":"required","html":"<label  id=\"label-PGSemesterNo__count__\" class=\"col-form-label col-md-2\" for=\"PGSemesterNo__count__\">PG Semester No.__count__<span id=\"asterisk-PGSemesterNo__count__\" style=\"color:red\">*</span></label><div class=\"col-md-3\"><select name=\"PGSemesterNo__count__\" placeholder=\"Semester No.\" onchange=\"triggers[&quot;PGSemesterNo__count__&quot;].forEach(function(f, i) { f.call(this, event) });\" id=\"PGSemesterNo__count__\" class=\"custom-select form-control form-control-sm\"><option>Semester No.</option>\n                <option>I</option>\n                <option>II</option>\n                <option>III</option>\n                <option>IV</option>\n                <option>V</option>\n                <option>VI</option>\n                <option>VII</option>\n                <option>VIII</option>\n                <option>IX</option>\n                <option>X</option>\n            </select><span class=\"error\" id=\"error-PGSemesterNo__count__\" style=\"display:none\">Error</span></div>"},{"name":"PGCodeNameofsubject__count__","validationrule":"required","html":"<label  id=\"label-PGCodeNameofsubject__count__\" class=\"col-form-label col-md-2\" for=\"PGCodeNameofsubject__count__\">Code & Name of subject<span id=\"asterisk-PGCodeNameofsubject__count__\" style=\"color:red\">*</span></label><div class=\"col-md-3\"><input name=\"PGCodeNameofsubject__count__\" placeholder=\"Code and Name of subject\" onchange=\"triggers[&quot;PGCodeNameofsubject__count__&quot;].forEach(function(f, i) { f.call(this, event) });\" id=\"PGCodeNameofsubject__count__\" class=\"form-control form-control-sm\"><span class=\"error\" id=\"error-PGCodeNameofsubject__count__\" style=\"display:none\">Error</span></div>"},{"name":"PGNumberofattempts__count__","validationrule":"required","html":"<label  id=\"label-PGNumberofattempts__count__\" class=\"col-form-label col-md-2\" for=\"PGNumberofattempts__count__\">Number of attempts<span id=\"asterisk-PGNumberofattempts__count__\" style=\"color:red\">*</span></label><div class=\"col-md-3\"><input name=\"PGNumberofattempts__count__\" placeholder=\"Number of attempts\" onchange=\"triggers[&quot;PGNumberofattempts__count__&quot;].forEach(function(f, i) { f.call(this, event) });\" id=\"PGNumberofattempts__count__\" class=\"form-control form-control-sm\"><span class=\"error\" id=\"error-PGNumberofattempts__count__\" style=\"display:none\">Error</span></div>"},{"name":"PGMonthYearofPassing__count__","validationrule":"required","html":"<label  id=\"label-PGMonthYearofPassing__count__\" class=\"col-form-label col-md-2\" for=\"PGMonthYearofPassing__count__\">Month & Year of Passing<span id=\"asterisk-PGMonthYearofPassing__count__\" style=\"color:red\">*</span></label><div class=\"col-md-3\"><input name=\"PGMonthYearofPassing__count__\" placeholder=\"Month &amp; Year of Passing\" onchange=\"triggers[&quot;PGMonthYearofPassing__count__&quot;].forEach(function(f, i) { f.call(this, event) });\" id=\"PGMonthYearofPassing__count__\" class=\"form-control form-control-sm\"><span class=\"error\" id=\"error-PGMonthYearofPassing__count__\" style=\"display:none\">Error</span></div>"},{"name":"PGofMarksGrade__count__","validationrule":"required","html":"<label  id=\"label-PGofMarksGrade__count__\" class=\"col-form-label col-md-2\" for=\"PGofMarksGrade__count__\">% of Marks/Grade<span id=\"asterisk-PGofMarksGrade__count__\" style=\"color:red\">*</span></label><div class=\"col-md-3\"><input name=\"PGofMarksGrade__count__\" placeholder=\"% of Marks/Grade\" onchange=\"triggers[&quot;PGofMarksGrade__count__&quot;].forEach(function(f, i) { f.call(this, event) });\" id=\"PGofMarksGrade__count__\" class=\"form-control form-control-sm\"><span class=\"error\" id=\"error-PGofMarksGrade__count__\" style=\"display:none\">Error</span></div>"}];
            if (nRows > 1) {
                // while removing we only remove the element in the DOM, 
                // and don't clean up onValidates, $f, rules variables for simplicity.
                elements.push({
                    name: 'delRow',
                    validationrule: '',
                    html: "<a role='button' href='#' title='Delete row' class='btn btn-outline-danger btn-sm' onclick='delRow_pgDetails(event, " + nRows + ")'><span class='fa fa-minus-circle'></span></a>"
                });
            }
            if (nRows_pgDetails_real + 1 >= 100) {
                $("#rowAdder_pgDetails").attr('disabled', 'true');
            }
            let rowHtml = "<tr id='" + rowId + "'>";
            for (let i = 0; i < elements.length; i++) {
                let elemName = elements[i].name.replace(/__count__/g, nRows_pgDetails);

                let elemHtml = elements[i].html.replace(/__count__/g, nRows_pgDetails);
                rowHtml += "<td>" + elemHtml + "</td>";

                rules[elemName] = elements[i].validationrule;
                onValidates[elemName] = (err) => {
                  if (err.constructor !== Array) $("#error-" + elemName).hide();
                  else                           $("#error-" + elemName).show().html(err[0].message);
                };

                $f[elemName] = "";
            }
            rowHtml += "</tr>";

            // finally append the row to the table
            $("#pgDetails").append(rowHtml);

            event && event.preventDefault();
            event && event.stopPropagation();

            return false;
        }
        
        for (let i = 0; i < 1; i++)
            addRow_pgDetails();
        


        let nRows_teachingExperience = 0;
        let nRows_teachingExperience_real = 0;
        function delRow_teachingExperience(event, rowNumber) {
            let rowId = "teachingExperience-" + rowNumber;
            $("#" + rowId).remove();
            nRows_teachingExperience_real--;
            if (nRows_teachingExperience_real < 100) {
                $("#rowAdder_teachingExperience").attr('disabled', false);
            }
            event && event.preventDefault();
            event && event.stopPropagation();
            return false;
        }
        function addRow_teachingExperience(event) {
            // create every element in the row
            // add each element to the rules array
            // NOT-SUPPORTED: call addTrigger on each element
            // add function to onValidates for each element
            // add each element to the $f object

            let nRows = ++nRows_teachingExperience;
            let rowId = "teachingExperience-" + nRows;
            let elements = [{"name":"NameOfOrganization__count__","validationrule":"required","html":"<input name=\"NameOfOrganization__count__\" placeholder=\"Name Of Organization\" onchange=\"triggers[&quot;NameOfOrganization__count__&quot;].forEach(function(f, i) { f.call(this, event) });\" id=\"NameOfOrganization__count__\" class=\"form-control form-control-sm\"><span class=\"error\" id=\"error-NameOfOrganization__count__\" style=\"display:none\">Error</span>"},{"name":"AddressOfOrganization__count__","validationrule":"required","html":"<input name=\"AddressOfOrganization__count__\" placeholder=\"Address Of Organization\" onchange=\"triggers[&quot;AddressOfOrganization__count__&quot;].forEach(function(f, i) { f.call(this, event) });\" id=\"AddressOfOrganization__count__\" class=\"form-control form-control-sm\"><span class=\"error\" id=\"error-AddressOfOrganization__count__\" style=\"display:none\">Error</span>"},{"name":"Natureofwork__count__","validationrule":"required","html":"<input name=\"Natureofwork__count__\" placeholder=\"Nature of work\" onchange=\"triggers[&quot;Natureofwork__count__&quot;].forEach(function(f, i) { f.call(this, event) });\" id=\"Natureofwork__count__\" class=\"form-control form-control-sm\"><span class=\"error\" id=\"error-Natureofwork__count__\" style=\"display:none\">Error</span>"},{"name":"payscale__count__","validationrule":"required","html":"<input name=\"payscale__count__\" placeholder=\"payscale\" onchange=\"triggers[&quot;payscale__count__&quot;].forEach(function(f, i) { f.call(this, event) });\" id=\"payscale__count__\" class=\"form-control form-control-sm\"><span class=\"error\" id=\"error-payscale__count__\" style=\"display:none\">Error</span>"},{"name":"From__count__","validationrule":"required","html":"<input name=\"From__count__\" placeholder=\"From\" onchange=\"triggers[&quot;From__count__&quot;].forEach(function(f, i) { f.call(this, event) });\" id=\"From__count__\" class=\"form-control form-control-sm\"><span class=\"error\" id=\"error-From__count__\" style=\"display:none\">Error</span>"},{"name":"To__count__","validationrule":"required","html":"<input name=\"To__count__\" placeholder=\"To\" onchange=\"triggers[&quot;To__count__&quot;].forEach(function(f, i) { f.call(this, event) });\" id=\"To__count__\" class=\"form-control form-control-sm\"><span class=\"error\" id=\"error-To__count__\" style=\"display:none\">Error</span>"},{"name":"TypeofOrganization__count__","validationrule":"required","html":"<input name=\"TypeofOrganization__count__\" placeholder=\"Type of Organization\" onchange=\"triggers[&quot;TypeofOrganization__count__&quot;].forEach(function(f, i) { f.call(this, event) });\" id=\"TypeofOrganization__count__\" class=\"form-control form-control-sm\"><span class=\"error\" id=\"error-TypeofOrganization__count__\" style=\"display:none\">Error</span>"},{"name":"Reasonsforleaving__count__","validationrule":"required","html":"<input name=\"Reasonsforleaving__count__\" placeholder=\"Reasons for leaving\" onchange=\"triggers[&quot;Reasonsforleaving__count__&quot;].forEach(function(f, i) { f.call(this, event) });\" id=\"Reasonsforleaving__count__\" class=\"form-control form-control-sm\"><span class=\"error\" id=\"error-Reasonsforleaving__count__\" style=\"display:none\">Error</span>"}];
            if (nRows > 2) {
                // while removing we only remove the element in the DOM, 
                // and don't clean up onValidates, $f, rules variables for simplicity.
                elements.push({
                    name: 'delRow',
                    validationrule: '',
                    html: "<a role='button' href='#' title='Delete row' class='btn btn-outline-danger btn-sm' onclick='delRow_teachingExperience(event, " + nRows + ")'><span class='fa fa-minus-circle'></span></a>"
                });
            }
            if (nRows_teachingExperience_real + 1 >= 100) {
                $("#rowAdder_teachingExperience").attr('disabled', 'true');
            }
            let rowHtml = "<tr id='" + rowId + "'>";
            for (let i = 0; i < elements.length; i++) {
                let elemName = elements[i].name.replace(/__count__/g, nRows_teachingExperience);

                let elemHtml = elements[i].html.replace(/__count__/g, nRows_teachingExperience);
                rowHtml += "<td>" + elemHtml + "</td>";

                rules[elemName] = elements[i].validationrule;
                onValidates[elemName] = (err) => {
                  if (err.constructor !== Array) $("#error-" + elemName).hide();
                  else                           $("#error-" + elemName).show().html(err[0].message);
                };

                $f[elemName] = "";
            }
            rowHtml += "</tr>";

            // finally append the row to the table
            $("#teachingExperience").append(rowHtml);

            event && event.preventDefault();
            event && event.stopPropagation();

            return false;
        }
        
        for (let i = 0; i < 2; i++)
            addRow_teachingExperience();
        


        let nRows_Papers = 0;
        let nRows_Papers_real = 0;
        function delRow_Papers(event, rowNumber) {
            let rowId = "Papers-" + rowNumber;
            $("#" + rowId).remove();
            nRows_Papers_real--;
            if (nRows_Papers_real < 100) {
                $("#rowAdder_Papers").attr('disabled', false);
            }
            event && event.preventDefault();
            event && event.stopPropagation();
            return false;
        }
        function addRow_Papers(event) {
            // create every element in the row
            // add each element to the rules array
            // NOT-SUPPORTED: call addTrigger on each element
            // add function to onValidates for each element
            // add each element to the $f object

            let nRows = ++nRows_Papers;
            let rowId = "Papers-" + nRows;
            let elements = [{"name":"NameoftheJournal__count__","validationrule":"required","html":"<input name=\"NameoftheJournal__count__\" placeholder=\"Name of the journal\" onchange=\"triggers[&quot;NameoftheJournal__count__&quot;].forEach(function(f, i) { f.call(this, event) });\" id=\"NameoftheJournal__count__\" class=\"form-control form-control-sm\"><span class=\"error\" id=\"error-NameoftheJournal__count__\" style=\"display:none\">Error</span>"},{"name":"VolumeNo__count__","validationrule":"required","html":"<input name=\"VolumeNo__count__\" placeholder=\"Volume No.\" onchange=\"triggers[&quot;VolumeNo__count__&quot;].forEach(function(f, i) { f.call(this, event) });\" id=\"VolumeNo__count__\" class=\"form-control form-control-sm\"><span class=\"error\" id=\"error-VolumeNo__count__\" style=\"display:none\">Error</span>"},{"name":"month__count__","validationrule":"required","html":"<select name=\"month__count__\" placeholder=\"month\" onchange=\"triggers[&quot;month__count__&quot;].forEach(function(f, i) { f.call(this, event) });\" id=\"month__count__\" class=\"custom-select form-control form-control-sm\"><option>month</option>\n                \n            </select><span class=\"error\" id=\"error-month__count__\" style=\"display:none\">Error</span>"},{"name":"Year__count__","validationrule":"required","html":"<select name=\"Year__count__\" placeholder=\"Year\" onchange=\"triggers[&quot;Year__count__&quot;].forEach(function(f, i) { f.call(this, event) });\" id=\"Year__count__\" class=\"custom-select form-control form-control-sm\"><option>Year</option>\n                <option value=\"2013\">2013</option>\n                <option value=\"2012\">2012</option>\n                <option value=\"2011\">2011</option>\n                <option value=\"2010\">2010</option>\n                <option value=\"2009\">2009</option>\n                <option value=\"2008\">2008</option>\n                <option value=\"2007\">2007</option>\n                <option value=\"2006\">2006</option>\n                <option value=\"2005\">2005</option>\n                <option value=\"2004\">2004</option>\n                <option value=\"2003\">2003</option>\n                <option value=\"2002\">2002</option>\n                <option value=\"2001\">2001</option>\n                <option value=\"2000\">2000</option>\n                <option value=\"1999\">1999</option>\n                <option value=\"1998\">1998</option>\n                <option value=\"1997\">1997</option>\n                <option value=\"1996\">1996</option>\n                <option value=\"1995\">1995</option>\n                <option value=\"1994\">1994</option>\n                <option value=\"1993\">1993</option>\n                <option value=\"1992\">1992</option>\n                <option value=\"1991\">1991</option>\n                <option value=\"1990\">1990</option>\n                <option value=\"1989\">1989</option>\n                <option value=\"1988\">1988</option>\n                <option value=\"1987\">1987</option>\n                <option value=\"1986\">1986</option>\n                <option value=\"1985\">1985</option>\n                <option value=\"1984\">1984</option>\n                <option value=\"1983\">1983</option>\n                <option value=\"1982\">1982</option>\n                <option value=\"1981\">1981</option>\n                <option value=\"1980\">1980</option>\n                <option value=\"1979\">1979</option>\n                <option value=\"1978\">1978</option>\n                <option value=\"1977\">1977</option>\n                <option value=\"1976\">1976</option>\n                <option value=\"1975\">1975</option>\n                <option value=\"1974\">1974</option>\n                <option value=\"1973\">1973</option>\n            </select><span class=\"error\" id=\"error-Year__count__\" style=\"display:none\">Error</span>"},{"name":"Authors__count__","validationrule":"required","html":"<input name=\"Authors__count__\" placeholder=\"Authors\" onchange=\"triggers[&quot;Authors__count__&quot;].forEach(function(f, i) { f.call(this, event) });\" id=\"Authors__count__\" class=\"form-control form-control-sm\"><span class=\"error\" id=\"error-Authors__count__\" style=\"display:none\">Error</span>"},{"name":"Titleofthepaper__count__","validationrule":"required","html":"<input name=\"Titleofthepaper__count__\" placeholder=\"Title of the paper\" onchange=\"triggers[&quot;Titleofthepaper__count__&quot;].forEach(function(f, i) { f.call(this, event) });\" id=\"Titleofthepaper__count__\" class=\"form-control form-control-sm\"><span class=\"error\" id=\"error-Titleofthepaper__count__\" style=\"display:none\">Error</span>"},{"name":"Impactfactor__count__","validationrule":"required","html":"<input name=\"Impactfactor__count__\" placeholder=\"Impact factor\" onchange=\"triggers[&quot;Impactfactor__count__&quot;].forEach(function(f, i) { f.call(this, event) });\" id=\"Impactfactor__count__\" class=\"form-control form-control-sm\"><span class=\"error\" id=\"error-Impactfactor__count__\" style=\"display:none\">Error</span>"}];
            if (nRows > 2) {
                // while removing we only remove the element in the DOM, 
                // and don't clean up onValidates, $f, rules variables for simplicity.
                elements.push({
                    name: 'delRow',
                    validationrule: '',
                    html: "<a role='button' href='#' title='Delete row' class='btn btn-outline-danger btn-sm' onclick='delRow_Papers(event, " + nRows + ")'><span class='fa fa-minus-circle'></span></a>"
                });
            }
            if (nRows_Papers_real + 1 >= 100) {
                $("#rowAdder_Papers").attr('disabled', 'true');
            }
            let rowHtml = "<tr id='" + rowId + "'>";
            for (let i = 0; i < elements.length; i++) {
                let elemName = elements[i].name.replace(/__count__/g, nRows_Papers);

                let elemHtml = elements[i].html.replace(/__count__/g, nRows_Papers);
                rowHtml += "<td>" + elemHtml + "</td>";

                rules[elemName] = elements[i].validationrule;
                onValidates[elemName] = (err) => {
                  if (err.constructor !== Array) $("#error-" + elemName).hide();
                  else                           $("#error-" + elemName).show().html(err[0].message);
                };

                $f[elemName] = "";
            }
            rowHtml += "</tr>";

            // finally append the row to the table
            $("#Papers").append(rowHtml);

            event && event.preventDefault();
            event && event.stopPropagation();

            return false;
        }
        
        for (let i = 0; i < 2; i++)
            addRow_Papers();
        


        let nRows_otherPapers = 0;
        let nRows_otherPapers_real = 0;
        function delRow_otherPapers(event, rowNumber) {
            let rowId = "otherPapers-" + rowNumber;
            $("#" + rowId).remove();
            nRows_otherPapers_real--;
            if (nRows_otherPapers_real < 100) {
                $("#rowAdder_otherPapers").attr('disabled', false);
            }
            event && event.preventDefault();
            event && event.stopPropagation();
            return false;
        }
        function addRow_otherPapers(event) {
            // create every element in the row
            // add each element to the rules array
            // NOT-SUPPORTED: call addTrigger on each element
            // add function to onValidates for each element
            // add each element to the $f object

            let nRows = ++nRows_otherPapers;
            let rowId = "otherPapers-" + nRows;
            let elements = [{"name":"OPNameofconferencewithvenue__count__","validationrule":"required","html":"<label  id=\"label-OPNameofconferencewithvenue__count__\" class=\"col-form-label col-md-2\" for=\"OPNameofconferencewithvenue__count__\">Name of conference with venue<span id=\"asterisk-OPNameofconferencewithvenue__count__\" style=\"color:red\">*</span></label><div class=\"col-md-3\"><input name=\"OPNameofconferencewithvenue__count__\" placeholder=\"Name of conference with venue\" onchange=\"triggers[&quot;OPNameofconferencewithvenue__count__&quot;].forEach(function(f, i) { f.call(this, event) });\" id=\"OPNameofconferencewithvenue__count__\" class=\"form-control form-control-sm\"><span class=\"error\" id=\"error-OPNameofconferencewithvenue__count__\" style=\"display:none\">Error</span></div>"},{"name":"OPAuthors__count__","validationrule":"required","html":"<label  id=\"label-OPAuthors__count__\" class=\"col-form-label col-md-2\" for=\"OPAuthors__count__\">Authors<span id=\"asterisk-OPAuthors__count__\" style=\"color:red\">*</span></label><div class=\"col-md-3\"><input name=\"OPAuthors__count__\" placeholder=\"Authors\" onchange=\"triggers[&quot;OPAuthors__count__&quot;].forEach(function(f, i) { f.call(this, event) });\" id=\"OPAuthors__count__\" class=\"form-control form-control-sm\"><span class=\"error\" id=\"error-OPAuthors__count__\" style=\"display:none\">Error</span></div>"},{"name":"OPTitleofthepaper__count__","validationrule":"required","html":"<label  id=\"label-OPTitleofthepaper__count__\" class=\"col-form-label col-md-2\" for=\"OPTitleofthepaper__count__\">Title of the paper<span id=\"asterisk-OPTitleofthepaper__count__\" style=\"color:red\">*</span></label><div class=\"col-md-3\"><input name=\"OPTitleofthepaper__count__\" placeholder=\"Title of the paper\" onchange=\"triggers[&quot;OPTitleofthepaper__count__&quot;].forEach(function(f, i) { f.call(this, event) });\" id=\"OPTitleofthepaper__count__\" class=\"form-control form-control-sm\"><span class=\"error\" id=\"error-OPTitleofthepaper__count__\" style=\"display:none\">Error</span></div>"},{"name":"OPImpactfactor__count__","validationrule":"required","html":"<label  id=\"label-OPImpactfactor__count__\" class=\"col-form-label col-md-2\" for=\"OPImpactfactor__count__\">Impact factor<span id=\"asterisk-OPImpactfactor__count__\" style=\"color:red\">*</span></label><div class=\"col-md-3\"><input name=\"OPImpactfactor__count__\" placeholder=\"Impact factor\" onchange=\"triggers[&quot;OPImpactfactor__count__&quot;].forEach(function(f, i) { f.call(this, event) });\" id=\"OPImpactfactor__count__\" class=\"form-control form-control-sm\"><span class=\"error\" id=\"error-OPImpactfactor__count__\" style=\"display:none\">Error</span></div>"}];
            if (nRows > 2) {
                // while removing we only remove the element in the DOM, 
                // and don't clean up onValidates, $f, rules variables for simplicity.
                elements.push({
                    name: 'delRow',
                    validationrule: '',
                    html: "<a role='button' href='#' title='Delete row' class='btn btn-outline-danger btn-sm' onclick='delRow_otherPapers(event, " + nRows + ")'><span class='fa fa-minus-circle'></span></a>"
                });
            }
            if (nRows_otherPapers_real + 1 >= 100) {
                $("#rowAdder_otherPapers").attr('disabled', 'true');
            }
            let rowHtml = "<tr id='" + rowId + "'>";
            for (let i = 0; i < elements.length; i++) {
                let elemName = elements[i].name.replace(/__count__/g, nRows_otherPapers);

                let elemHtml = elements[i].html.replace(/__count__/g, nRows_otherPapers);
                rowHtml += "<td>" + elemHtml + "</td>";

                rules[elemName] = elements[i].validationrule;
                onValidates[elemName] = (err) => {
                  if (err.constructor !== Array) $("#error-" + elemName).hide();
                  else                           $("#error-" + elemName).show().html(err[0].message);
                };

                $f[elemName] = "";
            }
            rowHtml += "</tr>";

            // finally append the row to the table
            $("#otherPapers").append(rowHtml);

            event && event.preventDefault();
            event && event.stopPropagation();

            return false;
        }
        
        for (let i = 0; i < 2; i++)
            addRow_otherPapers();
        


        let nRows_conferenceSymposium = 0;
        let nRows_conferenceSymposium_real = 0;
        function delRow_conferenceSymposium(event, rowNumber) {
            let rowId = "conferenceSymposium-" + rowNumber;
            $("#" + rowId).remove();
            nRows_conferenceSymposium_real--;
            if (nRows_conferenceSymposium_real < 100) {
                $("#rowAdder_conferenceSymposium").attr('disabled', false);
            }
            event && event.preventDefault();
            event && event.stopPropagation();
            return false;
        }
        function addRow_conferenceSymposium(event) {
            // create every element in the row
            // add each element to the rules array
            // NOT-SUPPORTED: call addTrigger on each element
            // add function to onValidates for each element
            // add each element to the $f object

            let nRows = ++nRows_conferenceSymposium;
            let rowId = "conferenceSymposium-" + nRows;
            let elements = [{"name":"NameoftheConnference__count__","validationrule":"required","html":"<input name=\"NameoftheConnference__count__\" placeholder=\"Name of the Connference\" onchange=\"triggers[&quot;NameoftheConnference__count__&quot;].forEach(function(f, i) { f.call(this, event) });\" id=\"NameoftheConnference__count__\" class=\"form-control form-control-sm\"><span class=\"error\" id=\"error-NameoftheConnference__count__\" style=\"display:none\">Error</span>"},{"name":"ConferenceYear__count__","validationrule":"required","html":"<label  id=\"label-ConferenceYear__count__\" class=\"col-form-label col-md-2\" for=\"ConferenceYear__count__\">Year<span id=\"asterisk-ConferenceYear__count__\" style=\"color:red\">*</span></label><div class=\"col-md-3\"><select name=\"ConferenceYear__count__\" placeholder=\"Year\" onchange=\"triggers[&quot;ConferenceYear__count__&quot;].forEach(function(f, i) { f.call(this, event) });\" id=\"ConferenceYear__count__\" class=\"custom-select form-control form-control-sm\"><option>Year</option>\n                <option value=\"2013\">2013</option>\n                <option value=\"2012\">2012</option>\n                <option value=\"2011\">2011</option>\n                <option value=\"2010\">2010</option>\n                <option value=\"2009\">2009</option>\n                <option value=\"2008\">2008</option>\n                <option value=\"2007\">2007</option>\n                <option value=\"2006\">2006</option>\n                <option value=\"2005\">2005</option>\n                <option value=\"2004\">2004</option>\n                <option value=\"2003\">2003</option>\n                <option value=\"2002\">2002</option>\n                <option value=\"2001\">2001</option>\n                <option value=\"2000\">2000</option>\n                <option value=\"1999\">1999</option>\n                <option value=\"1998\">1998</option>\n                <option value=\"1997\">1997</option>\n                <option value=\"1996\">1996</option>\n                <option value=\"1995\">1995</option>\n                <option value=\"1994\">1994</option>\n                <option value=\"1993\">1993</option>\n                <option value=\"1992\">1992</option>\n                <option value=\"1991\">1991</option>\n                <option value=\"1990\">1990</option>\n                <option value=\"1989\">1989</option>\n                <option value=\"1988\">1988</option>\n                <option value=\"1987\">1987</option>\n                <option value=\"1986\">1986</option>\n                <option value=\"1985\">1985</option>\n                <option value=\"1984\">1984</option>\n                <option value=\"1983\">1983</option>\n                <option value=\"1982\">1982</option>\n                <option value=\"1981\">1981</option>\n                <option value=\"1980\">1980</option>\n                <option value=\"1979\">1979</option>\n                <option value=\"1978\">1978</option>\n                <option value=\"1977\">1977</option>\n                <option value=\"1976\">1976</option>\n                <option value=\"1975\">1975</option>\n                <option value=\"1974\">1974</option>\n                <option value=\"1973\">1973</option>\n            </select><span class=\"error\" id=\"error-ConferenceYear__count__\" style=\"display:none\">Error</span></div>"},{"name":"ConferenceVolumeNo__count__","validationrule":"required","html":"<label  id=\"label-ConferenceVolumeNo__count__\" class=\"col-form-label col-md-2\" for=\"ConferenceVolumeNo__count__\">Volume No.<span id=\"asterisk-ConferenceVolumeNo__count__\" style=\"color:red\">*</span></label><div class=\"col-md-3\"><input name=\"ConferenceVolumeNo__count__\" placeholder=\"Volume No.\" onchange=\"triggers[&quot;ConferenceVolumeNo__count__&quot;].forEach(function(f, i) { f.call(this, event) });\" id=\"ConferenceVolumeNo__count__\" class=\"form-control form-control-sm\"><span class=\"error\" id=\"error-ConferenceVolumeNo__count__\" style=\"display:none\">Error</span></div>"},{"name":"ConferenceTitleofthepaper__count__","validationrule":"required","html":"<label  id=\"label-ConferenceTitleofthepaper__count__\" class=\"col-form-label col-md-2\" for=\"ConferenceTitleofthepaper__count__\">Title of the paper<span id=\"asterisk-ConferenceTitleofthepaper__count__\" style=\"color:red\">*</span></label><div class=\"col-md-3\"><input name=\"ConferenceTitleofthepaper__count__\" placeholder=\"Title of the paper\" onchange=\"triggers[&quot;ConferenceTitleofthepaper__count__&quot;].forEach(function(f, i) { f.call(this, event) });\" id=\"ConferenceTitleofthepaper__count__\" class=\"form-control form-control-sm\"><span class=\"error\" id=\"error-ConferenceTitleofthepaper__count__\" style=\"display:none\">Error</span></div>"}];
            if (nRows > 2) {
                // while removing we only remove the element in the DOM, 
                // and don't clean up onValidates, $f, rules variables for simplicity.
                elements.push({
                    name: 'delRow',
                    validationrule: '',
                    html: "<a role='button' href='#' title='Delete row' class='btn btn-outline-danger btn-sm' onclick='delRow_conferenceSymposium(event, " + nRows + ")'><span class='fa fa-minus-circle'></span></a>"
                });
            }
            if (nRows_conferenceSymposium_real + 1 >= 100) {
                $("#rowAdder_conferenceSymposium").attr('disabled', 'true');
            }
            let rowHtml = "<tr id='" + rowId + "'>";
            for (let i = 0; i < elements.length; i++) {
                let elemName = elements[i].name.replace(/__count__/g, nRows_conferenceSymposium);

                let elemHtml = elements[i].html.replace(/__count__/g, nRows_conferenceSymposium);
                rowHtml += "<td>" + elemHtml + "</td>";

                rules[elemName] = elements[i].validationrule;
                onValidates[elemName] = (err) => {
                  if (err.constructor !== Array) $("#error-" + elemName).hide();
                  else                           $("#error-" + elemName).show().html(err[0].message);
                };

                $f[elemName] = "";
            }
            rowHtml += "</tr>";

            // finally append the row to the table
            $("#conferenceSymposium").append(rowHtml);

            event && event.preventDefault();
            event && event.stopPropagation();

            return false;
        }
        
        for (let i = 0; i < 2; i++)
            addRow_conferenceSymposium();
        


        let nRows_workshops = 0;
        let nRows_workshops_real = 0;
        function delRow_workshops(event, rowNumber) {
            let rowId = "workshops-" + rowNumber;
            $("#" + rowId).remove();
            nRows_workshops_real--;
            if (nRows_workshops_real < 100) {
                $("#rowAdder_workshops").attr('disabled', false);
            }
            event && event.preventDefault();
            event && event.stopPropagation();
            return false;
        }
        function addRow_workshops(event) {
            // create every element in the row
            // add each element to the rules array
            // NOT-SUPPORTED: call addTrigger on each element
            // add function to onValidates for each element
            // add each element to the $f object

            let nRows = ++nRows_workshops;
            let rowId = "workshops-" + nRows;
            let elements = [{"name":"TitleoftheWorkshoporganized__count__","validationrule":"required","html":"<input name=\"TitleoftheWorkshoporganized__count__\" placeholder=\"Title of the workshop organized\" onchange=\"triggers[&quot;TitleoftheWorkshoporganized__count__&quot;].forEach(function(f, i) { f.call(this, event) });\" id=\"TitleoftheWorkshoporganized__count__\" class=\"form-control form-control-sm\"><span class=\"error\" id=\"error-TitleoftheWorkshoporganized__count__\" style=\"display:none\">Error</span>"},{"name":"WTYear__count__","validationrule":"required","html":"<label  id=\"label-WTYear__count__\" class=\"col-form-label col-md-2\" for=\"WTYear__count__\">Year<span id=\"asterisk-WTYear__count__\" style=\"color:red\">*</span></label><div class=\"col-md-3\"><select name=\"WTYear__count__\" placeholder=\"Year\" onchange=\"triggers[&quot;WTYear__count__&quot;].forEach(function(f, i) { f.call(this, event) });\" id=\"WTYear__count__\" class=\"custom-select form-control form-control-sm\"><option>Year</option>\n                <option value=\"2013\">2013</option>\n                <option value=\"2012\">2012</option>\n                <option value=\"2011\">2011</option>\n                <option value=\"2010\">2010</option>\n                <option value=\"2009\">2009</option>\n                <option value=\"2008\">2008</option>\n                <option value=\"2007\">2007</option>\n                <option value=\"2006\">2006</option>\n                <option value=\"2005\">2005</option>\n                <option value=\"2004\">2004</option>\n                <option value=\"2003\">2003</option>\n                <option value=\"2002\">2002</option>\n                <option value=\"2001\">2001</option>\n                <option value=\"2000\">2000</option>\n                <option value=\"1999\">1999</option>\n                <option value=\"1998\">1998</option>\n                <option value=\"1997\">1997</option>\n                <option value=\"1996\">1996</option>\n                <option value=\"1995\">1995</option>\n                <option value=\"1994\">1994</option>\n                <option value=\"1993\">1993</option>\n                <option value=\"1992\">1992</option>\n                <option value=\"1991\">1991</option>\n                <option value=\"1990\">1990</option>\n                <option value=\"1989\">1989</option>\n                <option value=\"1988\">1988</option>\n                <option value=\"1987\">1987</option>\n                <option value=\"1986\">1986</option>\n                <option value=\"1985\">1985</option>\n                <option value=\"1984\">1984</option>\n                <option value=\"1983\">1983</option>\n                <option value=\"1982\">1982</option>\n                <option value=\"1981\">1981</option>\n                <option value=\"1980\">1980</option>\n                <option value=\"1979\">1979</option>\n                <option value=\"1978\">1978</option>\n                <option value=\"1977\">1977</option>\n                <option value=\"1976\">1976</option>\n                <option value=\"1975\">1975</option>\n                <option value=\"1974\">1974</option>\n                <option value=\"1973\">1973</option>\n            </select><span class=\"error\" id=\"error-WTYear__count__\" style=\"display:none\">Error</span></div>"},{"name":"WTVenue__count__","validationrule":"required","html":"<label  id=\"label-WTVenue__count__\" class=\"col-form-label col-md-2\" for=\"WTVenue__count__\">Venue<span id=\"asterisk-WTVenue__count__\" style=\"color:red\">*</span></label><div class=\"col-md-3\"><input name=\"WTVenue__count__\" placeholder=\"Venue\" onchange=\"triggers[&quot;WTVenue__count__&quot;].forEach(function(f, i) { f.call(this, event) });\" id=\"WTVenue__count__\" class=\"form-control form-control-sm\"><span class=\"error\" id=\"error-WTVenue__count__\" style=\"display:none\">Error</span></div>"},{"name":"SponsoringAuthority__count__","validationrule":"required","html":"<label  id=\"label-SponsoringAuthority__count__\" class=\"col-form-label col-md-2\" for=\"SponsoringAuthority__count__\">Sponsoring Authority<span id=\"asterisk-SponsoringAuthority__count__\" style=\"color:red\">*</span></label><div class=\"col-md-3\"><input name=\"SponsoringAuthority__count__\" placeholder=\"Sponsoring Authority\" onchange=\"triggers[&quot;SponsoringAuthority__count__&quot;].forEach(function(f, i) { f.call(this, event) });\" id=\"SponsoringAuthority__count__\" class=\"form-control form-control-sm\"><span class=\"error\" id=\"error-SponsoringAuthority__count__\" style=\"display:none\">Error</span></div>"}];
            if (nRows > 2) {
                // while removing we only remove the element in the DOM, 
                // and don't clean up onValidates, $f, rules variables for simplicity.
                elements.push({
                    name: 'delRow',
                    validationrule: '',
                    html: "<a role='button' href='#' title='Delete row' class='btn btn-outline-danger btn-sm' onclick='delRow_workshops(event, " + nRows + ")'><span class='fa fa-minus-circle'></span></a>"
                });
            }
            if (nRows_workshops_real + 1 >= 100) {
                $("#rowAdder_workshops").attr('disabled', 'true');
            }
            let rowHtml = "<tr id='" + rowId + "'>";
            for (let i = 0; i < elements.length; i++) {
                let elemName = elements[i].name.replace(/__count__/g, nRows_workshops);

                let elemHtml = elements[i].html.replace(/__count__/g, nRows_workshops);
                rowHtml += "<td>" + elemHtml + "</td>";

                rules[elemName] = elements[i].validationrule;
                onValidates[elemName] = (err) => {
                  if (err.constructor !== Array) $("#error-" + elemName).hide();
                  else                           $("#error-" + elemName).show().html(err[0].message);
                };

                $f[elemName] = "";
            }
            rowHtml += "</tr>";

            // finally append the row to the table
            $("#workshops").append(rowHtml);

            event && event.preventDefault();
            event && event.stopPropagation();

            return false;
        }
        
        for (let i = 0; i < 2; i++)
            addRow_workshops();
        


        let nRows_Thesis = 0;
        let nRows_Thesis_real = 0;
        function delRow_Thesis(event, rowNumber) {
            let rowId = "Thesis-" + rowNumber;
            $("#" + rowId).remove();
            nRows_Thesis_real--;
            if (nRows_Thesis_real < 100) {
                $("#rowAdder_Thesis").attr('disabled', false);
            }
            event && event.preventDefault();
            event && event.stopPropagation();
            return false;
        }
        function addRow_Thesis(event) {
            // create every element in the row
            // add each element to the rules array
            // NOT-SUPPORTED: call addTrigger on each element
            // add function to onValidates for each element
            // add each element to the $f object

            let nRows = ++nRows_Thesis;
            let rowId = "Thesis-" + nRows;
            let elements = [{"name":"TitleoftheThesisSupervised__count__","validationrule":"required","html":"<input name=\"TitleoftheThesisSupervised__count__\" placeholder=\"Title of the Thesis Supervised\" onchange=\"triggers[&quot;TitleoftheThesisSupervised__count__&quot;].forEach(function(f, i) { f.call(this, event) });\" id=\"TitleoftheThesisSupervised__count__\" class=\"form-control form-control-sm\"><span class=\"error\" id=\"error-TitleoftheThesisSupervised__count__\" style=\"display:none\">Error</span>"},{"name":"Completedyear__count__","validationrule":"required","html":"<input name=\"Completedyear__count__\" placeholder=\"Completed(year)\" onchange=\"triggers[&quot;Completedyear__count__&quot;].forEach(function(f, i) { f.call(this, event) });\" id=\"Completedyear__count__\" class=\"form-control form-control-sm\"><span class=\"error\" id=\"error-Completedyear__count__\" style=\"display:none\">Error</span>"},{"name":"InprogressWithstatus__count__","validationrule":"required","html":"<input name=\"InprogressWithstatus__count__\" placeholder=\"In progress(With status)\" onchange=\"triggers[&quot;InprogressWithstatus__count__&quot;].forEach(function(f, i) { f.call(this, event) });\" id=\"InprogressWithstatus__count__\" class=\"form-control form-control-sm\"><span class=\"error\" id=\"error-InprogressWithstatus__count__\" style=\"display:none\">Error</span>"},{"name":"PrincipalorCoSupervisor__count__","validationrule":"required","html":"<input name=\"PrincipalorCoSupervisor__count__\" placeholder=\"Principal or Co-Supervisor\" onchange=\"triggers[&quot;PrincipalorCoSupervisor__count__&quot;].forEach(function(f, i) { f.call(this, event) });\" id=\"PrincipalorCoSupervisor__count__\" class=\"form-control form-control-sm\"><span class=\"error\" id=\"error-PrincipalorCoSupervisor__count__\" style=\"display:none\">Error</span>"}];
            if (nRows > 2) {
                // while removing we only remove the element in the DOM, 
                // and don't clean up onValidates, $f, rules variables for simplicity.
                elements.push({
                    name: 'delRow',
                    validationrule: '',
                    html: "<a role='button' href='#' title='Delete row' class='btn btn-outline-danger btn-sm' onclick='delRow_Thesis(event, " + nRows + ")'><span class='fa fa-minus-circle'></span></a>"
                });
            }
            if (nRows_Thesis_real + 1 >= 100) {
                $("#rowAdder_Thesis").attr('disabled', 'true');
            }
            let rowHtml = "<tr id='" + rowId + "'>";
            for (let i = 0; i < elements.length; i++) {
                let elemName = elements[i].name.replace(/__count__/g, nRows_Thesis);

                let elemHtml = elements[i].html.replace(/__count__/g, nRows_Thesis);
                rowHtml += "<td>" + elemHtml + "</td>";

                rules[elemName] = elements[i].validationrule;
                onValidates[elemName] = (err) => {
                  if (err.constructor !== Array) $("#error-" + elemName).hide();
                  else                           $("#error-" + elemName).show().html(err[0].message);
                };

                $f[elemName] = "";
            }
            rowHtml += "</tr>";

            // finally append the row to the table
            $("#Thesis").append(rowHtml);

            event && event.preventDefault();
            event && event.stopPropagation();

            return false;
        }
        
        for (let i = 0; i < 2; i++)
            addRow_Thesis();
        


        let nRows_adminSupport = 0;
        let nRows_adminSupport_real = 0;
        function delRow_adminSupport(event, rowNumber) {
            let rowId = "adminSupport-" + rowNumber;
            $("#" + rowId).remove();
            nRows_adminSupport_real--;
            if (nRows_adminSupport_real < 100) {
                $("#rowAdder_adminSupport").attr('disabled', false);
            }
            event && event.preventDefault();
            event && event.stopPropagation();
            return false;
        }
        function addRow_adminSupport(event) {
            // create every element in the row
            // add each element to the rules array
            // NOT-SUPPORTED: call addTrigger on each element
            // add function to onValidates for each element
            // add each element to the $f object

            let nRows = ++nRows_adminSupport;
            let rowId = "adminSupport-" + nRows;
            let elements = [{"name":"SectionOfficeInstitutelevelcommittee__count__","validationrule":"required","html":"<input name=\"SectionOfficeInstitutelevelcommittee__count__\" placeholder=\"Section/Office/Institute level committee\" onchange=\"triggers[&quot;SectionOfficeInstitutelevelcommittee__count__&quot;].forEach(function(f, i) { f.call(this, event) });\" id=\"SectionOfficeInstitutelevelcommittee__count__\" class=\"form-control form-control-sm\"><span class=\"error\" id=\"error-SectionOfficeInstitutelevelcommittee__count__\" style=\"display:none\">Error</span>"},{"name":"AOAFrom__count__","validationrule":"required","html":"<label  id=\"label-AOAFrom__count__\" class=\"col-form-label col-md-2\" for=\"AOAFrom__count__\">From<span id=\"asterisk-AOAFrom__count__\" style=\"color:red\">*</span></label><div class=\"col-md-3\"><input name=\"AOAFrom__count__\" placeholder=\"From\" onchange=\"triggers[&quot;AOAFrom__count__&quot;].forEach(function(f, i) { f.call(this, event) });\" id=\"AOAFrom__count__\" class=\"form-control form-control-sm\"><span class=\"error\" id=\"error-AOAFrom__count__\" style=\"display:none\">Error</span></div>"},{"name":"AOATo__count__","validationrule":"required","html":"<label  id=\"label-AOATo__count__\" class=\"col-form-label col-md-2\" for=\"AOATo__count__\">To<span id=\"asterisk-AOATo__count__\" style=\"color:red\">*</span></label><div class=\"col-md-3\"><input name=\"AOATo__count__\" placeholder=\"To\" onchange=\"triggers[&quot;AOATo__count__&quot;].forEach(function(f, i) { f.call(this, event) });\" id=\"AOATo__count__\" class=\"form-control form-control-sm\"><span class=\"error\" id=\"error-AOATo__count__\" style=\"display:none\">Error</span></div>"},{"name":"PositionHeld__count__","validationrule":"required","html":"<input name=\"PositionHeld__count__\" placeholder=\"Position Held\" onchange=\"triggers[&quot;PositionHeld__count__&quot;].forEach(function(f, i) { f.call(this, event) });\" id=\"PositionHeld__count__\" class=\"form-control form-control-sm\"><span class=\"error\" id=\"error-PositionHeld__count__\" style=\"display:none\">Error</span>"},{"name":"ResponsibilityType__count__","validationrule":"required","html":"<select name=\"ResponsibilityType__count__\" placeholder=\"Responsibility Type\" onchange=\"triggers[&quot;ResponsibilityType__count__&quot;].forEach(function(f, i) { f.call(this, event) });\" id=\"ResponsibilityType__count__\" class=\"custom-select form-control form-control-sm\"><option>Responsibility Type</option>\n                <option value=\"Dean\">Dean</option>\n                <option value=\"HOD\">HOD</option>\n                <option value=\"ChiefWarden\">ChiefWarden</option>\n            </select><span class=\"error\" id=\"error-ResponsibilityType__count__\" style=\"display:none\">Error</span>"},{"name":"Responsibilities__count__","validationrule":"required","html":"<input name=\"Responsibilities__count__\" placeholder=\"Responsibilities\" onchange=\"triggers[&quot;Responsibilities__count__&quot;].forEach(function(f, i) { f.call(this, event) });\" id=\"Responsibilities__count__\" class=\"form-control form-control-sm\"><span class=\"error\" id=\"error-Responsibilities__count__\" style=\"display:none\">Error</span>"}];
            if (nRows > 3) {
                // while removing we only remove the element in the DOM, 
                // and don't clean up onValidates, $f, rules variables for simplicity.
                elements.push({
                    name: 'delRow',
                    validationrule: '',
                    html: "<a role='button' href='#' title='Delete row' class='btn btn-outline-danger btn-sm' onclick='delRow_adminSupport(event, " + nRows + ")'><span class='fa fa-minus-circle'></span></a>"
                });
            }
            if (nRows_adminSupport_real + 1 >= 100) {
                $("#rowAdder_adminSupport").attr('disabled', 'true');
            }
            let rowHtml = "<tr id='" + rowId + "'>";
            for (let i = 0; i < elements.length; i++) {
                let elemName = elements[i].name.replace(/__count__/g, nRows_adminSupport);

                let elemHtml = elements[i].html.replace(/__count__/g, nRows_adminSupport);
                rowHtml += "<td>" + elemHtml + "</td>";

                rules[elemName] = elements[i].validationrule;
                onValidates[elemName] = (err) => {
                  if (err.constructor !== Array) $("#error-" + elemName).hide();
                  else                           $("#error-" + elemName).show().html(err[0].message);
                };

                $f[elemName] = "";
            }
            rowHtml += "</tr>";

            // finally append the row to the table
            $("#adminSupport").append(rowHtml);

            event && event.preventDefault();
            event && event.stopPropagation();

            return false;
        }
        
        for (let i = 0; i < 3; i++)
            addRow_adminSupport();
        


        let nRows_outreach = 0;
        let nRows_outreach_real = 0;
        function delRow_outreach(event, rowNumber) {
            let rowId = "outreach-" + rowNumber;
            $("#" + rowId).remove();
            nRows_outreach_real--;
            if (nRows_outreach_real < 100) {
                $("#rowAdder_outreach").attr('disabled', false);
            }
            event && event.preventDefault();
            event && event.stopPropagation();
            return false;
        }
        function addRow_outreach(event) {
            // create every element in the row
            // add each element to the rules array
            // NOT-SUPPORTED: call addTrigger on each element
            // add function to onValidates for each element
            // add each element to the $f object

            let nRows = ++nRows_outreach;
            let rowId = "outreach-" + nRows;
            let elements = [{"name":"AcademicOutreachActivities__count__","validationrule":"required","html":"<input name=\"AcademicOutreachActivities__count__\" placeholder=\"Academic Outreach Activities\" onchange=\"triggers[&quot;AcademicOutreachActivities__count__&quot;].forEach(function(f, i) { f.call(this, event) });\" id=\"AcademicOutreachActivities__count__\" class=\"form-control form-control-sm\"><span class=\"error\" id=\"error-AcademicOutreachActivities__count__\" style=\"display:none\">Error</span>"},{"name":"AOAYear__count__","validationrule":"required","html":"<label  id=\"label-AOAYear__count__\" class=\"col-form-label col-md-2\" for=\"AOAYear__count__\">Year<span id=\"asterisk-AOAYear__count__\" style=\"color:red\">*</span></label><div class=\"col-md-3\"><select name=\"AOAYear__count__\" placeholder=\"Year\" onchange=\"triggers[&quot;AOAYear__count__&quot;].forEach(function(f, i) { f.call(this, event) });\" id=\"AOAYear__count__\" class=\"custom-select form-control form-control-sm\"><option>Year</option>\n                <option value=\"2013\">2013</option>\n                <option value=\"2012\">2012</option>\n                <option value=\"2011\">2011</option>\n                <option value=\"2010\">2010</option>\n                <option value=\"2009\">2009</option>\n                <option value=\"2008\">2008</option>\n                <option value=\"2007\">2007</option>\n                <option value=\"2006\">2006</option>\n                <option value=\"2005\">2005</option>\n                <option value=\"2004\">2004</option>\n                <option value=\"2003\">2003</option>\n                <option value=\"2002\">2002</option>\n                <option value=\"2001\">2001</option>\n                <option value=\"2000\">2000</option>\n                <option value=\"1999\">1999</option>\n                <option value=\"1998\">1998</option>\n                <option value=\"1997\">1997</option>\n                <option value=\"1996\">1996</option>\n                <option value=\"1995\">1995</option>\n                <option value=\"1994\">1994</option>\n                <option value=\"1993\">1993</option>\n                <option value=\"1992\">1992</option>\n                <option value=\"1991\">1991</option>\n                <option value=\"1990\">1990</option>\n                <option value=\"1989\">1989</option>\n                <option value=\"1988\">1988</option>\n                <option value=\"1987\">1987</option>\n                <option value=\"1986\">1986</option>\n                <option value=\"1985\">1985</option>\n                <option value=\"1984\">1984</option>\n                <option value=\"1983\">1983</option>\n                <option value=\"1982\">1982</option>\n                <option value=\"1981\">1981</option>\n                <option value=\"1980\">1980</option>\n                <option value=\"1979\">1979</option>\n                <option value=\"1978\">1978</option>\n                <option value=\"1977\">1977</option>\n                <option value=\"1976\">1976</option>\n                <option value=\"1975\">1975</option>\n                <option value=\"1974\">1974</option>\n                <option value=\"1973\">1973</option>\n            </select><span class=\"error\" id=\"error-AOAYear__count__\" style=\"display:none\">Error</span></div>"}];
            if (nRows > 2) {
                // while removing we only remove the element in the DOM, 
                // and don't clean up onValidates, $f, rules variables for simplicity.
                elements.push({
                    name: 'delRow',
                    validationrule: '',
                    html: "<a role='button' href='#' title='Delete row' class='btn btn-outline-danger btn-sm' onclick='delRow_outreach(event, " + nRows + ")'><span class='fa fa-minus-circle'></span></a>"
                });
            }
            if (nRows_outreach_real + 1 >= 100) {
                $("#rowAdder_outreach").attr('disabled', 'true');
            }
            let rowHtml = "<tr id='" + rowId + "'>";
            for (let i = 0; i < elements.length; i++) {
                let elemName = elements[i].name.replace(/__count__/g, nRows_outreach);

                let elemHtml = elements[i].html.replace(/__count__/g, nRows_outreach);
                rowHtml += "<td>" + elemHtml + "</td>";

                rules[elemName] = elements[i].validationrule;
                onValidates[elemName] = (err) => {
                  if (err.constructor !== Array) $("#error-" + elemName).hide();
                  else                           $("#error-" + elemName).show().html(err[0].message);
                };

                $f[elemName] = "";
            }
            rowHtml += "</tr>";

            // finally append the row to the table
            $("#outreach").append(rowHtml);

            event && event.preventDefault();
            event && event.stopPropagation();

            return false;
        }
        
        for (let i = 0; i < 2; i++)
            addRow_outreach();
        


        let nRows_placementPercentage = 0;
        let nRows_placementPercentage_real = 0;
        function delRow_placementPercentage(event, rowNumber) {
            let rowId = "placementPercentage-" + rowNumber;
            $("#" + rowId).remove();
            nRows_placementPercentage_real--;
            if (nRows_placementPercentage_real < 100) {
                $("#rowAdder_placementPercentage").attr('disabled', false);
            }
            event && event.preventDefault();
            event && event.stopPropagation();
            return false;
        }
        function addRow_placementPercentage(event) {
            // create every element in the row
            // add each element to the rules array
            // NOT-SUPPORTED: call addTrigger on each element
            // add function to onValidates for each element
            // add each element to the $f object

            let nRows = ++nRows_placementPercentage;
            let rowId = "placementPercentage-" + nRows;
            let elements = [{"name":"PPYear__count__","validationrule":"required","html":"<label  id=\"label-PPYear__count__\" class=\"col-form-label col-md-2\" for=\"PPYear__count__\">Year<span id=\"asterisk-PPYear__count__\" style=\"color:red\">*</span></label><div class=\"col-md-3\"><select name=\"PPYear__count__\" placeholder=\"Year\" onchange=\"triggers[&quot;PPYear__count__&quot;].forEach(function(f, i) { f.call(this, event) });\" id=\"PPYear__count__\" class=\"custom-select form-control form-control-sm\"><option>Year</option>\n                <option value=\"2013\">2013</option>\n                <option value=\"2012\">2012</option>\n                <option value=\"2011\">2011</option>\n                <option value=\"2010\">2010</option>\n                <option value=\"2009\">2009</option>\n                <option value=\"2008\">2008</option>\n                <option value=\"2007\">2007</option>\n                <option value=\"2006\">2006</option>\n                <option value=\"2005\">2005</option>\n                <option value=\"2004\">2004</option>\n                <option value=\"2003\">2003</option>\n                <option value=\"2002\">2002</option>\n                <option value=\"2001\">2001</option>\n                <option value=\"2000\">2000</option>\n                <option value=\"1999\">1999</option>\n                <option value=\"1998\">1998</option>\n                <option value=\"1997\">1997</option>\n                <option value=\"1996\">1996</option>\n                <option value=\"1995\">1995</option>\n                <option value=\"1994\">1994</option>\n                <option value=\"1993\">1993</option>\n                <option value=\"1992\">1992</option>\n                <option value=\"1991\">1991</option>\n                <option value=\"1990\">1990</option>\n                <option value=\"1989\">1989</option>\n                <option value=\"1988\">1988</option>\n                <option value=\"1987\">1987</option>\n                <option value=\"1986\">1986</option>\n                <option value=\"1985\">1985</option>\n                <option value=\"1984\">1984</option>\n                <option value=\"1983\">1983</option>\n                <option value=\"1982\">1982</option>\n                <option value=\"1981\">1981</option>\n                <option value=\"1980\">1980</option>\n                <option value=\"1979\">1979</option>\n                <option value=\"1978\">1978</option>\n                <option value=\"1977\">1977</option>\n                <option value=\"1976\">1976</option>\n                <option value=\"1975\">1975</option>\n                <option value=\"1974\">1974</option>\n                <option value=\"1973\">1973</option>\n            </select><span class=\"error\" id=\"error-PPYear__count__\" style=\"display:none\">Error</span></div>"},{"name":"PPpercentage__count__","validationrule":"required","html":"<label  id=\"label-PPpercentage__count__\" class=\"col-form-label col-md-2\" for=\"PPpercentage__count__\">Percentage<span id=\"asterisk-PPpercentage__count__\" style=\"color:red\">*</span></label><div class=\"col-md-3\"><input name=\"PPpercentage__count__\" placeholder=\"Percentage\" onchange=\"triggers[&quot;PPpercentage__count__&quot;].forEach(function(f, i) { f.call(this, event) });\" id=\"PPpercentage__count__\" class=\"form-control form-control-sm\"><span class=\"error\" id=\"error-PPpercentage__count__\" style=\"display:none\">Error</span></div>"}];
            if (nRows > 3) {
                // while removing we only remove the element in the DOM, 
                // and don't clean up onValidates, $f, rules variables for simplicity.
                elements.push({
                    name: 'delRow',
                    validationrule: '',
                    html: "<a role='button' href='#' title='Delete row' class='btn btn-outline-danger btn-sm' onclick='delRow_placementPercentage(event, " + nRows + ")'><span class='fa fa-minus-circle'></span></a>"
                });
            }
            if (nRows_placementPercentage_real + 1 >= 100) {
                $("#rowAdder_placementPercentage").attr('disabled', 'true');
            }
            let rowHtml = "<tr id='" + rowId + "'>";
            for (let i = 0; i < elements.length; i++) {
                let elemName = elements[i].name.replace(/__count__/g, nRows_placementPercentage);

                let elemHtml = elements[i].html.replace(/__count__/g, nRows_placementPercentage);
                rowHtml += "<td>" + elemHtml + "</td>";

                rules[elemName] = elements[i].validationrule;
                onValidates[elemName] = (err) => {
                  if (err.constructor !== Array) $("#error-" + elemName).hide();
                  else                           $("#error-" + elemName).show().html(err[0].message);
                };

                $f[elemName] = "";
            }
            rowHtml += "</tr>";

            // finally append the row to the table
            $("#placementPercentage").append(rowHtml);

            event && event.preventDefault();
            event && event.stopPropagation();

            return false;
        }
        
        for (let i = 0; i < 3; i++)
            addRow_placementPercentage();
        ;


    function verifyDateInddmmyyyy(date) {
        // date is in format 'dd/mm/yyyy'
        const stdFormat = date.split("/").reverse().join("-");
        const today = new Date();
        const parsedDate = new Date(stdFormat);

        let dd = '' + parsedDate.getDate();
        let mm = '' + (parsedDate.getMonth() + 1);
        let yyyy = '' + parsedDate.getFullYear();

        dd = dd.length == 1 ? ('0' + dd) : dd;
        mm = mm.length == 1 ? ('0' + mm) : mm;

        return date == `${dd}/${mm}/${yyyy}`;
    }
    function calcAge(dob){
        // dob is in format 'dd/mm/yyyy'
        const stdFormat = dob.split("/").reverse().join("-");
        const today = new Date();

        dob = new Date(stdFormat);
        return Math.floor((today.getTime() - dob.getTime()) / (1000*60*60*24*365));
    }

</script>
</body>
</html>
