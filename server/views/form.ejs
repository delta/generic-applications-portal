<!DOCTYPE html>
<html>
<head>
    <title>Faculty Recruitment | NIT Trichy</title>
    <%- include('partials/commonHeaderIncludes.partial.ejs') %>
</head>
<body>
    <%- include('partials/topNavbar.partial.ejs') %>

    <div class="container-fluid" style="margin-top: 10px; padding-bottom: 75px">
            <div class="row">
                <div class="col-2"><div class="nav flex-column nav-pills" id="v-pills-tab" role="tablist"><a class="nav-link active" id="v-pills-Personal-Information-tab" data-toggle="pill" href="#v-pills-Personal-Information" role="tab" aria-controls="v-pills-Personal-Information" aria-expanded="true">1. Personal Information</a><a class="nav-link " id="v-pills-Application-Details-tab" data-toggle="pill" href="#v-pills-Application-Details" role="tab" aria-controls="v-pills-Application-Details" aria-expanded="true">2. Application Details</a><a class="nav-link " id="v-pills-Undergraduation-Details-tab" data-toggle="pill" href="#v-pills-Undergraduation-Details" role="tab" aria-controls="v-pills-Undergraduation-Details" aria-expanded="true">3. Undergraduation Details</a><a class="nav-link " id="v-pills-Postgraduation-Details-tab" data-toggle="pill" href="#v-pills-Postgraduation-Details" role="tab" aria-controls="v-pills-Postgraduation-Details" aria-expanded="true">4. Postgraduation Details</a><a class="nav-link " id="v-pills-Other-Details-tab" data-toggle="pill" href="#v-pills-Other-Details" role="tab" aria-controls="v-pills-Other-Details" aria-expanded="true">5. Other Details</a><a class="nav-link " id="v-pills-Professional-Experience-tab" data-toggle="pill" href="#v-pills-Professional-Experience" role="tab" aria-controls="v-pills-Professional-Experience" aria-expanded="true">6. Professional Experience</a><a class="nav-link " id="v-pills-Submission-tab" data-toggle="pill" href="#v-pills-Submission" role="tab" aria-controls="v-pills-Submission" aria-expanded="true">7. Submission</a></div></div>
                <div class="col-10"><div class="tab-content" id="v-pills-tabContent"><div class="tab-pane fade show active" id="v-pills-Personal-Information" role="tabpanel" aria-labelledby="v-pills-Personal-Information-tab">
        <form method='POST' id='frm_PersonalInformation' enctype='multipart/form-data'>
          <div class='section'>
            <h2 style="padding-bottom: 10px; border-bottom: 2px solid black">Personal Information</h2>
            
        <div class="instructions">
    <h7 style="margin-left: -10px">Instructions for this page</h7>
    <p style="color:red">
            <li name="">All fields are mandatory</li>
            <li name="">Photocopy proof required are: Date of Birth, Address Proof, Category Proof (if category proof is not attached, the applicant will be considered as UR category)</li>
            <li name="">The image file should be JPG, JPEG, png,gif format.</li>
            <li name="">Dimension 200 x 300 pixels(preferred). </li>
            <li name="">Size of image file be between 20kb-200kb.</li>
        </p>
  </div>
  <hr>
        <div class='subsection' id="PersonalDetails">
            <br><h4 style="color: #1bbae1">&gt; Personal Details</h4><br>
            
            <div class="form-group row" id="fieldset__35038">
        <div class="col row">
                <label  id="label-FullName" class="col-form-label col-md-3" for="FullName">Full Name<span id="asterisk-FullName" style="color:red">*</span></label><div class="col-md-6"><input name="FullName" placeholder="Full Name" onchange="triggers[&quot;FullName&quot;].forEach(function(f, i) { f.call(this, event) });" id="FullName" class="form-control form-control-sm"><span class="error" id="error-FullName" style="display:none">Error</span></div>
            </div></div>

            <div class="form-group row" id="fieldset__96729">
        <div class="col row">
                <label  id="label-FathersHusbandsName" class="col-form-label col-md-3" for="FathersHusbandsName">Father's/Husband's Name<span id="asterisk-FathersHusbandsName" style="color:red">*</span></label><div class="col-md-6"><input name="FathersHusbandsName" onchange="triggers[&quot;FathersHusbandsName&quot;].forEach(function(f, i) { f.call(this, event) });" id="FathersHusbandsName" class="form-control form-control-sm" placeholder="Father&apos;s/Husband&apos;s Name"><span class="error" id="error-FathersHusbandsName" style="display:none">Error</span></div>
            </div></div>

            <div class="form-group row" id="fieldset__91356">
        <div class="col row">
                <label  id="label-dob" class="col-form-label col-md-3" for="dob">Date of Birth<span id="asterisk-dob" style="color:red">*</span></label><div class="col-md-3"><input name="dob" placeholder="dd/mm/yyyy" onchange="triggers[&quot;dob&quot;].forEach(function(f, i) { f.call(this, event) });" id="dob" class="form-control form-control-sm"><span class="error" id="error-dob" style="display:none">Error</span></div>
                <label  id="label-Age" class="col-form-label col-md-3" for="Age">Age<span id="asterisk-Age" style="color:red">*</span></label><div class="col-md-3"><input name="Age" placeholder="In Years" readonly onchange="triggers[&quot;Age&quot;].forEach(function(f, i) { f.call(this, event) });" id="Age" class="form-control form-control-sm"><span class="error" id="error-Age" style="display:none">Error</span></div>
            </div></div>

            <div class="form-group row" id="fieldset__02309">
        <div class="col row">
                <label  id="label-Gender" class="col-form-label col-md-3" for="Gender">Gender<span id="asterisk-Gender" style="color:red">*</span></label><div class="col-md-3"><select name="Gender" placeholder="Please select" onchange="triggers[&quot;Gender&quot;].forEach(function(f, i) { f.call(this, event) });" id="Gender" class="custom-select form-control form-control-sm"><option>Please select</option>
                    <option>Male</option>
                    <option>Female</option>
                    <option>Transgender</option>
                    <option>I don&apos;t want to disclose</option>
                </select><span class="error" id="error-Gender" style="display:none">Error</span></div>
                <label  id="label-Category" class="col-form-label col-md-3" for="Category">Category<span id="asterisk-Category" style="color:red">*</span></label><div class="col-md-3"><select name="Category" placeholder="Please select" onchange="triggers[&quot;Category&quot;].forEach(function(f, i) { f.call(this, event) });" id="Category" class="custom-select form-control form-control-sm"><option>Please select</option>
                    <option>General</option>
                    <option>Other Backward Classes (OBC)</option>
                    <option>Scheduled Cast (SC)</option>
                    <option>Scheduled Tribe (ST)</option>
                    <option>Person with disabilities</option>
                </select><span class="error" id="error-Category" style="display:none">Error</span></div>
            </div></div>

            <div class="form-group row" id="fieldset__19787">
        <div class="col row">
                <label  id="label-Nationality" class="col-form-label col-md-3" for="Nationality">Nationality<span id="asterisk-Nationality" style="color:red">*</span></label><div class="col-md-3"><select name="Nationality" placeholder="Please select" onchange="triggers[&quot;Nationality&quot;].forEach(function(f, i) { f.call(this, event) });" id="Nationality" class="custom-select form-control form-control-sm"><option>Please select</option>
                    <option>Indian</option>
                </select><span class="error" id="error-Nationality" style="display:none">Error</span></div>

                <label  id="label-StateUT" class="col-form-label col-md-3" for="StateUT">State/UT<span id="asterisk-StateUT" style="color:red">*</span></label><div class="col-md-3"><input name="StateUT" placeholder="State/UT to which you belong" onchange="triggers[&quot;StateUT&quot;].forEach(function(f, i) { f.call(this, event) });" id="StateUT" class="form-control form-control-sm"><span class="error" id="error-StateUT" style="display:none">Error</span></div>
            </div></div>

            <div class="form-group row" id="fieldset__42151">
        <div class="col row">
                <label  id="label-MaritalStatus" class="col-form-label col-md-3" for="MaritalStatus">Marital Status<span id="asterisk-MaritalStatus" style="color:red">*</span></label><div class="col-md-3"><select name="MaritalStatus" placeholder="Please select" onchange="triggers[&quot;MaritalStatus&quot;].forEach(function(f, i) { f.call(this, event) });" id="MaritalStatus" class="custom-select form-control form-control-sm"><option>Please select</option>
                    <option>Single</option>
                    <option>Married</option>
                    <option>Widowed</option>
                    <option>Divorced</option>
                    <option>Separated</option>
                </select><span class="error" id="error-MaritalStatus" style="display:none">Error</span></div>
                <label  id="label-PersonwithdisabilityPwD" class="col-form-label col-md-3" for="PersonwithdisabilityPwD">Person with disability (PwD)<span id="asterisk-PersonwithdisabilityPwD" style="color:red">*</span></label><div class="col-md-3"><select name="PersonwithdisabilityPwD" placeholder="Please select" onchange="triggers[&quot;PersonwithdisabilityPwD&quot;].forEach(function(f, i) { f.call(this, event) });" id="PersonwithdisabilityPwD" class="custom-select form-control form-control-sm"><option>Please select</option>
                    <option>Yes</option>
                    <option>No</option>
                </select><span class="error" id="error-PersonwithdisabilityPwD" style="display:none">Error</span></div>
            </div></div>
        
        </div>
        <div class='subsection' id="ContactDetails">
            <br><h4 style="color: #1bbae1">&gt; Contact Details</h4><br>
                        
            <div class="form-group row" id="fieldset__02869">
        <div class="col row">
                <label  id="label-MobileNobrwithcountrycode" class="col-form-label col-md-2" for="MobileNobrwithcountrycode">Mobile No.<br>(with country code)<span id="asterisk-MobileNobrwithcountrycode" style="color:red">*</span></label><div class="col-md-4"><input name="MobileNobrwithcountrycode" placeholder="Contact No" onchange="triggers[&quot;MobileNobrwithcountrycode&quot;].forEach(function(f, i) { f.call(this, event) });" id="MobileNobrwithcountrycode" class="form-control form-control-sm"><span class="error" id="error-MobileNobrwithcountrycode" style="display:none">Error</span></div>
                <label  id="label-LandlineNo" class="col-form-label col-md-2" for="LandlineNo">Landline No.</label><div class="col-md-4"><input name="LandlineNo" placeholder="Landline Contact No." onchange="triggers[&quot;LandlineNo&quot;].forEach(function(f, i) { f.call(this, event) });" id="LandlineNo" class="form-control form-control-sm"><span class="error" id="error-LandlineNo" style="display:none">Error</span></div>
            </div></div>

            <div class="form-group row" id="fieldset__42257">
        <div class="col row">
                <label class="col-md-2" name=""></label>
                <label class="col-md-5" name="">Correspondence Address</label>
                <label class="col-md-5" name="">Permanent Address</label>
                <label  id="label-CorrespondenceAddress1" class="col-form-label col-md-2" for="CorrespondenceAddress1">Address 1<span id="asterisk-CorrespondenceAddress1" style="color:red">*</span></label><div class="col-md-5"><input name="CorrespondenceAddress1" placeholder="Correspondence Address" onchange="triggers[&quot;CorrespondenceAddress1&quot;].forEach(function(f, i) { f.call(this, event) });" id="CorrespondenceAddress1" class="form-control form-control-sm"><span class="error" id="error-CorrespondenceAddress1" style="display:none">Error</span></div>
                <div class="col-md-5"><input name="PermanentAddress1" placeholder="Permanent Address" onchange="triggers[&quot;PermanentAddress1&quot;].forEach(function(f, i) { f.call(this, event) });" id="PermanentAddress1" class="form-control form-control-sm"><span class="error" id="error-PermanentAddress1" style="display:none">Error</span></div>
                <label  id="label-CorrespondenceAddress2" class="col-form-label col-md-2" for="CorrespondenceAddress2">Address 2<span id="asterisk-CorrespondenceAddress2" style="color:red">*</span></label><div class="col-md-5"><input name="CorrespondenceAddress2" placeholder="Correspondence Address" onchange="triggers[&quot;CorrespondenceAddress2&quot;].forEach(function(f, i) { f.call(this, event) });" id="CorrespondenceAddress2" class="form-control form-control-sm"><span class="error" id="error-CorrespondenceAddress2" style="display:none">Error</span></div>
                <div class="col-md-5"><input name="PermanentAddress2" placeholder="Permanent Address" onchange="triggers[&quot;PermanentAddress2&quot;].forEach(function(f, i) { f.call(this, event) });" id="PermanentAddress2" class="form-control form-control-sm"><span class="error" id="error-PermanentAddress2" style="display:none">Error</span></div>
                <label  id="label-CorrespondenceCity" class="col-form-label col-md-2" for="CorrespondenceCity">City<span id="asterisk-CorrespondenceCity" style="color:red">*</span></label><div class="col-md-5"><input name="CorrespondenceCity" placeholder="Please enter" onchange="triggers[&quot;CorrespondenceCity&quot;].forEach(function(f, i) { f.call(this, event) });" id="CorrespondenceCity" class="form-control form-control-sm"><span class="error" id="error-CorrespondenceCity" style="display:none">Error</span></div>
                <div class="col-md-5"><input name="PermanentCity" placeholder="Please enter" onchange="triggers[&quot;PermanentCity&quot;].forEach(function(f, i) { f.call(this, event) });" id="PermanentCity" class="form-control form-control-sm"><span class="error" id="error-PermanentCity" style="display:none">Error</span></div>
                <label  id="label-CorrespondenceState" class="col-form-label col-md-2" for="CorrespondenceState">State<span id="asterisk-CorrespondenceState" style="color:red">*</span></label><div class="col-md-5"><input name="CorrespondenceState" placeholder="Please enter" onchange="triggers[&quot;CorrespondenceState&quot;].forEach(function(f, i) { f.call(this, event) });" id="CorrespondenceState" class="form-control form-control-sm"><span class="error" id="error-CorrespondenceState" style="display:none">Error</span></div>
                <div class="col-md-5"><input name="PermanentState" placeholder="Please enter" onchange="triggers[&quot;PermanentState&quot;].forEach(function(f, i) { f.call(this, event) });" id="PermanentState" class="form-control form-control-sm"><span class="error" id="error-PermanentState" style="display:none">Error</span></div>
                <label  id="label-CorrespondencePincode" class="col-form-label col-md-2" for="CorrespondencePincode">Pincode<span id="asterisk-CorrespondencePincode" style="color:red">*</span></label><div class="col-md-5"><input name="CorrespondencePincode" placeholder="Please enter" onchange="triggers[&quot;CorrespondencePincode&quot;].forEach(function(f, i) { f.call(this, event) });" id="CorrespondencePincode" class="form-control form-control-sm"><span class="error" id="error-CorrespondencePincode" style="display:none">Error</span></div>
                <div class="col-md-5"><input name="PermanentPincode" placeholder="Please enter" onchange="triggers[&quot;PermanentPincode&quot;].forEach(function(f, i) { f.call(this, event) });" id="PermanentPincode" class="form-control form-control-sm"><span class="error" id="error-PermanentPincode" style="display:none">Error</span></div>
            </div></div>
        
        </div>
    
            <div class="text-center row"><button type="submit" id="submit_PersonalInformation" class="btn btn-primary submit" style="margin: 15px auto">Save</button></div>
          </div>
        </form></div><div class="tab-pane fade " id="v-pills-Application-Details" role="tabpanel" aria-labelledby="v-pills-Application-Details-tab">
        <form method='POST' id='frm_ApplicationDetails' enctype='multipart/form-data'>
          <div class='section'>
            <h2 style="padding-bottom: 10px; border-bottom: 2px solid black">Application Details</h2>
            
        <div class="instructions">
    <h7 style="margin-left: -10px">Instructions for this page</h7>
    <p style="color:red">
            <li name=""> Upload all the necessary files including your image and image of the signature right before the final submission.</li>
            <li name="">Upload images size less than 200x300px, signature less than 200x150 px. Both images should be smaller than 250kb.</li>
        </p>
  </div>
  <hr>
        <div class='subsection' id="Applicationinformation">
            <br><h4 style="color: #1bbae1">&gt; Application information</h4><br>
            
            <div class="form-group row" id="fieldset__49479">
        <div class="col row">
                <label  id="label-DepartmentPreference1" class="col-form-label col-md-3" for="DepartmentPreference1">Department Preference 1<span id="asterisk-DepartmentPreference1" style="color:red">*</span></label><div class="col-md-6"><select name="DepartmentPreference1" placeholder="Please select" onchange="triggers[&quot;DepartmentPreference1&quot;].forEach(function(f, i) { f.call(this, event) });" id="DepartmentPreference1" class="custom-select form-control form-control-sm"><option>Please select</option>
                    <option>Architecture</option>
                    <option>Civil Engineering</option>
                    <option>Chemical Engineering</option>
                    <option>Computer Science Engineering</option>
                    <option>Electronics and Communication Engineering</option>
                    <option>Electricals and Electronics Engineering</option>
                    <option>Instrumentation and Control Engineering</option>
                    <option>Mechanical Engineering</option>
                    <option>Metallurgical and Materials Engineering</option>
                    <option>Production Engineering</option>
                    <option>Energy and Environment</option>
                    <option>Physics</option>
                    <option>Chemistry</option>
                    <option>Mathematics</option>
                    <option>Humanities (English/Economics)</option>
                    <option>Computer Application</option>
                    <option>Management Studies</option>
                </select><span class="error" id="error-DepartmentPreference1" style="display:none">Error</span></div>
            </div></div>
            <div class="form-group row" id="fieldset__25647">
        <div class="col row">
                <label  id="label-DepartmentPreference2" class="col-form-label col-md-3" for="DepartmentPreference2">Department Preference 2</label><div class="col-md-6"><select name="DepartmentPreference2" placeholder="Please select" onchange="triggers[&quot;DepartmentPreference2&quot;].forEach(function(f, i) { f.call(this, event) });" id="DepartmentPreference2" class="custom-select form-control form-control-sm"><option>Please select</option>
                    <option>Architecture</option>
                    <option>Civil Engineering</option>
                    <option>Chemical Engineering</option>
                    <option>Computer Science Engineering</option>
                    <option>Electronics and Communication Engineering</option>
                    <option>Electricals and Electronics Engineering</option>
                    <option>Instrumentation and Control Engineering</option>
                    <option>Mechanical Engineering</option>
                    <option>Metallurgical and Materials Engineering</option>
                    <option>Production Engineering</option>
                    <option>Energy and Environment</option>
                    <option>Physics</option>
                    <option>Chemistry</option>
                    <option>Mathematics</option>
                    <option>Humanities (English/Economics)</option>
                    <option>Computer Application</option>
                    <option>Management Studies</option>
                </select><span class="error" id="error-DepartmentPreference2" style="display:none">Error</span></div>
            </div></div>
            <div class="form-group row" id="fieldset__87425">
        <div class="col row">
                <label  id="label-DepartmentPreference3" class="col-form-label col-md-3" for="DepartmentPreference3">Department Preference 3</label><div class="col-md-6"><select name="DepartmentPreference3" placeholder="Please select" onchange="triggers[&quot;DepartmentPreference3&quot;].forEach(function(f, i) { f.call(this, event) });" id="DepartmentPreference3" class="custom-select form-control form-control-sm"><option>Please select</option>
                    <option>Architecture</option>
                    <option>Civil Engineering</option>
                    <option>Chemical Engineering</option>
                    <option>Computer Science Engineering</option>
                    <option>Electronics and Communication Engineering</option>
                    <option>Electricals and Electronics Engineering</option>
                    <option>Instrumentation and Control Engineering</option>
                    <option>Mechanical Engineering</option>
                    <option>Metallurgical and Materials Engineering</option>
                    <option>Production Engineering</option>
                    <option>Energy and Environment</option>
                    <option>Physics</option>
                    <option>Chemistry</option>
                    <option>Mathematics</option>
                    <option>Humanities (English/Economics)</option>
                    <option>Computer Application</option>
                    <option>Management Studies</option>
                </select><span class="error" id="error-DepartmentPreference3" style="display:none">Error</span></div>
            </div></div>
            <div class="form-group row" id="fieldset__12064">
        <div class="col row">
                <label  id="label-Email" class="col-form-label col-md-3" for="Email">Email<span id="asterisk-Email" style="color:red">*</span></label><div class="col-md-3"><input name="Email" readonly onchange="triggers[&quot;Email&quot;].forEach(function(f, i) { f.call(this, event) });" id="Email" class="form-control form-control-sm" placeholder="Email"><span class="error" id="error-Email" style="display:none">Error</span></div>
            </div></div>
            <div class="form-group row" id="fieldset__39275">
        <div class="col row">
                <label  id="label-AreaofResearch" class="col-form-label col-md-3" for="AreaofResearch">Area of Research<span id="asterisk-AreaofResearch" style="color:red">*</span></label><div class="col-md-6"><input name="AreaofResearch" onchange="triggers[&quot;AreaofResearch&quot;].forEach(function(f, i) { f.call(this, event) });" id="AreaofResearch" class="form-control form-control-sm" placeholder="Area of Research"><span class="error" id="error-AreaofResearch" style="display:none">Error</span></div>
            </div></div>
            <!-- <fieldset>
                <select name="internalCandidate" label="Internal Candidate of NITT?" cols="3,3" placeholder="Please select" validationRule="required">
                    <option>Yes</option>
                    <option>No</option>
                </select>
                <input name="Staff Number" cols="3,3" placeholder="Staff Number" validationRule="required" showif="$f.internalCandidate == 'Yes'">
            </fieldset>

            <fieldset showif="$f.internalCandidate == 'No'">
                <input name="Date of Last Promotion" cols="3,3" placeholder="dd/mm/yyyy" validationRule="required">
            </fieldset> -->
        
        </div>
        
        <hr name="">
        <div class="form-group row" id="fieldset__97958">
        <div class="col row">
            <label  id="label-BankReferenceNumber" class="col-form-label col-md-2" for="BankReferenceNumber">Bank Reference Number<span id="asterisk-BankReferenceNumber" style="color:red">*</span></label><div class="col-md-4"><input name="BankReferenceNumber" placeholder="Enter Chalan Number" onchange="triggers[&quot;BankReferenceNumber&quot;].forEach(function(f, i) { f.call(this, event) });" id="BankReferenceNumber" class="form-control form-control-sm"><span class="error" id="error-BankReferenceNumber" style="display:none">Error</span></div>
            <label  id="label-ApplicationCategory" class="col-form-label col-md-2" for="ApplicationCategory">Application Category<span id="asterisk-ApplicationCategory" style="color:red">*</span></label><div class="col-md-4"><select name="ApplicationCategory" placeholder="Choose Category" onchange="triggers[&quot;ApplicationCategory&quot;].forEach(function(f, i) { f.call(this, event) });" id="ApplicationCategory" class="custom-select form-control form-control-sm"><option>Choose Category</option>
                <option>On campus</option>
                <option>External</option>
                <option>Stipendary</option>
                <option>Non-Stipendary</option>
                <option>Project</option>
                <option>Other Fellowships</option>
            </select><span class="error" id="error-ApplicationCategory" style="display:none">Error</span></div>             
        </div></div>
        <div class="form-group row" id="fieldset__92900">
        <div class="col row">
            <label  id="label-PassportPhoto" class="col-form-label col-md-3" for="PassportPhoto">Upload Passport size photo(300x200):<span id="asterisk-PassportPhoto" style="color:red">*</span></label><div class="col-md-6">
            <div class="row">
                <div class="col-md-6"><input type="file" name="PassportPhoto" accept="image/jpeg,image/png" preview="4" onchange="$f[&quot;PassportPhoto&quot;] = (this.files)?this.files[0]:null; toggleRemoveButtonAndPreview_PassportPhoto(); validate(&apos;PassportPhoto&apos;);" id="PassportPhoto" class="form-control-file" placeholder="Upload Passport size photo(300x200):"></div>
                <div class="col-md-4" id="filePreview_PassportPhoto"></div>
                <div class="col-md-1">
                    <a role='button' href='#' id="removeUploadButton_PassportPhoto" title='Remove upload' class='btn btn-outline-danger btn-sm' onclick='removeUpload_PassportPhoto(event)'><span class='fa fa-minus-circle'></span></a>
                </div>
            </div>
            <div> <span class="error" id="error-PassportPhoto" style="display:none">Error</span> </div></div>
        </div></div>
    
            <div class="text-center row"><button type="submit" id="submit_ApplicationDetails" class="btn btn-primary submit" style="margin: 15px auto">Save</button></div>
          </div>
        </form></div><div class="tab-pane fade " id="v-pills-Undergraduation-Details" role="tabpanel" aria-labelledby="v-pills-Undergraduation-Details-tab">
        <form method='POST' id='frm_UndergraduationDetails' enctype='multipart/form-data'>
          <div class='section'>
            <h2 style="padding-bottom: 10px; border-bottom: 2px solid black">Undergraduation Details</h2>
            
        <div class="form-group row" id="fieldset__40763">
        <div class="col row">
            <label  id="label-NameofDegree" class="col-form-label col-md-2" for="NameofDegree">Name of Degree:<span id="asterisk-NameofDegree" style="color:red">*</span></label><div class="col-md-4"><input name="NameofDegree" placeholder="Name of Degree" onchange="triggers[&quot;NameofDegree&quot;].forEach(function(f, i) { f.call(this, event) });" id="NameofDegree" class="form-control form-control-sm"><span class="error" id="error-NameofDegree" style="display:none">Error</span></div>
            <label  id="label-BranchName" class="col-form-label col-md-2" for="BranchName">Branch Name:<span id="asterisk-BranchName" style="color:red">*</span></label><div class="col-md-4"><input name="BranchName" placeholder="Branch/Specialization" onchange="triggers[&quot;BranchName&quot;].forEach(function(f, i) { f.call(this, event) });" id="BranchName" class="form-control form-control-sm"><span class="error" id="error-BranchName" style="display:none">Error</span></div>
        </div></div>
        <div class="form-group row" id="fieldset__38071">
        <div class="col row">
            <label  id="label-CGPA" class="col-form-label col-md-2" for="CGPA">C.G.P.A/Percentage:<span id="asterisk-CGPA" style="color:red">*</span></label><div class="col-md-4"><input name="CGPA" placeholder="C.G.P.A" onchange="triggers[&quot;CGPA&quot;].forEach(function(f, i) { f.call(this, event) });" id="CGPA" class="form-control form-control-sm"><span class="error" id="error-CGPA" style="display:none">Error</span></div>
            <label  id="label-Class" class="col-form-label col-md-2" for="Class">Class<span id="asterisk-Class" style="color:red">*</span></label><div class="col-md-4"><select name="Class" placeholder="Choose your Option" onchange="triggers[&quot;Class&quot;].forEach(function(f, i) { f.call(this, event) });" id="Class" class="custom-select form-control form-control-sm"><option>Choose your Option</option>
                <option>Honours</option>
                <option>Distinction</option>
                <option>Stipendary</option>
                <option>Non-Stipendary</option>
            </select><span class="error" id="error-Class" style="display:none">Error</span></div>
        </div></div>
        <div class="form-group row" id="fieldset__57731">
        <div class="col row">
            <label  id="label-CollegeName" class="col-form-label col-md-3" for="CollegeName">College Name<span id="asterisk-CollegeName" style="color:red">*</span></label><div class="col-md-6"><input name="CollegeName" placeholder="College Name" onchange="triggers[&quot;CollegeName&quot;].forEach(function(f, i) { f.call(this, event) });" id="CollegeName" class="form-control form-control-sm"><span class="error" id="error-CollegeName" style="display:none">Error</span></div>
        </div></div>
        <div class="form-group row" id="fieldset__78475">
        <div class="col row">
            <label  id="label-UniversityName" class="col-form-label col-md-3" for="UniversityName">University Name<span id="asterisk-UniversityName" style="color:red">*</span></label><div class="col-md-6"><input name="UniversityName" placeholder="University Name" onchange="triggers[&quot;UniversityName&quot;].forEach(function(f, i) { f.call(this, event) });" id="UniversityName" class="form-control form-control-sm"><span class="error" id="error-UniversityName" style="display:none">Error</span></div>
        </div></div>
        <div class="form-group row" id="fieldset__89885">
        <div class="col row">
            <label  id="label-YearofPassing" class="col-form-label col-md-3" for="YearofPassing">Year of Passing<span id="asterisk-YearofPassing" style="color:red">*</span></label><div class="col-md-6"><input type="number" min="1900" name="YearofPassing" placeholder="Year of Passing" onchange="triggers[&quot;YearofPassing&quot;].forEach(function(f, i) { f.call(this, event) });" id="YearofPassing" class="form-control form-control-sm"><span class="error" id="error-YearofPassing" style="display:none">Error</span></div>
        </div></div>
    
            <div class="text-center row"><button type="submit" id="submit_UndergraduationDetails" class="btn btn-primary submit" style="margin: 15px auto">Save</button></div>
          </div>
        </form></div><div class="tab-pane fade " id="v-pills-Postgraduation-Details" role="tabpanel" aria-labelledby="v-pills-Postgraduation-Details-tab">
        <form method='POST' id='frm_PostgraduationDetails' enctype='multipart/form-data'>
          <div class='section'>
            <h2 style="padding-bottom: 10px; border-bottom: 2px solid black">Postgraduation Details</h2>
            
        <div class="form-group row" id="fieldset__43784">
        <div class="col row">
            <label  id="label-NameofDegreePG" class="col-form-label col-md-2" for="NameofDegreePG">Name of Degree:<span id="asterisk-NameofDegreePG" style="color:red">*</span></label><div class="col-md-4"><input name="NameofDegreePG" placeholder="Name of Degree" onchange="triggers[&quot;NameofDegreePG&quot;].forEach(function(f, i) { f.call(this, event) });" id="NameofDegreePG" class="form-control form-control-sm"><span class="error" id="error-NameofDegreePG" style="display:none">Error</span></div>
            <label  id="label-BranchNamePG" class="col-form-label col-md-2" for="BranchNamePG">Branch Name:<span id="asterisk-BranchNamePG" style="color:red">*</span></label><div class="col-md-4"><input name="BranchNamePG" placeholder="Branch/Specialization" onchange="triggers[&quot;BranchNamePG&quot;].forEach(function(f, i) { f.call(this, event) });" id="BranchNamePG" class="form-control form-control-sm"><span class="error" id="error-BranchNamePG" style="display:none">Error</span></div>
        </div></div>
        <div class="form-group row" id="fieldset__32743">
        <div class="col row">
            <label  id="label-CGPAPG" class="col-form-label col-md-2" for="CGPAPG">C.G.P.A/Percentage:<span id="asterisk-CGPAPG" style="color:red">*</span></label><div class="col-md-4"><input name="CGPAPG" placeholder="C.G.P.A" onchange="triggers[&quot;CGPAPG&quot;].forEach(function(f, i) { f.call(this, event) });" id="CGPAPG" class="form-control form-control-sm"><span class="error" id="error-CGPAPG" style="display:none">Error</span></div>
            <label  id="label-ClassPG" class="col-form-label col-md-2" for="ClassPG">Class<span id="asterisk-ClassPG" style="color:red">*</span></label><div class="col-md-4"><select name="ClassPG" placeholder="Choose your Option" onchange="triggers[&quot;ClassPG&quot;].forEach(function(f, i) { f.call(this, event) });" id="ClassPG" class="custom-select form-control form-control-sm"><option>Choose your Option</option>
                <option>Honours</option>
                <option>Distinction</option>
                <option>Stipendary</option>
                <option>Non-Stipendary</option>
            </select><span class="error" id="error-ClassPG" style="display:none">Error</span></div>
        </div></div>
        <div class="form-group row" id="fieldset__59340">
        <div class="col row">
            <label  id="label-Finalsem" class="col-form-label col-md-4" for="Finalsem">Have your final semester result been announced<span id="asterisk-Finalsem" style="color:red">*</span></label><div class="col-md-4"><select name="Finalsem" placeholder="Choose your Option" onchange="triggers[&quot;Finalsem&quot;].forEach(function(f, i) { f.call(this, event) });" id="Finalsem" class="custom-select form-control form-control-sm"><option>Choose your Option</option>
                <option>Yes</option>
                <option>No</option>
            </select><span class="error" id="error-Finalsem" style="display:none">Error</span></div>
        </div></div>
        <div class="form-group row" id="fieldset__85256">
        <div class="col row">
            <label  id="label-CollegeNamePG" class="col-form-label col-md-3" for="CollegeNamePG">College Name<span id="asterisk-CollegeNamePG" style="color:red">*</span></label><div class="col-md-6"><input name="CollegeNamePG" placeholder="College Name" onchange="triggers[&quot;CollegeNamePG&quot;].forEach(function(f, i) { f.call(this, event) });" id="CollegeNamePG" class="form-control form-control-sm"><span class="error" id="error-CollegeNamePG" style="display:none">Error</span></div>
        </div></div>
        <div class="form-group row" id="fieldset__19637">
        <div class="col row">
            <label  id="label-UniversityNamePG" class="col-form-label col-md-3" for="UniversityNamePG">University Name<span id="asterisk-UniversityNamePG" style="color:red">*</span></label><div class="col-md-6"><input name="UniversityNamePG" placeholder="University Name" onchange="triggers[&quot;UniversityNamePG&quot;].forEach(function(f, i) { f.call(this, event) });" id="UniversityNamePG" class="form-control form-control-sm"><span class="error" id="error-UniversityNamePG" style="display:none">Error</span></div>
        </div></div>
        <div class="form-group row" id="fieldset__17568">
        <div class="col row">
            <label  id="label-YearofPassingPG" class="col-form-label col-md-3" for="YearofPassingPG">Year of Passing<span id="asterisk-YearofPassingPG" style="color:red">*</span></label><div class="col-md-6"><input type="number" min="1900" name="YearofPassingPG" placeholder="Year of Passing" onchange="triggers[&quot;YearofPassingPG&quot;].forEach(function(f, i) { f.call(this, event) });" id="YearofPassingPG" class="form-control form-control-sm"><span class="error" id="error-YearofPassingPG" style="display:none">Error</span></div>
        </div></div>
        <div class='subsection' id="PGProjects">
            <br><h4 style="color: #1bbae1">&gt; P.G Projects</h4><br>
            
            <label  id="label-PGProjectTitle" class="col-form-label col-md-4" for="PGProjectTitle">P.G Project Title<span id="asterisk-PGProjectTitle" style="color:red">*</span></label><div class="col-md-6"><input name="PGProjectTitle" placeholder="Title of P.G Project" onchange="triggers[&quot;PGProjectTitle&quot;].forEach(function(f, i) { f.call(this, event) });" id="PGProjectTitle" class="form-control form-control-sm"><span class="error" id="error-PGProjectTitle" style="display:none">Error</span></div>
            <br name="">
            
    <div id="Publicationsbox_wrapper">
      <div id="Publicationsbox"></div>
      <hr>
      <a role="button" href="#" class="btn btn-success btn-sm" title='Add row' id="rowAdder_Publicationsbox" onclick="addRow_Publicationsbox(event)">
        <span class="fa fa-plus-square"></span> Add row
      </a>
    </div>
        
        </div>
    
            <div class="text-center row"><button type="submit" id="submit_PostgraduationDetails" class="btn btn-primary submit" style="margin: 15px auto">Save</button></div>
          </div>
        </form></div><div class="tab-pane fade " id="v-pills-Other-Details" role="tabpanel" aria-labelledby="v-pills-Other-Details-tab">
        <form method='POST' id='frm_OtherDetails' enctype='multipart/form-data'>
          <div class='section'>
            <h2 style="padding-bottom: 10px; border-bottom: 2px solid black">Other Details</h2>
            
        <label  id="label-Exams" class="col-form-label col-md-6" for="Exams">Qualified in GATE/NET/SLET/CSIR/CAT/UGC/NBHM : <span id="asterisk-Exams" style="color:red">*</span></label><div class="col-md-4"><select name="Exams" placeholder="Choose your Option" onchange="triggers[&quot;Exams&quot;].forEach(function(f, i) { f.call(this, event) });" id="Exams" class="custom-select form-control form-control-sm"><option>Choose your Option</option>
            <option>Yes</option>
            <option>No</option>
        </select><span class="error" id="error-Exams" style="display:none">Error</span></div>
        <br name="">
        <div class="form-group row" id="fieldset__73316">
        <div class="col row">
            <label  id="label-Examination" class="col-form-label col-md-3" for="Examination">Examination</label><div class="col-md-3"><select name="Examination" placeholder="Chose Option" onchange="triggers[&quot;Examination&quot;].forEach(function(f, i) { f.call(this, event) });" id="Examination" class="custom-select form-control form-control-sm"><option>Chose Option</option>
                <option>GATE</option>
                <option>NET</option>
                <option>SLET</option>
                <option>CSIR</option>
                <option>CAT</option>
                <option>UGC</option>
                <option>NBHM</option>
            </select><span class="error" id="error-Examination" style="display:none">Error</span></div>
            <label  id="label-Score" class="col-form-label col-md-3" for="Score">Enter Score</label><div class="col-md-3"><input name="Score" placeholder="Enter Details Here" onchange="triggers[&quot;Score&quot;].forEach(function(f, i) { f.call(this, event) });" id="Score" class="form-control form-control-sm"><span class="error" id="error-Score" style="display:none">Error</span></div>
        </div></div>
        <div class="form-group row" id="fieldset__42247">
        <div class="col row">
            <label  id="label-Rank" class="col-form-label col-md-3" for="Rank">Enter Rank</label><div class="col-md-3"><input name="Rank" placeholder="Enter Details Here" onchange="triggers[&quot;Rank&quot;].forEach(function(f, i) { f.call(this, event) });" id="Rank" class="form-control form-control-sm"><span class="error" id="error-Rank" style="display:none">Error</span></div>
            <label  id="label-ValidTill" class="col-form-label col-md-3" for="ValidTill">Valid Till<span id="asterisk-ValidTill" style="color:red">*</span></label><div class="col-md-3"><input name="ValidTill" placeholder="Enter Details Here" onchange="triggers[&quot;ValidTill&quot;].forEach(function(f, i) { f.call(this, event) });" id="ValidTill" class="form-control form-control-sm"><span class="error" id="error-ValidTill" style="display:none">Error</span></div>
        </div></div>
        <div class="form-group row" id="fieldset__30035">
        <div class="col row">
            <label  id="label-Discipline" class="col-form-label col-md-3" for="Discipline">Discipline</label><div class="col-md-9"><textarea name="Discipline" onchange="triggers[&quot;Discipline&quot;].forEach(function(f, i) { f.call(this, event) });" id="Discipline" class="form-control form-control-sm" placeholder="Discipline"></textarea><span class="error" id="error-Discipline" style="display:none">Error</span></div>
        </div></div>
        <br name="">
        
    <div id="Awardsbox_wrapper">
      <div id="Awardsbox"></div>
      <hr>
      <a role="button" href="#" class="btn btn-success btn-sm" title='Add row' id="rowAdder_Awardsbox" onclick="addRow_Awardsbox(event)">
        <span class="fa fa-plus-square"></span> Add row
      </a>
    </div>
    
            <div class="text-center row"><button type="submit" id="submit_OtherDetails" class="btn btn-primary submit" style="margin: 15px auto">Save</button></div>
          </div>
        </form></div><div class="tab-pane fade " id="v-pills-Professional-Experience" role="tabpanel" aria-labelledby="v-pills-Professional-Experience-tab">
        <form method='POST' id='frm_ProfessionalExperience' enctype='multipart/form-data'>
          <div class='section'>
            <h2 style="padding-bottom: 10px; border-bottom: 2px solid black">Professional Experience</h2>
            
        <div class="form-group row" id="fieldset__68425">
        <div class="col row">
            <label  id="label-Experience" class="col-form-label col-md-6" for="Experience">Click here if you have some Professional Experience :<span id="asterisk-Experience" style="color:red">*</span></label><div class="col-md-4"><select name="Experience" placeholder="Choose your Option" onchange="triggers[&quot;Experience&quot;].forEach(function(f, i) { f.call(this, event) });" id="Experience" class="custom-select form-control form-control-sm"><option>Choose your Option</option>
                <option>Yes</option>
                <option>No</option>
            </select><span class="error" id="error-Experience" style="display:none">Error</span></div>
        </div></div>
        <div class="form-group row" id="fieldset__79374">
        <div class="col row">
            
    <div id="ProfessionalExperiencebox_wrapper">
      <div id="ProfessionalExperiencebox"></div>
      <hr>
      <a role="button" href="#" class="btn btn-success btn-sm" title='Add row' id="rowAdder_ProfessionalExperiencebox" onclick="addRow_ProfessionalExperiencebox(event)">
        <span class="fa fa-plus-square"></span> Add row
      </a>
    </div>
        </div></div>
    
            <div class="text-center row"><button type="submit" id="submit_ProfessionalExperience" class="btn btn-primary submit" style="margin: 15px auto">Save</button></div>
          </div>
        </form></div><div class="tab-pane fade " id="v-pills-Submission" role="tabpanel" aria-labelledby="v-pills-Submission-tab">
        <form method='POST' id='frm_Submission' enctype='multipart/form-data'>
          <div class='section'>
            <h2 style="padding-bottom: 10px; border-bottom: 2px solid black">Submission</h2>
            
        <label  id="label-Confirmed" class="col-form-label col-md-12" for="Confirmed">I do hereby declare that the information furnished in this application are true and correct to the best of my knowledge. If, any of the particulars furnished above is found to be incorrect at the time of admission, the admission may be cancelled.<span id="asterisk-Confirmed" style="color:red">*</span></label><div class="col-md-12"><input type="checkbox" name="Confirmed" onchange="triggers[&quot;Confirmed&quot;].forEach(function(f, i) { f.call(this, event) });" id="Confirmed" class="form-control form-control-sm" placeholder="I do hereby declare that the information furnished in this application are true and correct to the best of my knowledge. If, any of the particulars furnished above is found to be incorrect at the time of admission, the admission may be cancelled."><span class="error" id="error-Confirmed" style="display:none">Error</span></div>
        <br name="">
        <div class="form-group row" id="fieldset__14220">
        <div class="col row">
            <label  id="label-Signature" class="col-form-label col-md-2" for="Signature">Upload Signature : <span id="asterisk-Signature" style="color:red">*</span></label><div class="col-md-8">
            <div class="row">
                <div class="col-md-6"><input type="file" name="Signature" accept="image/jpeg,image/png" preview="4" onchange="$f[&quot;Signature&quot;] = (this.files)?this.files[0]:null; toggleRemoveButtonAndPreview_Signature(); validate(&apos;Signature&apos;);" id="Signature" class="form-control-file" placeholder="Upload Signature : "></div>
                <div class="col-md-4" id="filePreview_Signature"></div>
                <div class="col-md-1">
                    <a role='button' href='#' id="removeUploadButton_Signature" title='Remove upload' class='btn btn-outline-danger btn-sm' onclick='removeUpload_Signature(event)'><span class='fa fa-minus-circle'></span></a>
                </div>
            </div>
            <div> <span class="error" id="error-Signature" style="display:none">Error</span> </div></div>
        </div></div>
    
            <div class="text-center row"><button type="submit" id="submit_Submission" class="btn btn-primary submit" style="margin: 15px auto">Save</button></div>
          </div>
        </form></div></div></div>
            </div>
        </div>

    <%- include('partials/footer.partial.ejs') %>

    
<script type='text/javascript' src='/js/indicative_bundle.js'></script>
<script type='text/javascript'>
let $f = {"FullName":"","FathersHusbandsName":"","dob":"","Age":"","Gender":"","Category":"","Nationality":"","StateUT":"","MaritalStatus":"","PersonwithdisabilityPwD":"","MobileNobrwithcountrycode":"","LandlineNo":"","CorrespondenceAddress1":"","PermanentAddress1":"","CorrespondenceAddress2":"","PermanentAddress2":"","CorrespondenceCity":"","PermanentCity":"","CorrespondenceState":"","PermanentState":"","CorrespondencePincode":"","PermanentPincode":"","DepartmentPreference1":"","DepartmentPreference2":"","DepartmentPreference3":"","Email":"","AreaofResearch":"","BankReferenceNumber":"","ApplicationCategory":"","PassportPhoto":"","NameofDegree":"","BranchName":"","CGPA":"","Class":"","CollegeName":"","UniversityName":"","YearofPassing":"","NameofDegreePG":"","BranchNamePG":"","CGPAPG":"","ClassPG":"","Finalsem":"","CollegeNamePG":"","UniversityNamePG":"","YearofPassingPG":"","PGProjectTitle":"","Publicationsbox__box__Publications__count__":"","Exams":"","Examination":"","Score":"","Rank":"","ValidTill":"","Discipline":"","Awardsbox__box__AwardsPrizesSportsNCCetc__count__":"","Experience":"","ProfessionalExperiencebox__box__undefined__count__":"","ProfessionalExperiencebox__box__PositionHeld__count__":"","ProfessionalExperiencebox__box__From__count__":"","ProfessionalExperiencebox__box__To__count__":"","Confirmed":"","Signature":""};
let rules = {"FullName":"required","FathersHusbandsName":"required","dob":"required|js: verifyDateInddmmyyyy($f.dob)","Age":"required|js: (calcAge($f.dob) + ' Years') === $f.Age","Gender":"required|in:Male,Female,Transgender,I don&apos;t want to disclose","Category":"required|in:General,Other Backward Classes (OBC),Scheduled Cast (SC),Scheduled Tribe (ST),Person with disabilities","Nationality":"required|in:Indian","StateUT":"required","MaritalStatus":"required|in:Single,Married,Widowed,Divorced,Separated","PersonwithdisabilityPwD":"required|in:Yes,No","MobileNobrwithcountrycode":"required|phone","LandlineNo":"sometimes","CorrespondenceAddress1":"required","PermanentAddress1":"required","CorrespondenceAddress2":"required","PermanentAddress2":"required","CorrespondenceCity":"required","PermanentCity":"required","CorrespondenceState":"required|above:1","PermanentState":"required","CorrespondencePincode":"required|pincode","PermanentPincode":"required|pincode","DepartmentPreference1":"required|in:Architecture,Civil Engineering,Chemical Engineering,Computer Science Engineering,Electronics and Communication Engineering,Electricals and Electronics Engineering,Instrumentation and Control Engineering,Mechanical Engineering,Metallurgical and Materials Engineering,Production Engineering,Energy and Environment,Physics,Chemistry,Mathematics,Humanities (English/Economics),Computer Application,Management Studies","DepartmentPreference2":"sometimes|in:Architecture,Civil Engineering,Chemical Engineering,Computer Science Engineering,Electronics and Communication Engineering,Electricals and Electronics Engineering,Instrumentation and Control Engineering,Mechanical Engineering,Metallurgical and Materials Engineering,Production Engineering,Energy and Environment,Physics,Chemistry,Mathematics,Humanities (English/Economics),Computer Application,Management Studies","DepartmentPreference3":"sometimes|in:Architecture,Civil Engineering,Chemical Engineering,Computer Science Engineering,Electronics and Communication Engineering,Electricals and Electronics Engineering,Instrumentation and Control Engineering,Mechanical Engineering,Metallurgical and Materials Engineering,Production Engineering,Energy and Environment,Physics,Chemistry,Mathematics,Humanities (English/Economics),Computer Application,Management Studies","Email":"required","AreaofResearch":"required","BankReferenceNumber":"required","ApplicationCategory":"required|in:On campus,External,Stipendary,Non-Stipendary,Project,Other Fellowships","PassportPhoto":"requiredFile|fileType:jpeg,jpg,png|fileSize:500|imageMaxHeight:800|imageMaxWidth:800|file","NameofDegree":"required","BranchName":"required","CGPA":"required","Class":"required|in:Honours,Distinction,Stipendary,Non-Stipendary","CollegeName":"required","UniversityName":"required","YearofPassing":"required","NameofDegreePG":"required","BranchNamePG":"required","CGPAPG":"required","ClassPG":"required|in:Honours,Distinction,Stipendary,Non-Stipendary","Finalsem":"required|in:Yes,No","CollegeNamePG":"required","UniversityNamePG":"required","YearofPassingPG":"required","PGProjectTitle":"required","Publicationsbox__box__Publications__count__":"required","Exams":"required|in:Yes,No","Examination":"sometimes|in:GATE,NET,SLET,CSIR,CAT,UGC,NBHM","Score":"sometimes","Rank":"sometimes","ValidTill":"requiredIfJs: ($f.Exams == 'Yes')|date","Discipline":"sometimes","Awardsbox__box__AwardsPrizesSportsNCCetc__count__":"required","Experience":"required|in:Yes,No","ProfessionalExperiencebox__box__undefined__count__":"sometimes","ProfessionalExperiencebox__box__PositionHeld__count__":"sometimes","ProfessionalExperiencebox__box__From__count__":"required|date","ProfessionalExperiencebox__box__To__count__":"required|date","Confirmed":"required","Signature":"requiredFile|fileType:jpeg,jpg,png|fileSize:250|imageMaxHeight:200|imageMaxWidth:150|file"};
let triggers = { FullName: [function(event) { $f["FullName"] = $("#FullName").val(); validate('FullName'); }],FathersHusbandsName: [function(event) { $f["FathersHusbandsName"] = $("#FathersHusbandsName").val(); validate('FathersHusbandsName'); }],dob: [function(event) { $f["dob"] = $("#dob").val(); validate('dob'); },() => {
            validate("dob");
          },function() {
            let val = eval("calcAge($f.dob) + ' Years'");
            $("#Age").val(val);
            $f.Age = val;
        },() => {
            validate("Age");
          }],Age: [function(event) { $f["Age"] = $("#Age").val(); validate('Age'); },() => {
            validate("Age");
          }],Gender: [function(event) { $f["Gender"] = $("#Gender").val(); validate('Gender'); }],Category: [function(event) { $f["Category"] = $("#Category").val(); validate('Category'); }],Nationality: [function(event) { $f["Nationality"] = $("#Nationality").val(); validate('Nationality'); }],StateUT: [function(event) { $f["StateUT"] = $("#StateUT").val(); validate('StateUT'); }],MaritalStatus: [function(event) { $f["MaritalStatus"] = $("#MaritalStatus").val(); validate('MaritalStatus'); }],PersonwithdisabilityPwD: [function(event) { $f["PersonwithdisabilityPwD"] = $("#PersonwithdisabilityPwD").val(); validate('PersonwithdisabilityPwD'); }],MobileNobrwithcountrycode: [function(event) { $f["MobileNobrwithcountrycode"] = $("#MobileNobrwithcountrycode").val(); validate('MobileNobrwithcountrycode'); }],LandlineNo: [function(event) { $f["LandlineNo"] = $("#LandlineNo").val(); validate('LandlineNo'); }],CorrespondenceAddress1: [function(event) { $f["CorrespondenceAddress1"] = $("#CorrespondenceAddress1").val(); validate('CorrespondenceAddress1'); }],PermanentAddress1: [function(event) { $f["PermanentAddress1"] = $("#PermanentAddress1").val(); validate('PermanentAddress1'); }],CorrespondenceAddress2: [function(event) { $f["CorrespondenceAddress2"] = $("#CorrespondenceAddress2").val(); validate('CorrespondenceAddress2'); }],PermanentAddress2: [function(event) { $f["PermanentAddress2"] = $("#PermanentAddress2").val(); validate('PermanentAddress2'); }],CorrespondenceCity: [function(event) { $f["CorrespondenceCity"] = $("#CorrespondenceCity").val(); validate('CorrespondenceCity'); }],PermanentCity: [function(event) { $f["PermanentCity"] = $("#PermanentCity").val(); validate('PermanentCity'); }],CorrespondenceState: [function(event) { $f["CorrespondenceState"] = $("#CorrespondenceState").val(); validate('CorrespondenceState'); }],PermanentState: [function(event) { $f["PermanentState"] = $("#PermanentState").val(); validate('PermanentState'); }],CorrespondencePincode: [function(event) { $f["CorrespondencePincode"] = $("#CorrespondencePincode").val(); validate('CorrespondencePincode'); }],PermanentPincode: [function(event) { $f["PermanentPincode"] = $("#PermanentPincode").val(); validate('PermanentPincode'); }],DepartmentPreference1: [function(event) { $f["DepartmentPreference1"] = $("#DepartmentPreference1").val(); validate('DepartmentPreference1'); }],DepartmentPreference2: [function(event) { $f["DepartmentPreference2"] = $("#DepartmentPreference2").val(); validate('DepartmentPreference2'); }],DepartmentPreference3: [function(event) { $f["DepartmentPreference3"] = $("#DepartmentPreference3").val(); validate('DepartmentPreference3'); }],Email: [function(event) { $f["Email"] = $("#Email").val(); validate('Email'); }],AreaofResearch: [function(event) { $f["AreaofResearch"] = $("#AreaofResearch").val(); validate('AreaofResearch'); }],BankReferenceNumber: [function(event) { $f["BankReferenceNumber"] = $("#BankReferenceNumber").val(); validate('BankReferenceNumber'); }],ApplicationCategory: [function(event) { $f["ApplicationCategory"] = $("#ApplicationCategory").val(); validate('ApplicationCategory'); }],NameofDegree: [function(event) { $f["NameofDegree"] = $("#NameofDegree").val(); validate('NameofDegree'); }],BranchName: [function(event) { $f["BranchName"] = $("#BranchName").val(); validate('BranchName'); }],CGPA: [function(event) { $f["CGPA"] = $("#CGPA").val(); validate('CGPA'); }],Class: [function(event) { $f["Class"] = $("#Class").val(); validate('Class'); }],CollegeName: [function(event) { $f["CollegeName"] = $("#CollegeName").val(); validate('CollegeName'); }],UniversityName: [function(event) { $f["UniversityName"] = $("#UniversityName").val(); validate('UniversityName'); }],YearofPassing: [function(event) { $f["YearofPassing"] = $("#YearofPassing").val(); validate('YearofPassing'); }],NameofDegreePG: [function(event) { $f["NameofDegreePG"] = $("#NameofDegreePG").val(); validate('NameofDegreePG'); }],BranchNamePG: [function(event) { $f["BranchNamePG"] = $("#BranchNamePG").val(); validate('BranchNamePG'); }],CGPAPG: [function(event) { $f["CGPAPG"] = $("#CGPAPG").val(); validate('CGPAPG'); }],ClassPG: [function(event) { $f["ClassPG"] = $("#ClassPG").val(); validate('ClassPG'); }],Finalsem: [function(event) { $f["Finalsem"] = $("#Finalsem").val(); validate('Finalsem'); }],CollegeNamePG: [function(event) { $f["CollegeNamePG"] = $("#CollegeNamePG").val(); validate('CollegeNamePG'); }],UniversityNamePG: [function(event) { $f["UniversityNamePG"] = $("#UniversityNamePG").val(); validate('UniversityNamePG'); }],YearofPassingPG: [function(event) { $f["YearofPassingPG"] = $("#YearofPassingPG").val(); validate('YearofPassingPG'); }],PGProjectTitle: [function(event) { $f["PGProjectTitle"] = $("#PGProjectTitle").val(); validate('PGProjectTitle'); }],Publicationsbox__box__Publications__count__: [function(event) { $f["Publicationsbox__box__Publications__count__"] = $("#Publicationsbox__box__Publications__count__").val(); validate('Publicationsbox__box__Publications__count__'); }],Exams: [function(event) { $f["Exams"] = $("#Exams").val(); validate('Exams'); },function(){ 
          if($f.Exams == 'Yes') {
            $("#fieldset__73316").show();
          } else {
            $("#fieldset__73316").hide();
          }},function(){ 
          if($f.Exams == 'Yes') {
            $("#fieldset__42247").show();
          } else {
            $("#fieldset__42247").hide();
          }},function(){ 
          if($f.Exams == 'Yes') {
            $("#fieldset__30035").show();
          } else {
            $("#fieldset__30035").hide();
          }}],Examination: [function(event) { $f["Examination"] = $("#Examination").val(); validate('Examination'); }],Score: [function(event) { $f["Score"] = $("#Score").val(); validate('Score'); }],Rank: [function(event) { $f["Rank"] = $("#Rank").val(); validate('Rank'); }],ValidTill: [function(event) { $f["ValidTill"] = $("#ValidTill").val(); validate('ValidTill'); }],Discipline: [function(event) { $f["Discipline"] = $("#Discipline").val(); validate('Discipline'); }],Awardsbox__box__AwardsPrizesSportsNCCetc__count__: [function(event) { $f["Awardsbox__box__AwardsPrizesSportsNCCetc__count__"] = $("#Awardsbox__box__AwardsPrizesSportsNCCetc__count__").val(); validate('Awardsbox__box__AwardsPrizesSportsNCCetc__count__'); }],Experience: [function(event) { $f["Experience"] = $("#Experience").val(); validate('Experience'); },function(){ 
          if($f.Experience == 'Yes') {
            $("#fieldset__79374").show();
          } else {
            $("#fieldset__79374").hide();
          }}],ProfessionalExperiencebox__box__undefined__count__: [function(event) { $f["ProfessionalExperiencebox__box__undefined__count__"] = $("#ProfessionalExperiencebox__box__undefined__count__").val(); validate('ProfessionalExperiencebox__box__undefined__count__'); }],ProfessionalExperiencebox__box__PositionHeld__count__: [function(event) { $f["ProfessionalExperiencebox__box__PositionHeld__count__"] = $("#ProfessionalExperiencebox__box__PositionHeld__count__").val(); validate('ProfessionalExperiencebox__box__PositionHeld__count__'); }],ProfessionalExperiencebox__box__From__count__: [function(event) { $f["ProfessionalExperiencebox__box__From__count__"] = $("#ProfessionalExperiencebox__box__From__count__").val(); validate('ProfessionalExperiencebox__box__From__count__'); }],ProfessionalExperiencebox__box__To__count__: [function(event) { $f["ProfessionalExperiencebox__box__To__count__"] = $("#ProfessionalExperiencebox__box__To__count__").val(); validate('ProfessionalExperiencebox__box__To__count__'); }],Confirmed: [function(event) { $f["Confirmed"] = $("#Confirmed").is(":checked"); validate('Confirmed'); }] };
let onValidates = {"FullName": (err) => {
        if (err.constructor !== Array) $("#error-FullName").hide();
        else                           $("#error-FullName").show().html(err[0].message);
    },"FathersHusbandsName": (err) => {
        if (err.constructor !== Array) $("#error-FathersHusbandsName").hide();
        else                           $("#error-FathersHusbandsName").show().html(err[0].message);
    },"dob": (err) => {
        if (err.constructor !== Array) $("#error-dob").hide();
        else                           $("#error-dob").show().html(err[0].message);
    },"Age": (err) => {
        if (err.constructor !== Array) $("#error-Age").hide();
        else                           $("#error-Age").show().html(err[0].message);
    },"Gender": (err) => {
        if (err.constructor !== Array) $("#error-Gender").hide();
        else                           $("#error-Gender").show().html(err[0].message);
    },"Category": (err) => {
        if (err.constructor !== Array) $("#error-Category").hide();
        else                           $("#error-Category").show().html(err[0].message);
    },"Nationality": (err) => {
        if (err.constructor !== Array) $("#error-Nationality").hide();
        else                           $("#error-Nationality").show().html(err[0].message);
    },"StateUT": (err) => {
        if (err.constructor !== Array) $("#error-StateUT").hide();
        else                           $("#error-StateUT").show().html(err[0].message);
    },"MaritalStatus": (err) => {
        if (err.constructor !== Array) $("#error-MaritalStatus").hide();
        else                           $("#error-MaritalStatus").show().html(err[0].message);
    },"PersonwithdisabilityPwD": (err) => {
        if (err.constructor !== Array) $("#error-PersonwithdisabilityPwD").hide();
        else                           $("#error-PersonwithdisabilityPwD").show().html(err[0].message);
    },"MobileNobrwithcountrycode": (err) => {
        if (err.constructor !== Array) $("#error-MobileNobrwithcountrycode").hide();
        else                           $("#error-MobileNobrwithcountrycode").show().html(err[0].message);
    },"LandlineNo": (err) => {
        if (err.constructor !== Array) $("#error-LandlineNo").hide();
        else                           $("#error-LandlineNo").show().html(err[0].message);
    },"CorrespondenceAddress1": (err) => {
        if (err.constructor !== Array) $("#error-CorrespondenceAddress1").hide();
        else                           $("#error-CorrespondenceAddress1").show().html(err[0].message);
    },"PermanentAddress1": (err) => {
        if (err.constructor !== Array) $("#error-PermanentAddress1").hide();
        else                           $("#error-PermanentAddress1").show().html(err[0].message);
    },"CorrespondenceAddress2": (err) => {
        if (err.constructor !== Array) $("#error-CorrespondenceAddress2").hide();
        else                           $("#error-CorrespondenceAddress2").show().html(err[0].message);
    },"PermanentAddress2": (err) => {
        if (err.constructor !== Array) $("#error-PermanentAddress2").hide();
        else                           $("#error-PermanentAddress2").show().html(err[0].message);
    },"CorrespondenceCity": (err) => {
        if (err.constructor !== Array) $("#error-CorrespondenceCity").hide();
        else                           $("#error-CorrespondenceCity").show().html(err[0].message);
    },"PermanentCity": (err) => {
        if (err.constructor !== Array) $("#error-PermanentCity").hide();
        else                           $("#error-PermanentCity").show().html(err[0].message);
    },"CorrespondenceState": (err) => {
        if (err.constructor !== Array) $("#error-CorrespondenceState").hide();
        else                           $("#error-CorrespondenceState").show().html(err[0].message);
    },"PermanentState": (err) => {
        if (err.constructor !== Array) $("#error-PermanentState").hide();
        else                           $("#error-PermanentState").show().html(err[0].message);
    },"CorrespondencePincode": (err) => {
        if (err.constructor !== Array) $("#error-CorrespondencePincode").hide();
        else                           $("#error-CorrespondencePincode").show().html(err[0].message);
    },"PermanentPincode": (err) => {
        if (err.constructor !== Array) $("#error-PermanentPincode").hide();
        else                           $("#error-PermanentPincode").show().html(err[0].message);
    },"DepartmentPreference1": (err) => {
        if (err.constructor !== Array) $("#error-DepartmentPreference1").hide();
        else                           $("#error-DepartmentPreference1").show().html(err[0].message);
    },"DepartmentPreference2": (err) => {
        if (err.constructor !== Array) $("#error-DepartmentPreference2").hide();
        else                           $("#error-DepartmentPreference2").show().html(err[0].message);
    },"DepartmentPreference3": (err) => {
        if (err.constructor !== Array) $("#error-DepartmentPreference3").hide();
        else                           $("#error-DepartmentPreference3").show().html(err[0].message);
    },"Email": (err) => {
        if (err.constructor !== Array) $("#error-Email").hide();
        else                           $("#error-Email").show().html(err[0].message);
    },"AreaofResearch": (err) => {
        if (err.constructor !== Array) $("#error-AreaofResearch").hide();
        else                           $("#error-AreaofResearch").show().html(err[0].message);
    },"BankReferenceNumber": (err) => {
        if (err.constructor !== Array) $("#error-BankReferenceNumber").hide();
        else                           $("#error-BankReferenceNumber").show().html(err[0].message);
    },"ApplicationCategory": (err) => {
        if (err.constructor !== Array) $("#error-ApplicationCategory").hide();
        else                           $("#error-ApplicationCategory").show().html(err[0].message);
    },"PassportPhoto": (err) => {
        if (err.constructor !== Array) $("#error-PassportPhoto").hide();
        else                           $("#error-PassportPhoto").show().html(err[0].message);
    },"NameofDegree": (err) => {
        if (err.constructor !== Array) $("#error-NameofDegree").hide();
        else                           $("#error-NameofDegree").show().html(err[0].message);
    },"BranchName": (err) => {
        if (err.constructor !== Array) $("#error-BranchName").hide();
        else                           $("#error-BranchName").show().html(err[0].message);
    },"CGPA": (err) => {
        if (err.constructor !== Array) $("#error-CGPA").hide();
        else                           $("#error-CGPA").show().html(err[0].message);
    },"Class": (err) => {
        if (err.constructor !== Array) $("#error-Class").hide();
        else                           $("#error-Class").show().html(err[0].message);
    },"CollegeName": (err) => {
        if (err.constructor !== Array) $("#error-CollegeName").hide();
        else                           $("#error-CollegeName").show().html(err[0].message);
    },"UniversityName": (err) => {
        if (err.constructor !== Array) $("#error-UniversityName").hide();
        else                           $("#error-UniversityName").show().html(err[0].message);
    },"YearofPassing": (err) => {
        if (err.constructor !== Array) $("#error-YearofPassing").hide();
        else                           $("#error-YearofPassing").show().html(err[0].message);
    },"NameofDegreePG": (err) => {
        if (err.constructor !== Array) $("#error-NameofDegreePG").hide();
        else                           $("#error-NameofDegreePG").show().html(err[0].message);
    },"BranchNamePG": (err) => {
        if (err.constructor !== Array) $("#error-BranchNamePG").hide();
        else                           $("#error-BranchNamePG").show().html(err[0].message);
    },"CGPAPG": (err) => {
        if (err.constructor !== Array) $("#error-CGPAPG").hide();
        else                           $("#error-CGPAPG").show().html(err[0].message);
    },"ClassPG": (err) => {
        if (err.constructor !== Array) $("#error-ClassPG").hide();
        else                           $("#error-ClassPG").show().html(err[0].message);
    },"Finalsem": (err) => {
        if (err.constructor !== Array) $("#error-Finalsem").hide();
        else                           $("#error-Finalsem").show().html(err[0].message);
    },"CollegeNamePG": (err) => {
        if (err.constructor !== Array) $("#error-CollegeNamePG").hide();
        else                           $("#error-CollegeNamePG").show().html(err[0].message);
    },"UniversityNamePG": (err) => {
        if (err.constructor !== Array) $("#error-UniversityNamePG").hide();
        else                           $("#error-UniversityNamePG").show().html(err[0].message);
    },"YearofPassingPG": (err) => {
        if (err.constructor !== Array) $("#error-YearofPassingPG").hide();
        else                           $("#error-YearofPassingPG").show().html(err[0].message);
    },"PGProjectTitle": (err) => {
        if (err.constructor !== Array) $("#error-PGProjectTitle").hide();
        else                           $("#error-PGProjectTitle").show().html(err[0].message);
    },"Publicationsbox__box__Publications__count__": (err) => {
        if (err.constructor !== Array) $("#error-Publicationsbox__box__Publications__count__").hide();
        else                           $("#error-Publicationsbox__box__Publications__count__").show().html(err[0].message);
    },"Exams": (err) => {
        if (err.constructor !== Array) $("#error-Exams").hide();
        else                           $("#error-Exams").show().html(err[0].message);
    },"Examination": (err) => {
        if (err.constructor !== Array) $("#error-Examination").hide();
        else                           $("#error-Examination").show().html(err[0].message);
    },"Score": (err) => {
        if (err.constructor !== Array) $("#error-Score").hide();
        else                           $("#error-Score").show().html(err[0].message);
    },"Rank": (err) => {
        if (err.constructor !== Array) $("#error-Rank").hide();
        else                           $("#error-Rank").show().html(err[0].message);
    },"ValidTill": (err) => {
        if (err.constructor !== Array) $("#error-ValidTill").hide();
        else                           $("#error-ValidTill").show().html(err[0].message);
    },"Discipline": (err) => {
        if (err.constructor !== Array) $("#error-Discipline").hide();
        else                           $("#error-Discipline").show().html(err[0].message);
    },"Awardsbox__box__AwardsPrizesSportsNCCetc__count__": (err) => {
        if (err.constructor !== Array) $("#error-Awardsbox__box__AwardsPrizesSportsNCCetc__count__").hide();
        else                           $("#error-Awardsbox__box__AwardsPrizesSportsNCCetc__count__").show().html(err[0].message);
    },"Experience": (err) => {
        if (err.constructor !== Array) $("#error-Experience").hide();
        else                           $("#error-Experience").show().html(err[0].message);
    },"ProfessionalExperiencebox__box__undefined__count__": (err) => {
        if (err.constructor !== Array) $("#error-ProfessionalExperiencebox__box__undefined__count__").hide();
        else                           $("#error-ProfessionalExperiencebox__box__undefined__count__").show().html(err[0].message);
    },"ProfessionalExperiencebox__box__PositionHeld__count__": (err) => {
        if (err.constructor !== Array) $("#error-ProfessionalExperiencebox__box__PositionHeld__count__").hide();
        else                           $("#error-ProfessionalExperiencebox__box__PositionHeld__count__").show().html(err[0].message);
    },"ProfessionalExperiencebox__box__From__count__": (err) => {
        if (err.constructor !== Array) $("#error-ProfessionalExperiencebox__box__From__count__").hide();
        else                           $("#error-ProfessionalExperiencebox__box__From__count__").show().html(err[0].message);
    },"ProfessionalExperiencebox__box__To__count__": (err) => {
        if (err.constructor !== Array) $("#error-ProfessionalExperiencebox__box__To__count__").hide();
        else                           $("#error-ProfessionalExperiencebox__box__To__count__").show().html(err[0].message);
    },"Confirmed": (err) => {
        if (err.constructor !== Array) $("#error-Confirmed").hide();
        else                           $("#error-Confirmed").show().html(err[0].message);
    },"Signature": (err) => {
        if (err.constructor !== Array) $("#error-Signature").hide();
        else                           $("#error-Signature").show().html(err[0].message);
    },};
let validate = (name) => {
  let myRules = {};

  myRules[name] = rules[name];

  if (!myRules[name]) {
    return onValidates[name]({});
  }

  // same handler will handle both validation success and validation failure
  indicative.validate($f, myRules, {
    "required": "This field is required to complete registeration process",
    "date": "Please make sure you match the format dd/mm/yyy",
    "email": "Please enter a valid email",
    "phone": "Please enter a valid phone number",
    "above": "Value must be greater than {{argument.0}}",
  })
    .then(onValidates[name])
    .catch(onValidates[name]);
};

/*
  The below code will have access to indicative.

  This code is common to both client and server. When the form generator
  is invoked, it takes this code, and places it in apt places in both
  client and server.

  Special case: 'js' rule uses eval to evaluate rules, and the rules
  access form values using $f.<someFormElemName> format. They also access
  functions that are defined in <script> tag in the markup. Both of these
  are handled as follows:
    1. Client:
      - $f: it is already available as a global variable.
      - functions: functions defined in <script> tags are global
    2. Node:
      $f, and the functions defined in <script> tags will be taken
      and kept along with the following definitions in a module.
      The module will provide a method called set$f( $f ) which
      can be used to update $f before validation.

  The following doesn't define indicative rules for files, since
  files are handled differently both on client and server. For that
  both client and server write their own implementations.
*/

indicative.extend("phone", (data, field, message, args, get) => {
  if (indicative.is.phone(get(data, field))) {
    return Promise.resolve("");
  }
  return Promise.reject("Please enter a valid phone number");
});

indicative.extend("email", (data, field, message, args, get) => {
  if (indicative.is.email(get(data, field))) {
    return Promise.resolve("");
  }
  return Promise.reject("Please enter a valid email id");
});

indicative.extend("js", ($f, field, message, args) => {
  // naming the first argument $f here is a hacky way to give the 'code' access to the
  // variables in the rest of the form.

  let code = args.join(","); // in case there was a ',' in code, and indicative thought it
  // was indicative of separating an argument instead of part
  // of js code itself

  let pass = true;

  try {
    pass = eval(code); // decide result based on expression
  } catch (err) {
    pass = false; // fail if expression throws error
  }

  if (pass) {
    return Promise.resolve("");
  }
  return Promise.reject("Invalid data");
});

indicative.extend("requiredIfJs", ($f, field, message, args, get) => {
  // naming the first argument $f here is a hacky way to give the 'code' access to the
  // variables in the rest of the form.

  let code = args.join(","); // in case there was a ',' in code, and indicative thought it
  // was indicative of separating an argument instead of part
  // of js code itself

  let pass = true;

  try {
    pass = eval(code); // decide result based on expression
  } catch (err) {
    pass = false; // fail if expression throws error
    console.log(err);
  }

  console.log(code, pass, $f, get($f, field))  
  
  if (!pass) {
    return Promise.resolve("");
  }
  if (pass && get($f, field) !== "") {
    return Promise.resolve("");
  }
  return Promise.reject("Invalid data");
});

indicative.extend("pincode", (data, field, message, args, get) => {
  if (/^[0-9]{6}$/.test(get(data, field))) {
    return Promise.resolve("");
  }
  return Promise.reject("Invalid Pincode");
});

indicative.extend("year", (data, field, message, args, get) => {
  if (/^[0-9]{4}$/.test(get(data, field)) && parseInt(get(data, field)) >= 1950) {
    return Promise.resolve("");
  }
  return Promise.reject("Please enter a valid year greater than 1950");
});

indicative.extend("sometimes", () => Promise.resolve(""));

indicative.extend('file', (data, field, message, args, get) => {
  // reasonable enough test
  data = get(data, field);
  if (data.size && data.type) {
    return Promise.resolve("");
  }
  return Promise.reject("Invalid file");
});

indicative.extend('requiredFile', (data, field, message, args, get) => {
    return new Promise(function(resolve, reject) {
        const file = get(data, field);
        if(!file)
            return reject('Field is required for completing the registration');
        return resolve('');
    });
});

indicative.extend('fileType', (data, field, message, args, get) => {
    return new Promise(function(resolve, reject) {
        const file = get(data, field);
        if(!file)
            return reject('Field is required for completing the registration');

        for(let i in args) {
            if(file.name.endsWith("." + args[i]))
                return resolve("");
        }
        return reject('Not a valid file. Please upload files of type ' + args);
    });
});

indicative.extend('fileSize', (data, field, message, args, get) => {
    return new Promise(function(resolve, reject) {
        const file = get(data, field);
        if(!file)
            return reject('Field is required for completing the registration');

        if(file.size/1024 > args[0])
            return reject('File size limit exceeded. Upload a file lesser than ' + args[0] + 'KB');
        return resolve("");
    });
});

indicative.extend('imageMaxHeight', (data, field, message, args, get) => {
    return new Promise(function(resolve, reject) {
        const file = get(data, field);
        if(!file)
            return reject('Field is required for completing the registration');

        let reader = new FileReader();
        reader.onload = function(e) {
            let img = $('<img>', {src: e.target.result})[0];
            if(img.height > args[0])
                return reject('File Dimension limit exceeded. Upload a file with height lesser than ' + args[0] + 'px');
            return resolve("");
        };
        reader.readAsDataURL(file);
    });
});

indicative.extend('imageMaxWidth', (data, field, message, args, get) => {
    return new Promise(function(resolve, reject) {
        const file = get(data, field);
        if(!file)
            return reject('Field is required for completing the registration');

        let reader = new FileReader();
        reader.onload = function(e) {
            let img = $('<img>', {src: e.target.result})[0];
            if(img.width > args[0])
                return reject('File Dimension limit exceeded. Upload a file with width lesser than ' + args[0] + 'px');
            return resolve("");
        };
        reader.readAsDataURL(file);
    });
});


            function toggleRemoveButtonAndPreview_PassportPhoto(event) {
              // Display the preview and remove button if a file has been selected
              // Else hide them
              let files = $("#PassportPhoto")[0].files;
              if( files === undefined || !files.length) {
                  $("#removeUploadButton_PassportPhoto").hide();
                  $("#filePreview_PassportPhoto").hide();
              } else {
                  
                let file = files[0];
                let reader = new FileReader();
                reader.onload = function(e) {
                    $("#filePreview_PassportPhoto").html($('<img>', {
                        src: e.target.result,
                        style: "width:100%;"
                    }));
                };
                reader.readAsDataURL(file);
            
                  $("#removeUploadButton_PassportPhoto").show();
                  $("#filePreview_PassportPhoto").show();
              }
              event && event.stopPropagation();
              event && event.preventDefault();
              return false;
            }
            function removeUpload_PassportPhoto(event) {
              // Reset the file input's value and call the toggleRemoveButtonAndPreview
              // to remove the preview and remove button
              $("#PassportPhoto")[0].value = "";
              toggleRemoveButtonAndPreview_PassportPhoto();
              $f["PassportPhoto"] = null;

              event && event.stopPropagation();
              event && event.preventDefault();
              return false;
            }
            // Call the function to hide both the remove button and preview
            // initially. Will be helpful to automatically display them when
            // we get the uploaded values from server also.
            toggleRemoveButtonAndPreview_PassportPhoto();
        


    var nRows_Publicationsbox = 0;
    var nRows_Publicationsbox_real = 0;
    function delRow_Publicationsbox(event, rowNumber) {
        let rowId = "Publicationsbox-" + rowNumber;
        $("#" + rowId).remove();
        nRows_Publicationsbox_real--;
        if (nRows_Publicationsbox_real < 6) {
            $("#rowAdder_Publicationsbox").attr('disabled', false);
        }
        event && event.preventDefault();
        event && event.stopPropagation();
        return false;
    }
    function addRow_Publicationsbox(event) {
        // create every element in the row
        // add each element to the rules array
        // NOT-SUPPORTED: call addTrigger on each element
        // add function to onValidates for each element
        // add each element to the $f object
        let nRows = ++nRows_Publicationsbox;
        nRows_Publicationsbox_real++;
        let rowId = "Publicationsbox-" + nRows;
        let elements = [{"name":"Publicationsbox__box__Publications__count__","validationrule":"required"}];
        let html = "\n                <div class=\"form-group row\" id=\"fieldset__00524\">\n        <div class=\"col row\">\n                    <label  id=\"label-Publicationsbox__box__Publications__count__\" class=\"col-form-label col-md-6\" for=\"Publicationsbox__box__Publications__count__\">Publications<span id=\"asterisk-Publicationsbox__box__Publications__count__\" style=\"color:red\">*</span></label><div class=\"col-md-4\"><input name=\"Publicationsbox__box__Publications__count__\" placeholder=\"Enter Details Here\" onchange=\"triggers[&quot;Publicationsbox__box__Publications__count__&quot;].forEach(function(f, i) { f.call(this, event) });\" id=\"Publicationsbox__box__Publications__count__\" class=\"form-control form-control-sm\"><span class=\"error\" id=\"error-Publicationsbox__box__Publications__count__\" style=\"display:none\">Error</span></div>                   \n                </div></div>\n            ";

        let delRowButtonHtml = "";
        if (nRows > 1) {
            // while removing we only remove the element in the DOM, 
            // and don't clean up onValidates, $f, rules variables for simplicity.
            delRowButtonHtml = "<a role='button' href='#' title='Delete row' class='btn btn-danger btn-sm' style='float:right' onclick='delRow_Publicationsbox(event, " + nRows + ")'><span class='fa fa-minus-circle'></span> Delete row</a><br style='clear:both'>"
        }
        if (nRows_Publicationsbox_real + 1 >= 6) {
            $("#rowAdder_Publicationsbox").attr('disabled', 'true');
        }
        let rowHtml = "<div class='box-row' id='" + rowId + "'>" + html.replace(/__count__/g, nRows_Publicationsbox) + delRowButtonHtml + "</div>";
        for (let i = 0; i < elements.length; i++) {
            let elemName = elements[i].name.replace(/__count__/g, nRows_Publicationsbox);

            rules[elemName] = elements[i].validationrule;
            onValidates[elemName] = (err) => {
              if (err.constructor !== Array) $("#error-" + elemName).hide();
              else                           $("#error-" + elemName).show().html(err[0].message);
            };

            $f[elemName] = "";
        }
        //rowHtml += "</div>";

        // finally append the row to the table
        $("#Publicationsbox").append(rowHtml);

        event && event.preventDefault();
        event && event.stopPropagation();

        return false;
    }
    
    for (let i = 0; i < 1; i++)
        addRow_Publicationsbox();
    


    var nRows_Awardsbox = 0;
    var nRows_Awardsbox_real = 0;
    function delRow_Awardsbox(event, rowNumber) {
        let rowId = "Awardsbox-" + rowNumber;
        $("#" + rowId).remove();
        nRows_Awardsbox_real--;
        if (nRows_Awardsbox_real < 6) {
            $("#rowAdder_Awardsbox").attr('disabled', false);
        }
        event && event.preventDefault();
        event && event.stopPropagation();
        return false;
    }
    function addRow_Awardsbox(event) {
        // create every element in the row
        // add each element to the rules array
        // NOT-SUPPORTED: call addTrigger on each element
        // add function to onValidates for each element
        // add each element to the $f object
        let nRows = ++nRows_Awardsbox;
        nRows_Awardsbox_real++;
        let rowId = "Awardsbox-" + nRows;
        let elements = [{"name":"Awardsbox__box__Awards/Prizes/Sports/NCC etc__count__","validationrule":"required"}];
        let html = "\n            <div class=\"form-group row\" id=\"fieldset__64929\">\n        <div class=\"col row\">\n                <label  id=\"label-Awardsbox__box__AwardsPrizesSportsNCCetc__count__\" class=\"col-form-label col-md-4\" for=\"Awardsbox__box__AwardsPrizesSportsNCCetc__count__\">Awards/Prizes/Sports/NCC etc<span id=\"asterisk-Awardsbox__box__AwardsPrizesSportsNCCetc__count__\" style=\"color:red\">*</span></label><div class=\"col-md-4\"><input name=\"Awardsbox__box__AwardsPrizesSportsNCCetc__count__\" placeholder=\"Enter Details Here\" onchange=\"triggers[&quot;Awardsbox__box__AwardsPrizesSportsNCCetc__count__&quot;].forEach(function(f, i) { f.call(this, event) });\" id=\"Awardsbox__box__AwardsPrizesSportsNCCetc__count__\" class=\"form-control form-control-sm\"><span class=\"error\" id=\"error-Awardsbox__box__AwardsPrizesSportsNCCetc__count__\" style=\"display:none\">Error</span></div>                  \n            </div></div>\n        ";

        let delRowButtonHtml = "";
        if (nRows > 1) {
            // while removing we only remove the element in the DOM, 
            // and don't clean up onValidates, $f, rules variables for simplicity.
            delRowButtonHtml = "<a role='button' href='#' title='Delete row' class='btn btn-danger btn-sm' style='float:right' onclick='delRow_Awardsbox(event, " + nRows + ")'><span class='fa fa-minus-circle'></span> Delete row</a><br style='clear:both'>"
        }
        if (nRows_Awardsbox_real + 1 >= 6) {
            $("#rowAdder_Awardsbox").attr('disabled', 'true');
        }
        let rowHtml = "<div class='box-row' id='" + rowId + "'>" + html.replace(/__count__/g, nRows_Awardsbox) + delRowButtonHtml + "</div>";
        for (let i = 0; i < elements.length; i++) {
            let elemName = elements[i].name.replace(/__count__/g, nRows_Awardsbox);

            rules[elemName] = elements[i].validationrule;
            onValidates[elemName] = (err) => {
              if (err.constructor !== Array) $("#error-" + elemName).hide();
              else                           $("#error-" + elemName).show().html(err[0].message);
            };

            $f[elemName] = "";
        }
        //rowHtml += "</div>";

        // finally append the row to the table
        $("#Awardsbox").append(rowHtml);

        event && event.preventDefault();
        event && event.stopPropagation();

        return false;
    }
    
    for (let i = 0; i < 1; i++)
        addRow_Awardsbox();
    


    var nRows_ProfessionalExperiencebox = 0;
    var nRows_ProfessionalExperiencebox_real = 0;
    function delRow_ProfessionalExperiencebox(event, rowNumber) {
        let rowId = "ProfessionalExperiencebox-" + rowNumber;
        $("#" + rowId).remove();
        nRows_ProfessionalExperiencebox_real--;
        if (nRows_ProfessionalExperiencebox_real < 6) {
            $("#rowAdder_ProfessionalExperiencebox").attr('disabled', false);
        }
        event && event.preventDefault();
        event && event.stopPropagation();
        return false;
    }
    function addRow_ProfessionalExperiencebox(event) {
        // create every element in the row
        // add each element to the rules array
        // NOT-SUPPORTED: call addTrigger on each element
        // add function to onValidates for each element
        // add each element to the $f object
        let nRows = ++nRows_ProfessionalExperiencebox;
        nRows_ProfessionalExperiencebox_real++;
        let rowId = "ProfessionalExperiencebox-" + nRows;
        let elements = [{"name":"ProfessionalExperiencebox__box__undefined__count__"},{"name":"ProfessionalExperiencebox__box__Position Held__count__"},{"name":"ProfessionalExperiencebox__box__From__count__","validationrule":"required|date"},{"name":"ProfessionalExperiencebox__box__To__count__","validationrule":"required|date"}];
        let html = "\n                <div class=\"form-group row\" id=\"fieldset__28808\">\n        <div class=\"col row\">\n                    <label  id=\"label-ProfessionalExperiencebox__box__undefined__count__\" class=\"col-form-label col-md-3\" for=\"ProfessionalExperiencebox__box__undefined__count__\">Name & Address of Employer</label><div class=\"col-md-9\"><textarea placeholder=\"Enter Details Here\" name=\"ProfessionalExperiencebox__box__undefined__count__\" onchange=\"triggers[&quot;ProfessionalExperiencebox__box__undefined__count__&quot;].forEach(function(f, i) { f.call(this, event) });\" id=\"ProfessionalExperiencebox__box__undefined__count__\" class=\"form-control form-control-sm\"></textarea><span class=\"error\" id=\"error-ProfessionalExperiencebox__box__undefined__count__\" style=\"display:none\">Error</span></div>\n                </div></div>\n                <div class=\"form-group row\" id=\"fieldset__59175\">\n        <div class=\"col row\">\n                    <label  id=\"label-ProfessionalExperiencebox__box__PositionHeld__count__\" class=\"col-form-label col-md-3\" for=\"ProfessionalExperiencebox__box__PositionHeld__count__\">Position Held</label><div class=\"col-md-9\"><input name=\"ProfessionalExperiencebox__box__PositionHeld__count__\" placeholder=\"Enter Details Here\" onchange=\"triggers[&quot;ProfessionalExperiencebox__box__PositionHeld__count__&quot;].forEach(function(f, i) { f.call(this, event) });\" id=\"ProfessionalExperiencebox__box__PositionHeld__count__\" class=\"form-control form-control-sm\"><span class=\"error\" id=\"error-ProfessionalExperiencebox__box__PositionHeld__count__\" style=\"display:none\">Error</span></div>\n                </div></div>\n                <div class=\"form-group row\" id=\"fieldset__61637\">\n        <div class=\"col row\">\n                    <label  id=\"label-ProfessionalExperiencebox__box__From__count__\" class=\"col-form-label col-md-3\" for=\"ProfessionalExperiencebox__box__From__count__\">From : (dd/mm/yyyy)<span id=\"asterisk-ProfessionalExperiencebox__box__From__count__\" style=\"color:red\">*</span></label><div class=\"col-md-3\"><input name=\"ProfessionalExperiencebox__box__From__count__\" placeholder=\"dd/mm/yyyy\" onchange=\"triggers[&quot;ProfessionalExperiencebox__box__From__count__&quot;].forEach(function(f, i) { f.call(this, event) });\" id=\"ProfessionalExperiencebox__box__From__count__\" class=\"form-control form-control-sm\"><span class=\"error\" id=\"error-ProfessionalExperiencebox__box__From__count__\" style=\"display:none\">Error</span></div> \n                    <label  id=\"label-ProfessionalExperiencebox__box__To__count__\" class=\"col-form-label col-md-3\" for=\"ProfessionalExperiencebox__box__To__count__\">To : (dd/mm/yyyy)<span id=\"asterisk-ProfessionalExperiencebox__box__To__count__\" style=\"color:red\">*</span></label><div class=\"col-md-3\"><input name=\"ProfessionalExperiencebox__box__To__count__\" placeholder=\"dd/mm/yyyy\" onchange=\"triggers[&quot;ProfessionalExperiencebox__box__To__count__&quot;].forEach(function(f, i) { f.call(this, event) });\" id=\"ProfessionalExperiencebox__box__To__count__\" class=\"form-control form-control-sm\"><span class=\"error\" id=\"error-ProfessionalExperiencebox__box__To__count__\" style=\"display:none\">Error</span></div> \n                </div></div>\n            ";

        let delRowButtonHtml = "";
        if (nRows > 1) {
            // while removing we only remove the element in the DOM, 
            // and don't clean up onValidates, $f, rules variables for simplicity.
            delRowButtonHtml = "<a role='button' href='#' title='Delete row' class='btn btn-danger btn-sm' style='float:right' onclick='delRow_ProfessionalExperiencebox(event, " + nRows + ")'><span class='fa fa-minus-circle'></span> Delete row</a><br style='clear:both'>"
        }
        if (nRows_ProfessionalExperiencebox_real + 1 >= 6) {
            $("#rowAdder_ProfessionalExperiencebox").attr('disabled', 'true');
        }
        let rowHtml = "<div class='box-row' id='" + rowId + "'>" + html.replace(/__count__/g, nRows_ProfessionalExperiencebox) + delRowButtonHtml + "</div>";
        for (let i = 0; i < elements.length; i++) {
            let elemName = elements[i].name.replace(/__count__/g, nRows_ProfessionalExperiencebox);

            rules[elemName] = elements[i].validationrule;
            onValidates[elemName] = (err) => {
              if (err.constructor !== Array) $("#error-" + elemName).hide();
              else                           $("#error-" + elemName).show().html(err[0].message);
            };

            $f[elemName] = "";
        }
        //rowHtml += "</div>";

        // finally append the row to the table
        $("#ProfessionalExperiencebox").append(rowHtml);

        event && event.preventDefault();
        event && event.stopPropagation();

        return false;
    }
    
    for (let i = 0; i < 1; i++)
        addRow_ProfessionalExperiencebox();
    


            function toggleRemoveButtonAndPreview_Signature(event) {
              // Display the preview and remove button if a file has been selected
              // Else hide them
              let files = $("#Signature")[0].files;
              if( files === undefined || !files.length) {
                  $("#removeUploadButton_Signature").hide();
                  $("#filePreview_Signature").hide();
              } else {
                  
                let file = files[0];
                let reader = new FileReader();
                reader.onload = function(e) {
                    $("#filePreview_Signature").html($('<img>', {
                        src: e.target.result,
                        style: "width:100%;"
                    }));
                };
                reader.readAsDataURL(file);
            
                  $("#removeUploadButton_Signature").show();
                  $("#filePreview_Signature").show();
              }
              event && event.stopPropagation();
              event && event.preventDefault();
              return false;
            }
            function removeUpload_Signature(event) {
              // Reset the file input's value and call the toggleRemoveButtonAndPreview
              // to remove the preview and remove button
              $("#Signature")[0].value = "";
              toggleRemoveButtonAndPreview_Signature();
              $f["Signature"] = null;

              event && event.stopPropagation();
              event && event.preventDefault();
              return false;
            }
            // Call the function to hide both the remove button and preview
            // initially. Will be helpful to automatically display them when
            // we get the uploaded values from server also.
            toggleRemoveButtonAndPreview_Signature();
        ;


    function verifyDateInddmmyyyy(date) {
        // date is in format 'dd/mm/yyyy'
        const stdFormat = date.split("/").reverse().join("-");
        const today = new Date();
        const parsedDate = new Date(stdFormat);

        let dd = '' + parsedDate.getDate();
        let mm = '' + (parsedDate.getMonth() + 1);
        let yyyy = '' + parsedDate.getFullYear();

        dd = dd.length == 1 ? ('0' + dd) : dd;
        mm = mm.length == 1 ? ('0' + mm) : mm;

        return date == `${dd}/${mm}/${yyyy}`;
    }
    function calcAge(dob){
        // dob is in format 'dd/mm/yyyy'
        const stdFormat = dob.split("/").reverse().join("-");
        const today = new Date();

        dob = new Date(stdFormat);
        return Math.floor((today.getTime() - dob.getTime()) / (1000*60*60*24*365));
    }

</script>

    <script type="text/javascript">
        (function() {
            var applicationData = <%- JSON.stringify(applicationData) %>;
            var applicationId = applicationData.id;

            $("form").each(function(id, el) {
                var id = $(el).attr("id");
                id = id.replace(/^frm_/, "");
                $(el).attr("action", "/applications/save/" + applicationId + "/" + id);

                var $form = $(el);
                var formId = $form.attr("id");
                var formName = formId.replace(/^frm_/, "");
                var correspondingButtonId = 'submit_'+formName;
                var $button = $('#'+correspondingButtonId);

                function showErrors(errors) {
                    for(var i = 0; i < errors.length; i++) {
                        var name = errors[i].field;
                        if (/__table__/.test(name) || /__box__/.test(name)) {
                            // server sends such names with a dot before the numeric-index.
                            // trim the last dot. Also, the numeric-index it sends is 0 based.
                            // we need to convert it to 1-based.
                            name = name.split(".");
                            var idx = +(name.pop());
                            name = name.join(".") + (idx+1);
                            console.log(name);
                        }
                        $("#error-" + name).html(errors[i].message).show();
                    }
                }

                function disableSaveButton() {
                    $button.html("<i class='fa fa-circle-o-notch fa-spin'></i> Saving")
                    $button.attr('disabled', true);
                }

                function enableSaveButton() {
                    $button.html("Save");
                    $button.attr("disabled", false);
                }

                $('#'+formId).submit((e)=>{
                    e && e.preventDefault();
                    e && e.stopPropagation();

                    disableSaveButton();
                    $(this).find("span.error").hide();

                    var formValues = {};
                    var myRules = {};
                    for (var i = 0; i < this.elements.length; i++) {
                        var name = this.elements[i].name;
                        if (!rules[name]) continue;
                        // $f doesn't get filled if the browser has prefilled data
                        // provide fallback
                        formValues[name] = $f[name] || $(this.elements[i]).val();
                        myRules[name] = rules[name];
                    }

                    indicative.validateAll(formValues, myRules)
                    //Promise.resolve()
                        .then(() => {
                            $('#'+formId).ajaxSubmit(function(data, ts, jqxhr, form){
                                enableSaveButton();
                                console.log(data);
                                if(data.success){
                                    $button.addClass("btn-success").html("<i class='fa fa-check'></i> Saved");
                                    setTimeout(function() {
                                        $button.removeClass("btn-success").html("Save");
                                    }, 2000);
                                } else if (data.validationErrors) {
                                    showErrors(data.validationErrors);
                                } else {
                                    // show dialog
                                }
                            })
                        })
                        .catch((err) => { showErrors(err); enableSaveButton(); })

                    return false;
                })
            });


            // Prefilling
            for (var i = 0; i < applicationData.FormValues.length; i++) {
                var key = applicationData.FormValues[i].FormElement.name;
                var val = applicationData.FormValues[i].value;

                if (/__count__$/.test(key)) {
                    val = JSON.parse(val);
                    var containerName = key.split("__")[0]; // key format: <tableOrBoxName>__[table|box]__<name>__count__
                    // existing rows of a table/box can be obtained via a global variable nRows_<containerName>_real
                    var existingRows = window["nRows_" + containerName + "_real"] || 0;

                    // check how many rows for this container already exist due to other fields.
                    // make more if required.
                    for (var j = existingRows; j < val.length; j++) {
                        window["addRow_" + containerName]();
                    }

                    var keyWithoutCount = key.replace(/__count__$/, "");
                    for (var j = 0; j < val.length; j++) {
                        $("[name=" + keyWithoutCount + (j+1) + "]").val(val[j]);
                        $f[keyWithoutCount + (j+1)] = val[j];
                    }
                } else if ($("[name=" + key + "]").attr("type") === "file") {
                    $("#filePreview_" + key)
                        .html('<img src="' + val + '" style="width:100%"><br>' +
                                '<small><i>This photo has been uploaded earlier. To replace it, press "Browse". ' +
                                'Otherwise you don\'t have to take any action</i></small>').show();
                    console.log($("#filePreview_" + key));
                    $f[key] = val;
                } else {
                    $("[name=" + key + "]").val(val);
                    $f[key] = val;
                }
            }
        })();
        </script>
</body>
</html>
