<!DOCTYPE html>
<html>
<head>
    <title>Faculty Recruitment | NIT Trichy</title>
    <%- include('partials/commonHeaderIncludes.partial.ejs') %>
</head>
<body>
    <%- include('partials/topNavbar.partial.ejs') %>

    {{body}}

    <%- include('partials/footer.partial.ejs') %>

    {{script}}

    <script type="text/javascript">
        (function() {
            var applicationData = <%- JSON.stringify(applicationData) %>;
            var applicationId = applicationData.id;

            $("form").each(function(id, el) {
                var id = $(el).attr("id");
                id = id.replace(/^frm_/, "");
                $(el).attr("action", "/applications/save/" + applicationId + "/" + id);

                var $form = $(el);
                var formId = $form.attr("id");
                var formName = formId.replace(/^frm_/, "");
                var correspondingButtonId = 'submit_'+formName;
                var $button = $('#'+correspondingButtonId);

                function showErrors(errors) {
                    for(var i = 0; i < errors.length; i++) {
                        var name = errors[i].field;
                        if (/__table__/.test(name) || /__box__/.test(name)) {
                            // server sends such names with a dot before the numeric-index.
                            // trim the last dot. Also, the numeric-index it sends is 0 based.
                            // we need to convert it to 1-based.
                            name = name.split(".");
                            var idx = +(name.pop());
                            name = name.join(".") + (idx+1);
                            console.log(name);
                        }
                        $("#error-" + name).html(errors[i].message).show();
                    }
                }

                function disableSaveButton() {
                    $button.html("<i class='fa fa-circle-o-notch fa-spin'></i> Saving")
                    $button.attr('disabled', true);
                }

                function enableSaveButton() {
                    $button.html("Save");
                    $button.attr("disabled", false);
                }

                $('#'+formId).submit((e)=>{
                    e && e.preventDefault();
                    e && e.stopPropagation();

                    disableSaveButton();
                    $(this).find("span.error").hide();

                    var formValues = {};
                    var myRules = {};
                    for (var i = 0; i < this.elements.length; i++) {
                        var name = this.elements[i].name;
                        if (!rules[name]) continue;
                        formValues[name] = $f[name];
                        myRules[name] = rules[name];
                    }

                    console.log(formValues, myRules)
                    indicative.validateAll(formValues, myRules)
                    //Promise.resolve()
                        .then(() => {
                            $('#'+formId).ajaxSubmit(function(data, ts, jqxhr, form){
                                enableSaveButton();
                                console.log(data);
                                if(data.success){
                                    $button.addClass("btn-success").html("<i class='fa fa-check'></i> Saved");
                                    setTimeout(function() {
                                        $button.removeClass("btn-success").html("Save");
                                    }, 2000);
                                } else if (data.validationErrors) {
                                    showErrors(data.validationErrors);
                                } else {
                                    // show dialog
                                }
                            })
                        })
                        .catch((err) => { showErrors(err); enableSaveButton(); })

                    return false;
                })
            });


            // Prefilling
            for (var i = 0; i < applicationData.FormValues.length; i++) {
                var key = applicationData.FormValues[i].FormElement.name;
                var val = applicationData.FormValues[i].value;

                if (/__count__$/.test(key)) {
                    val = JSON.parse(val);
                    var containerName = key.split("__")[0]; // key format: <tableOrBoxName>__[table|box]__<name>__count__
                    // existing rows of a table/box can be obtained via a global variable nRows_<containerName>_real
                    var existingRows = window["nRows_" + containerName + "_real"] || 0;

                    // check how many rows for this container already exist due to other fields.
                    // make more if required.
                    for (var j = existingRows; j < val.length; j++) {
                        window["addRow_" + containerName]();
                    }

                    var keyWithoutCount = key.replace(/__count__$/, "");
                    for (var j = 0; j < val.length; j++) {
                        $("[name=" + keyWithoutCount + (j+1) + "]").val(val[j]);
                        $f[keyWithoutCount + (j+1)] = val[j];
                    }
                } else if ($("[name=" + key + "]").attr("type") === "file") {
                    $("#filePreview_" + key)
                        .html('<img src="' + val + '" style="width:100%"><br>' +
                                '<small><i>This photo has been uploaded earlier. To replace it, press "Browse". ' +
                                'Otherwise you don\'t have to take any action</i></small>').show();
                    console.log($("#filePreview_" + key));
                    $f[key] = val;
                } else {
                    $("[name=" + key + "]").val(val);
                    $f[key] = val;
                }
            }
        })();
        </script>
</body>
</html>